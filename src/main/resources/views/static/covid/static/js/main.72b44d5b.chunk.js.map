{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Patient/PatientVaccinatedLIst.js","main/webapp/jsx/components/Immunization/ImmunizationPage.js","main/webapp/jsx/components/Tetanus/TetanusPage.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/Immunization/ImmunizationHome.js","main/webapp/jsx/components/Tetanus/TetanusHome.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","Patients","calculate_age","dob","today","Date","birthDate","age_now","getFullYear","getMonth","children","MaterialTable","icons","title","columns","field","filtering","data","query","Promise","resolve","reject","axios","concat","baseUrl","pageSize","page","headers","then","response","result","records","map","row","name","firstName","lastName","hospital_number","participantId","gender","age","count","Label","size","vaccinationStatus","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","Button","MdDashboard","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","split","m","getDate","divStyle","borderRadius","Home","key","setKey","useState","Fragment","className","startIcon","FaUserPlus","textTransform","Row","Col","xl","Card","Body","Tabs","id","activeKey","onSelect","k","Tab","eventKey","PatientList","PatientVaccinatedLIst","ImmunizationPage","TetanusPage","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","classes","console","log","useEffect","ExpansionPanel","ExpansionPanelSummary","md","root2","ButtonMui","TiArrowBack","dateParts","dateObject","moment","format","identifier","phoneNumber","contactPoint","find","obj","type","value","getPhoneNumber","address","city","houseAddress","line","landMark","getAddress","Divider","useStyles","navItemText","SubMenu","patientObjs","activeItem","setActiveItem","setpatientObj","genderType","setGenderType","Observation","observation","filter","x","catch","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","getAge","Vaccination","errors","setErrors","temp","covidEffect","setCovidEffect","vaccine","setVaccine","objValues","setObjValues","adverseEffect","batchNumber","doseNumber","patientId","vaccinationFacility","vaccineDate","saving","setSaving","VACCINE","COVID_ADVERSE_EFFECT","handleInputChange","e","target","Modal","isOpen","showModal","toggle","Form","ModalHeader","ModalBody","CardBody","_Fragment","FormGroup","Input","onChange","InputGroup","max","MatButton","SaveIcon","preventDefault","Object","values","every","post","toast","loadPatients","disabled","CancelIcon","PatientVaccinationHistory","vacinationList","setVaccinationtList","modal","setModal","openDeleteModal","setOpenDeleteModal","React","toggleDeleteModal","record","setRecord","async","patients","vaccineName","position","Dropdown","item","LoadEditModal","IconMenu","LoadDeleteModal","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","message","RecentHistory","VaccinationHistory","PatientnHistory","recentActivities","setRecentActivities","loading","setLoading","useHistory","PatientHistory","personId","activities","LoadViewPage","action","path","actionType","isLoading","date","viewable","Icon","LoadDeletePage","fontFamily","border","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","devices","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","tryAgain","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","selectedFingers","setSelectedFingers","getPersonBiometrics","green","fingersCodeset","length","personCapturedFingers","_","uniq","biometricItems","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","index","lastModifiedDate","Toggle","as","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","y","cx","cy","r","alignRight","deleteBiometric","finger","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","for","deviceName","selectedDevice","errorType","errorName","required","_ref","validate","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","InclusionCriteria","vaccination","setVaccination","setValues","category","patient_id","questionAnswers","visit_date","datatype","responses","_ref2","_ref3","entries","question_id","answer","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","vitalSignModal","setVitalSignModal","reInfectionModal","setReinfectionModal","signsSymptomsModal","setSignsSymptomsModal","medicationModal","setMedicationModal","chronicMedicationModal","setChronicMedicationModal","supportiveCareModal","setSupportiveCareModal","vaccinationHistory","setVaccinationHistory","inclusionHistory","setInclusionHistory","demograhicHistory","setDemographicHistory","vitalHistory","setVitalHistory","comobitieHistory","setComobitieHistory","reinfectionHistory","setReinfectionHistory","signsSymptomsHistory","setSignsSymptomsHistory","chronicMedicationHistory","setChronicMedicationHistory","medicationHistory","setMedicationHistory","supportiveCarenHistory","setSupportiveCareHistory","CardContent","Grid","padded","Column","Segment","raised","ribbon","cursor","divided","floated","inclusionCriteriaToggle","Demographic","demographicToggle","ViccinationToggle","VitalSign","VitalSignToggle","Comorbitie","ComorbitieToggle","ReinfectionToggle","ChronicMedicationToggle","MedicationToggle","SignsSymptoms","SignsSymptomsToggle","SupportiveCareToggle","library","add","faCheckSquare","faCoffee","faEdit","faTrash","demo","background","default","inline","Immunization","immunizationDetail","setImmunizationDetail","hepB0","opv0","bcg","opv1","penta1","pcv1","rota1","opv2","penta2","pcv2","rota2","opv3","penta3","pcv3","rota3","ipv","vitaminA1","vitaminA2","measles1","yellowFever","menA","measles2","Hpv9yrs","comments","missedVaccine","basicInfo","setBasicInfo","dateOfChildVisit","childName","childCardNo","followUpAddress","sexId","birthdate","user","ageDisabled","setAgeDisabled","open","setOpen","selectedOption","setSelectedOption","setBirthdate","dropdownOptions","calculateAgeInDays","timeDiff","days","Math","floor","daysOld","push","checking","parseInt","handleDropdownChange","handleInputChangeBasic","Birthdate","event","measle1","measle2","hpv9yrs","comment","Tetanus","clientDetails","setClientDetails","dateOfClientVisit","clientCardNo","clientDob","clientName","clientFollowUpAddress","clientPhoneNumber","tetanusDiphtheria","setTetanusDiphtheria","td1","td2","td3","td4","td5","patientDTO","setPatientDTO","showContactCard","setShowContactCard","onClickContactCard","handleInputChangeClientDetails","FaPlus","FaAngleDown","tp1","tp3","tp4","tp5","handleCancel","art","setArt","activeTab","prepId","PatientCardDetail","AddmissionHome","ImmunizationHome","UserRegistration","active","contact","dateOfBirth","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","ninNumber","relatives","setRelatives","phone","email","relationshipId","middleName","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","userDetail","useLocation","knownMedicalCondition","medicalCondition","occupation","vaccineId","visitDate","visitId","workInHealthSector","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","GetCountry","setStateByCountryId","useCallback","sort","handleDateOfBirthChange","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","hosiptalNumber","hospitalNumber","uniqueId","getRelationship","relationship","handleInputChangeRelatives","replace","slice","handleInputChangePhoneNumber","inputName","NumberValue","checkNumberLimit","onClickRelativeCard","autoClose","hideProgressBar","margingRight","min","defaultChecked","ageNumber","currentDate","setDate","setMonth","dobNew","toISOString","abs","maritalStatusOption","occupationOption","educationOption","getCountryId","landmark","handleEditRelative","relative","splice","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","handleCancelSaveRelationship","checked","htmlFor","adverseEffectOption","Spinner","newConatctsInfo","contactInfo","fullName","surname","patientForm","person","vaccinationEnrollment","POSITION","BOTTOM_CENTER","subErrors","flexGrow","setToday","substr","editRelative","setEditRelative","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","femaleStatus","setfemaleStatus","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","personDto","prepSupporter","uniqueClientId","ancUnique","carePoints","setCarePoints","sourceReferral","setSourceReferral","hivStatus","setHivStatus","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","newSex","setNewSex","pregnancyStatus","setPregnancyStatus","transferIn","setTransferIn","ovcEnrolled","setOvcEnrolled","hideTargetGroup","setHideTargetGroup","getSex","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","identifiers","altphone","country","maritalStatus","employmentStatus","education","getStateId","patientAge","sex","alert","getSexId","checkPhoneNumberBasic","dateOfRegistration1","PhoneInput","containerStyle","inputStyle","placeholder","maxLength","AddIcon","handleAddRelative","code","TOP_RIGHT","maxWidth","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","enrollment","getCharacters","handleCheckBox","random","hivEnrollment","put","App","Router","Switch","Route","PatientDetail","RegisterPatientPage","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","label","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.72b44d5b.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n\r\n// export const url =  'http://localhost:8383/api/v1/';\r\n// export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzA2NjMyMDgwfQ.xuqRb2RQM79GQdudQdUYIp7_e2e0y5sRcD9eqRdXM3w6q9iN66ztDLsruX9j8ZmB9qDmajCFj09l1lRG1VOWEw';","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n       // const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        // if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n        //     age_now--;\r\n        // }\r\n\r\n        // if (age_now === 0) {\r\n        //     return m + \" month(s)\";\r\n        // }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/vaccinated-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender:  row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n       // const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        // if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n        //     age_now--;\r\n        // }\r\n\r\n        // if (age_now === 0) {\r\n        //     return m + \" month(s)\";\r\n        // }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            //{ title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n       // const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        // if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n        //     age_now--;\r\n        // }\r\n\r\n        // if (age_now === 0) {\r\n        //     return m + \" month(s)\";\r\n        // }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            //{ title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientList from './Patient/PatientList'\r\nimport PatientVaccinatedLIst from './Patient/PatientVaccinatedLIst'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport ImmunizationPage from \"./Immunization/ImmunizationPage\"\r\nimport TetanusPage from \"./Tetanus/TetanusPage\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>COVID-19</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n\r\n\r\n\r\n        <br/><br/>\r\n\r\n      <br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <PatientList />\r\n                  </Tab>\r\n                  <Tab eventKey=\"vaccinated\" title=\"Covid-19 Vaccinated Patients\">                   \r\n                    <PatientVaccinatedLIst />\r\n                  </Tab>\r\n                  <Tab eventKey=\"immunization\" title=\"Routine Immunization\">                   \r\n                    <ImmunizationPage />\r\n                  </Tab>\r\n                  <Tab eventKey=\"tetanus\" title=\"Tetanus Diphtheria\">\r\n                    <TetanusPage/>\r\n                  </Tab>\r\n\r\n                  \r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    //<VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  console.log(patientObj)\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n    const getPhoneNumber = (identifier) => {\r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(\r\n        (obj) => obj.type === \"phone\"\r\n      );\r\n      return phoneNumber ? phoneNumber.value : \"\";\r\n    };\r\n    const getAddress = (identifier) => {\r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find((obj) => obj.city);\r\n      const houseAddress =\r\n        address && address.line[0] !== null ? address.line[0] : \"\";\r\n      const landMark =\r\n        address && address.city && address.city !== null ? address.city : \"\";\r\n      return address ? houseAddress + \" \" + landMark : \"\";\r\n    };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.lastName }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{patientObj.participantId}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dob }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>\r\n                          {calculate_age(moment(patientObj.dob).format(\"DD-MM-YYYY\"))}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.gender!==null ? patientObj.gender.display : \"\"}\r\n                        </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>\r\n                        {getPhoneNumber(patientObj.contactPoint)}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)}{\" \"}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    const [activeItem, setActiveItem] =  useState(\"recent-history\")\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    const loadVaccination = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    }\r\n    const loadIcu = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'icu'})\r\n    }\r\n    const loadAddmission = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    }\r\n    const onClickDischarge = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const onClickImmunization = (row) =>{   \r\n        setActiveItem('immunization')     \r\n        props.setActiveContent({...props.activeContent, route:'immunization-patient'})\r\n    }\r\n    const onClickTetanus = (row) =>{   \r\n        setActiveItem('tetanus')     \r\n        props.setActiveContent({...props.activeContent, route:'tetanus-patient'})\r\n    }\r\n    const loadPatientHistory = ()=>{\r\n        //setActiveItem('history')\r\n        props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    }\r\n\r\n\r\n    return (\r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>  \r\n                <Menu.Item onClick={() => onClickImmunization()} > Immunization</Menu.Item>   \r\n                <Menu.Item onClick={() => onClickTetanus()} > Tetanus </Menu.Item> \r\n{/* \r\n                 <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        COVID_ADVERSE_EFFECT();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccination Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare, } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from 'semantic-ui-react'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport Vaccination from './../Vaccination/AddViccination'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n    const [vacinationList, setVaccinationtList] = useState([])\r\n    const patientObj = props && props.patientObj ? props.patientObj : []\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [openDeleteModal, setOpenDeleteModal] = React.useState(false)\r\n    const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n    const [record, setRecord] = useState(null)\r\n    const [saving, setSaving] = useState(false)\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients Vaccinations\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVaccinationtList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const loadVaccinationModal =(row)=> {\r\n        setModal(!modal)\r\n    }\r\n    const LoadEditModal =(row)=>{\r\n        setRecord(row)\r\n        toggle()  \r\n    }\r\n    const LoadDeleteModal =(row)=>{\r\n        toggleDeleteModal()\r\n        setRecord(row)\r\n    }\r\n    console.log(record)\r\n    const LoadDeletePage =()=>{\r\n        setSaving(true)       \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}covid/vaccinations/${record.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            patients()\r\n            toggleDeleteModal()\r\n            setSaving(false) \r\n        })\r\n        .catch((error) => {\r\n            setSaving(false) \r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n            }\r\n            else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n        });  \r\n    \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n       <Card>\r\n         <CardBody>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                onClick={() => loadVaccinationModal()}\r\n                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Vaccination </span>\r\n            </Button>       \r\n            <br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient Vaccination History \"\r\n              columns={[\r\n                { title: \"Vaccine\", field: \"vaccine\", filtering: false },\r\n                {\r\n                  title: \"Vaccine Date\",\r\n                  field: \"vaccineDate\",\r\n                },\r\n                \r\n                { title: \"Dose Number\", field: \"doseNumber\", filtering: false },  \r\n                { title: \"Location\", field: \"location\", filtering: false },      \r\n                { title: \"Batch Number\", field: \"batchNumber\", filtering: false }, \r\n                { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n                { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false }, \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ vacinationList.map((row) => ({\r\n                    vaccine: row.vaccineName,\r\n                    vaccineDate: row.vaccineDate,\r\n                    batchNumber: row.batchNumber,\r\n                    doseNumber: row.doseNumber,\r\n                    location: row.location,\r\n                    vaccinationFacility: row.vaccinationFacility,\r\n                    adverseEffect: row.adverseEffect,\r\n                    actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>\r\n                  \r\n                  }))}\r\n            \r\n                options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            />\r\n    \r\n        </CardBody>\r\n       </Card>\r\n      <Vaccination toggle={toggle} showModal={modal} patientObj={props.patientObj} loadPatients={patients} records={record}/>\r\n      <Modal show={openDeleteModal} toggle={toggleDeleteModal} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete - <b>{record && record.batchNumber}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggleDeleteModal} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientVaccinationHistory;\r\n\r\n\r\n","import React, { Fragment} from \"react\";\r\nimport VaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst RecentHistory = (props) => {\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <div className=\"row\">\r\n        <VaccinationHistory patientObj={props.patientObj}/>\r\n     \r\n      </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n//import  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst Immunization =(props)=>{\r\n \r\n    \r\n            const [immunizationDetail, setImmunizationDetail] =useState(\r\n                { \r\n                    hepB0:\"\",\r\n                    opv0:\"\",\r\n                    bcg:\"\",\r\n                    opv1:\"\",\r\n                    penta1:\"\",\r\n                    pcv1:\"\",\r\n                    rota1:\"\",\r\n                    opv2:\"\",\r\n                    penta2:\"\",\r\n                    pcv2:\"\",\r\n                    rota2:\"\",\r\n                    opv3:\"\",\r\n                    penta3:\"\",\r\n                    pcv3:\"\",\r\n                    rota3:\"\",\r\n                    ipv:\"\",\r\n                    vitaminA1:\"\", \r\n                    vitaminA2: \"\",\r\n                    measles1:\"\",\r\n                    yellowFever:\"\",\r\n                    menA:\"\",\r\n                    measles2:\"\",\r\n                    Hpv9yrs:\"\",\r\n                    comments:\"\",\r\n                    missedVaccine:\"\",\r\n            \r\n            \r\n                }\r\n\r\n            )\r\n            const [basicInfo, setBasicInfo]= useState(\r\n                {\r\n                    dateOfChildVisit:\"\",\r\n                    childName:\"\",\r\n                    childCardNo:\"\",\r\n                    followUpAddress:\"\",\r\n                    sexId:\"\",\r\n                    phoneNumber:\"\",\r\n                    birthdate:\"\",\r\n                    //dob:\"\"\r\n \r\n                }\r\n            )\r\n            //console.log(basicInfo)\r\n            \r\n            const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n            const [errors, setErrors] = useState({})\r\n            const classes = useStyles();\r\n            const [ageDisabled,setAgeDisabled]=useState(true);\r\n            const [open, setOpen] = React.useState(false)\r\n            const toggle = () => setOpen(!open);\r\n            const [selectedOption, setSelectedOption]=useState(\"\")\r\n            const [birthdate, setBirthdate] = useState('');\r\n            const dropdownOptions = [{\r\n                value: \"yes\",\r\n                name: 'Yes',\r\n            }, {name: 'No',\r\n                value: \"no\"}]\r\n                const calculateAgeInDays = () => {\r\n                    const today = new Date();\r\n                    const birthDate = new Date(birthdate);\r\n                    const timeDiff = today - birthDate;\r\n                    const daysOld = Math.floor(timeDiff / (1000 * 60 * 60 * 24));\r\n                    const days = daysOld/7\r\n                   checking(parseInt(days))\r\n                    return parseInt(days);\r\n\r\n                };\r\n                function checking(daysOld) {\r\n                    let vaccine = [];\r\n                \r\n                    if (daysOld === 0 || daysOld <= 2) {\r\n                        vaccine.push(\"hepB0\");\r\n                        \r\n                    }\r\n                    if (daysOld <= 2) {\r\n                        vaccine.push(\"opv0\");\r\n                    }\r\n                    if (daysOld <= 44) {\r\n                        vaccine.push(\"bcg\");\r\n                    }\r\n                    if (daysOld >= 6 && daysOld <= 92) {\r\n                        vaccine.push(\"opv1\",\"penta1\",\"pcv1\",\"rota1\");\r\n                    }\r\n                    if (daysOld >= 10 && daysOld <= 92) {\r\n                        vaccine.push(\"opv2\",\"penta2\",\"pcv2\",\"rota2\");\r\n                    }\r\n                    if (daysOld >= 14 && daysOld <= 92) {\r\n                        vaccine.push(\"opv3\",\"penta3\",\"pcv3\",\"rota3\");\r\n                    }\r\n                    if (daysOld >= 14 && daysOld <= 44) {\r\n                        vaccine.push(\"ipv\");\r\n                    }\r\n                    if (daysOld >= 24 && daysOld <= 44) {\r\n                        vaccine.push(\"vitaminA1\");\r\n                    }\r\n                    if (daysOld >= 48 && daysOld <= 92) {\r\n                        vaccine.push(\"vitaminA2\");\r\n                    }\r\n                    if (daysOld >= 36 && daysOld <= 44) {\r\n                        vaccine.push(\"measles1\");\r\n                    }\r\n                    if (daysOld >= 36 && daysOld <= 92) {\r\n                        vaccine.push(\"yellowFever\");\r\n                    }\r\n                    if (daysOld >= 36 && daysOld <= 44) {\r\n                        vaccine.push(\"menA\");\r\n                    }\r\n                    if (daysOld >= 72 && daysOld <= 92) {\r\n                        vaccine.push(\"measles2\");\r\n                    }\r\n                    if (daysOld >= 432 && daysOld >= 528) {\r\n                        vaccine.push(\"Hpv9yrs\");\r\n                    }\r\n                    \r\n\r\n                    //console.log(vaccine)\r\n                    return vaccine; \r\n                }\r\n                \r\n \r\n            const handleBirthdateChange = (event) => {\r\n                setBirthdate(event.target.value);\r\n              };\r\n              const handleDobChange = (e) =>{\r\n                setBasicInfo({...basicInfo, [e.target.name]: e.target.value })\r\n              }\r\n            const handleDropdownChange= e => {\r\n               // console.log(e.target.value)\r\n                setErrors({...temp, [e.target.name]:\"\"})\r\n                setImmunizationDetail ({...immunizationDetail,  [e.target.name]: e.target.value});\r\n            \r\n            }\r\n            // const handleDropdownChange = (event) => {\r\n            //     setImmunizationDetail ({...immunizationDetail,  [e.target.name]: e.target.value});\r\n            //   };\r\n            // const handleDateOfBirthChange = (e) => {\r\n            //     if (e.target.value === \"Actual\") {\r\n            //         setAgeDisabled(true);\r\n            //     } else if (e.target.value === \"Estimated\") {\r\n            //         setAgeDisabled(false);\r\n            //     }\r\n            // }\r\n            // const handleAgeChange = (e) => {\r\n            //     const ageNumber = e.target.value.replace(/\\D/g, '')\r\n            //     if (!ageDisabled && ageNumber) {  \r\n\r\n            //         // const currentDate = new Date();\r\n            //         // currentDate.setDate(15);\r\n            //         // currentDate.setMonth(5);\r\n            //         // const estDob = moment(currentDate.toISOString());\r\n            //         // const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //         //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n\r\n            //         //.childDob =moment(daysOld).format(\"YYYY-MM-DD\")\r\n            //     }\r\n            //     //setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n            // }\r\n            const handleInputChangeBasic = e => {  \r\n                setErrors({...temp, [e.target.name]:\"\"})      \r\n                setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n                // if(e.target.name==='firstName' && e.target.value!==''){\r\n                //     const name = alphabetOnly(e.target.value)\r\n                //     setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n                // }\r\n                // if(e.target.name==='lastName' && e.target.value!==''){\r\n                //     const name = alphabetOnly(e.target.value)\r\n                //     setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n                // }\r\n                // if(e.target.name==='middleName' && e.target.value!==''){\r\n                //     const name = alphabetOnly(e.target.value)\r\n                //     setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n                // }\r\n                // if(e.target.name==='ninNumber' && e.target.value!==''){\r\n                //     const ninNumberValue = checkNINLimit(e.target.value)\r\n                //     setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n                // }\r\n                // if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n                // async function getHosiptalNumber() {\r\n                //     const hosiptalNumber=e.target.value\r\n                //     const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                //             { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                //         );\r\n                //     if(response.data!==true){\r\n                //         setHospitalNumStatus(false)\r\n                //         errors.hospitalNumber=\"\"\r\n                //         setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                //         setHospitalNumStatus2(true)\r\n                //     }else{\r\n                //         errors.hospitalNumber=\"\"\r\n                //         toast.error(\"Error! Hosiptal Number already exist\");\r\n                //         setHospitalNumStatus(true)\r\n                //         setHospitalNumStatus2(false)\r\n                //     }\r\n                // }\r\n                // getHosiptalNumber();\r\n                // } \r\n                        \r\n            }\r\n            const validate = () => {\r\n        \r\n                //temp.nameOfHealthFacility = basicInfo.nameOfHealthFacility ? \"\" : \"Name of Health Facility is required\"\r\n                //temp.ward = basicInfo.ward ? \"\" : \"Ward  is required.\"\r\n                //temp.lga = basicInfo.lga ? \"\" : \"Local Government Area is required.\"\r\n                //temp.state = basicInfo.state ? \"\" : \"State is required.\"\r\n                //temp.date = basicInfo.date ? \"\" : \"Date of Registration is required.\"\r\n                //temp.facilityType = basicInfo.facilityType ? \"\" : \"Facility Type is required.\"\r\n\r\n                temp.hepB0 = immunizationDetail.hepB0 ? \"\" : \"This filled  is required.\"\r\n                temp.opv0 = immunizationDetail.opv0 ? \"\" : \"This filled  is required.\"    \r\n                temp.bcg = immunizationDetail.bcg ? \"\" : \"This filled  is required.\"  \r\n                temp.opv1 = immunizationDetail.opv1 ? \"\" : \"This filled  is required.\" \r\n                temp.penta1 = immunizationDetail.penta1 ? \"\" : \"This filled  is required.\" \r\n                temp.pcv1 = immunizationDetail.pcv1 ? \"\" : \"This filled  is required.\" \r\n                temp.rota1 = immunizationDetail.rota1 ? \"\" : \"This filled  is required.\" \r\n                temp.opv = immunizationDetail.opv ? \"\" : \"This filled is required.\" \r\n                temp.penta2 = immunizationDetail.penta2 ? \"\" : \"This filled is required.\" \r\n                temp.pcv2 = immunizationDetail.pcv2 ? \"\" : \"This filled is required.\" \r\n                temp.rota2 = immunizationDetail.rota2 ? \"\" : \"This filled is required.\"\r\n                temp.opv3 = immunizationDetail.opv3 ? \"\" : \"This filled is required.\"\r\n                temp.penta3 = immunizationDetail.penta3 ? \"\" : \"This filled is required.\"\r\n                temp.penta3 = immunizationDetail.rota2 ? \"\" : \"This filled is required.\"\r\n                temp.pcv3 = immunizationDetail.pcv3 ? \"\" : \"This filled is required.\" \r\n                temp.rota3 = immunizationDetail.rota3 ? \"\" : \"This filled is required.\" \r\n                temp.vitaminA1 = immunizationDetail.vitaminA1 ? \"\" : \"This filled is required.\" \r\n                temp.vitaminA2 = immunizationDetail.vitaminA2 ? \"\" : \"This filled is required.\" \r\n                temp.measles1 = immunizationDetail.measles1 ? \"\" : \"This filled is required.\" \r\n                temp.menA = immunizationDetail.menA? \"\" : \"This filled is required.\"\r\n                temp.measles2 = immunizationDetail.measles2? \"\" : \"This filled is required.\"\r\n                temp.Hpv9yrs = immunizationDetail.Hpv9yrs? \"\" : \"This filled is required.\"\r\n                temp.comments = immunizationDetail.comments? \"\" : \"This filled is required.\" \r\n                \r\n                //VACCINATION FORM VALIDATION\r\n                \r\n                \r\n                    setErrors({ ...temp })\r\n            return Object.values(temp).every(x => x == \"\")\r\n        } \r\n            let temp = { ...errors }\r\n            // const handleSubmit = async (e)=>{\r\n            //     e.preventDefault(); \r\n            //         if(validate()){\r\n            //             setSaving(true)\r\n            //         }\r\n\r\n\r\n            // }\r\n            return(\r\n                <>\r\n\r\n                    <Card className={classes.root}>\r\n                        <CardContent>\r\n                            <div className='col-xl-12 col-lg-12'>\r\n                                <Form>\r\n                                    {/* <div className=\"card\">\r\n                                        <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                            <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                        </div>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"basic-form\">\r\n                                        \r\n                                            <div className=\"row\">\r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label for=\"firstName\">Name Of Health Facility <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                        <Input\r\n                                                            className=\"form-control\"\r\n                                                            type=\"text\"\r\n                                                            name=\"nameOfHealthFacility\"\r\n                                                            id=\"nameOfHealthFacility\"\r\n                                                            value={basicInfo.nameOfHealthFacility}\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        />\r\n                                                        {errors.nameOfHealthFacility !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Ward</Label>\r\n                                                        <Input\r\n                                                            className=\"form-control\"\r\n                                                            type=\"text\"\r\n                                                            name=\"ward\"\r\n                                                            id=\"ward\"\r\n                                                            value={basicInfo.ward}\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                        <input\r\n                                                            className=\"form-control\"\r\n                                                            type=\"text\"\r\n                                                            name=\"lga\"\r\n                                                            id=\"lga\"\r\n                                                            value={basicInfo.lga}\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        />\r\n                                                    {errors.lga !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={\"row\"}>\r\n\r\n                                                    <div className=\"form-group mb-3 col-md-3\">\r\n                                                        <FormGroup>\r\n                                                            <Label>Date</Label>\r\n                                                            <input\r\n                                                                className=\"form-control\"\r\n                                                                name=\"date\"\r\n                                                                type='date'\r\n                                                                id=\"date\"\r\n                                                                onChange={handleInputChangeBasic}\r\n                                                                value={basicInfo.date}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            >\r\n                                                            </input>\r\n                                                            \r\n                                                        </FormGroup>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group  col-md-4\">\r\n                                                        <FormGroup>\r\n                                                            <Label>Facility Type </Label>\r\n                                                            <Input\r\n                                                            className=\"form-control\"\r\n                                                            name=\"facilityType\"\r\n                                                            type='select'\r\n                                                            id=\"facilityType\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.facilityType}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                             <option value=\"\" >Select</option>\r\n                                                            <option value=\"Facility\" >Private</option>\r\n                                                            <option value=\"Community\" >Public</option>\r\n                                                        </Input>\r\n                                                        {errors.facilityType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.facilityType}</span>\r\n                                                        ) : \"\" }\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div> */}\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                            <h5 className=\"card-title\"  style={{color:'#fff'}}> NHMIS TETANUS DIPHTHERIA (TD) REGISTER FOR PREGNANT AND NON PREGNANT WOMEN</h5>\r\n                                        </div>\r\n\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\"> \r\n                                                <FormGroup>                                 \r\n                                                    <Label>Date Of Child Visit</Label>\r\n                                                        <input\r\n                                                            className=\"form-control\"\r\n                                                            type=\"date\"\r\n                                                            name=\"dateOfChildVisit\"\r\n                                                            id=\"dateOfChildVisit\"\r\n                                                            value={basicInfo.dateOfChildVisit}\r\n                                                             onChange={handleDobChange}          \r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        /> \r\n                                                </FormGroup>              \r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Child's Name </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"childName\"\r\n                                                        value={basicInfo.childName}\r\n                                                        id=\"childName\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />  \r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label >Child's Card No </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"childCardNo\"\r\n                                                        value={basicInfo.childCardNo}\r\n                                                        id=\"childCardNo\"\r\n                                                     onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />   \r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label >Follow Up Address  <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                        <input\r\n                                                            className=\"form-control\"\r\n                                                            type=\"text\"\r\n                                                            name=\"followUpAddress\"\r\n                                                            id=\"followUpAddress\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.followUpAddress} \r\n                                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        />\r\n                                                        {errors.followUpAddress !==\"\" ? (\r\n                                                                <span className={classes.error}>{errors.followUpAddress}</span>\r\n                                                        ) : \"\" }           \r\n                                                    </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                        <select\r\n                                                                className=\"form-control\"\r\n                                                                name=\"sexId\"\r\n                                                                id=\"sexId\"\r\n                                                                 onChange={handleInputChangeBasic}\r\n                                                                value={basicInfo.sexId}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            >\r\n                                                                <option value={\"\"}>Select</option>\r\n                                                                <option value={\"male\"}>Male</option>\r\n                                                                <option value={\"female\"}>Female</option>\r\n                                                            </select>\r\n                                                            {errors.sexId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                    <Label >Phone Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <InputGroup> \r\n                                                        <input\r\n                                                            className=\"form-control\"\r\n                                                            type=\"text\"\r\n                                                            name=\"phoneNumber\"\r\n                                                            id=\"phoneNumber\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.phoneNumber} \r\n                                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        />\r\n                                                    </InputGroup>\r\n                                                    {errors.phoneNumber !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    </FormGroup>\r\n                                            </div>                      \r\n                                            <div className=\"form-group mb-3 col-md-2\">\r\n                                                    {/* <FormGroup>\r\n                                                        <Label>Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                        <div className=\"radio\">\r\n                                                            <label>\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    value=\"Actual\"\r\n                                                                    name=\"dateOfBirth\"\r\n                                                                    defaultChecked\r\n                                                                    onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                /> Actual\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div className=\"radio\">\r\n                                                            <label>\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    value=\"Estimated\"\r\n                                                                    name=\"dateOfBirth\"\r\n                                                                    \r\n                                                                    onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                /> Estimated\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </FormGroup> */}\r\n                                            </div>\r\n                                            <div className='row'>\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date OF Birth </Label>\r\n                                                    <input\r\n                                                         className=\"form-control\"\r\n                                                         type=\"date\"\r\n                                                         name=\"dob\"  \r\n                                                         id=\"dob\"\r\n                                                        //max={basicInfo.dateOfRegistration===\"\" ? moment(new Date()).format(\"YYYY-MM-DD\") : basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.Birthdate}\r\n                                                        onChange={handleBirthdateChange}\r\n                                                  \r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div> \r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <div >\r\n                                                    <Label>Age</Label>\r\n                                                    {/* <input\r\n                                                         //type=\"number\"\r\n                                                        // name=\"age\"                                                       \r\n                                                        // className=\"form-control\"                                                        \r\n                                                        // id=\"age\"\r\n                                                        //min=\"5\"\r\n                                                        //value={basicInfo.birthdate}\r\n                                                        //disabled={ageDisabled}\r\n                                                        //onChange={handleAgeChange}\r\n                                                        \r\n                                                        //placeholder={`${calculateAgeInDays()} days old.`}\r\n                                                        //style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    /> */}\r\n                                                    {birthdate && (\r\n                                                            <p>\r\n                                                         {calculateAgeInDays()} week(s) Old.\r\n                                                            </p>\r\n                                                        )} \r\n                                                        </div>\r\n                                                        \r\n                                                   \r\n                                                </FormGroup>\r\n\r\n                                            </div>\r\n                                            </div>\r\n                                            <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                            <h5 className=\"card-title\"  style={{color:'#fff'}}>Antigens </h5>\r\n                                             </div>\r\n                                            { calculateAgeInDays() >= 0 && calculateAgeInDays() <= 2 &&\r\n                                             (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> Hep B.O</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"hepB0\" \r\n                                                    value={immunizationDetail.hepB0}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n                                            </div> )}\r\n                                            {  calculateAgeInDays() <= 2 &&(\r\n                                                <div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> OPV 0</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"opv0\"\r\n                                                    value={immunizationDetail.opv0}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div> )}\r\n                                            {  calculateAgeInDays() <= 44 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> BCG </Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"bcg\"\r\n                                                    value={immunizationDetail.bcg}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            { calculateAgeInDays() >=6 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> OPV 1</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"opv1\"\r\n                                                    value={immunizationDetail.opv1}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            { calculateAgeInDays() >= 6 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> Penta 1</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"penta1\"\r\n                                                    value={immunizationDetail.penta1}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 6 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> PCV 1</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"pcv1\"\r\n                                                    value={immunizationDetail.pcv1}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 6 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> ROTA 1</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"rota1\"\r\n                                                    value={immunizationDetail.rota1}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 10 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> OPV 2</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"opv2\"\r\n                                                    value={immunizationDetail.opv2}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 10 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> PENTA 2</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"penta2\"\r\n                                                    value={immunizationDetail.penta2}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 10 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> PCV 2</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"pcv2\"\r\n                                                    value={immunizationDetail.pcv2}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 10 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> ROTA 2</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"rota2\"\r\n                                                    value={immunizationDetail.rota2}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 14 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> OPV 3</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"opv3\"\r\n                                                    value={immunizationDetail.opv3}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 14 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> PENTA 3</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"penta3\"\r\n                                                    value={immunizationDetail.penta3}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 14 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> PCV 3</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"pcv3\"\r\n                                                    value={immunizationDetail.pcv3}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 14 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> ROTA 3</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"rota3\"\r\n                                                    value={immunizationDetail.rota3}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 14 && calculateAgeInDays() <= 44 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> IPV</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"ipv\"\r\n                                                    value={immunizationDetail.ipv}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 24 && calculateAgeInDays() <= 44 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> VITAMIN A1(100,000IU)</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"vitaminA1\"\r\n                                                    value={immunizationDetail.vitaminA1}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 48 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> VITAMIN A2(200,000IU)</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"vitaminA2\"\r\n                                                    value={immunizationDetail.vitaminA2}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 36 && calculateAgeInDays() <= 44 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> Measle 1</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"measle1\"\r\n                                                    value={immunizationDetail.measle1}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 36 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> Men A</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"menA\"\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 36 && calculateAgeInDays() <= 44 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> Measle 2R</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"measle2\"\r\n                                                    value={immunizationDetail.measle2}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                           {calculateAgeInDays() >= 72 && calculateAgeInDays() <= 92 &&\r\n                                           ( <div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> HPV (9years to 14 years)</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"hpv9yrs\"\r\n                                                    value={immunizationDetail.hpv9yrs}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                           \r\n                                           <div className=\"form-group mb-6 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label> Comment </Label>\r\n                                                    <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"comment\"\r\n                                                    //onChange={handleImmunizationDetail}\r\n                                                    value={immunizationDetail.comment}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-6 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label>Have you missed any previous vaccine</Label>\r\n                                                     <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"missedVaccine\"\r\n                                                        id=\"missedVaccine\"\r\n                                                        value={immunizationDetail.missedVaccine}\r\n                                                        //onChange={handleInputChangeAttempt}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                    >\r\n                                                        <option value=\"\"> Select </option>\r\n                                                        <option value=\"yes\"> Yes </option>\r\n                                                        <option value=\"no\"> No</option> \r\n\r\n                                            </Input>\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        { immunizationDetail.missedVaccine === 'yes' && (\r\n                                            <div>\r\n                                             ANTIGENMISSED \r\n                                            </div>\r\n\r\n                                        )}\r\n\r\n                                            \r\n                                                            \r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </Form>\r\n                                \r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </>\r\n            )\r\n            }\r\n            \r\n\r\nexport default Immunization\r\n","import React, { useState } from 'react'\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n//import  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst Tetanus =(props)=>{\r\n \r\n            const [clientDetails, setClientDetails] =useState(\r\n                {\r\n                    dateOfClientVisit:\"\",\r\n                    clientCardNo:\"\",\r\n                    clientDob:\"\",\r\n                    clientName:\"\",\r\n                    clientFollowUpAddress:\"\",\r\n                    clientPhoneNumber:\"\"\r\n                }\r\n            )\r\n            // const [basicInfo, setBasicInfo]= useState(\r\n            //     {\r\n            //         nameOfHealthFacility:\"\",\r\n            //         ward:\"\",\r\n            //         lga:\"\",\r\n            //         state:\"\",\r\n            //         date:\"\",\r\n            //         facilityType:\"\"\r\n\r\n    \r\n            //     }\r\n            // )\r\n            const [tetanusDiphtheria, setTetanusDiphtheria]= useState(\r\n                {\r\n                    basicInfo:\"\",\r\n                    td1:\"\",\r\n                    td2:\"\",\r\n                    td3:\"\",\r\n                    td4:\"\",\r\n                    td5:\"\", \r\n                    comment:\"\"\r\n                }\r\n            )\r\n            const [objValues, setObjValues] = useState([]);\r\n            const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n            const [errors, setErrors] = useState({})\r\n            const [patientDTO, setPatientDTO]= useState({\"personInfo\":\"\", })\r\n            \r\n            const history = useHistory();\r\n            const [saving, setSaving] = useState(false);\r\n            const [open, setOpen] = React.useState(false)\r\n            const toggle = () => setOpen(!open);\r\n            const [showContactCard, setShowContactCard] = useState(true);\r\n            const onClickContactCard =() =>{\r\n                setShowContactCard(!showContactCard)\r\n              }\r\n            const [selectedOption, setSelectedOption] = useState('');\r\n            const dropdownOptions = [{\r\n                id: 1,\r\n                name: 'P',\r\n            }, {name: 'NP',\r\n                id: 2}];\r\n            const handleDropdownChange = (event) => {\r\n              setSelectedOption(event.target.value);\r\n            };  \r\n            const handleCancel =()=>{\r\n                history.push({ pathname: '/' });\r\n            }\r\n\r\n            const classes = useStyles();\r\n            \r\n            // const handleInputChangeBasic = e => {  \r\n            //     setErrors({...temp, [e.target.name]:\"\"})      \r\n            //     setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n            //     // if(e.target.name==='firstName' && e.target.value!==''){\r\n            //     //     const name = alphabetOnly(e.target.value)\r\n            //     //     setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n            //     // }\r\n            //     // if(e.target.name==='lastName' && e.target.value!==''){\r\n            //     //     const name = alphabetOnly(e.target.value)\r\n            //     //     setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n            //     // }\r\n            //     // if(e.target.name==='middleName' && e.target.value!==''){\r\n            //     //     const name = alphabetOnly(e.target.value)\r\n            //     //     setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n            //     // }\r\n            //     // if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            //     //     const ninNumberValue = checkNINLimit(e.target.value)\r\n            //     //     setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n            //     // }\r\n            //     // if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            //     // async function getHosiptalNumber() {\r\n            //     //     const hosiptalNumber=e.target.value\r\n            //     //     const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n            //     //             { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n            //     //         );\r\n            //     //     if(response.data!==true){\r\n            //     //         setHospitalNumStatus(false)\r\n            //     //         errors.hospitalNumber=\"\"\r\n            //     //         setObjValues ({...objValues,  uniqueId: e.target.value});\r\n            //     //         setHospitalNumStatus2(true)\r\n            //     //     }else{\r\n            //     //         errors.hospitalNumber=\"\"\r\n            //     //         toast.error(\"Error! Hosiptal Number already exist\");\r\n            //     //         setHospitalNumStatus(true)\r\n            //     //         setHospitalNumStatus2(false)\r\n            //     //     }\r\n            //     // }\r\n            //     // getHosiptalNumber();\r\n            //     // } \r\n                        \r\n            // } \r\n            const handleInputChangeClientDetails = e =>{\r\n                setErrors({...temp, [e.target.name]:\"\"})\r\n                setClientDetails({...clientDetails, [e.target.name]:e.target.value});\r\n            }\r\n            \r\n            let temp = { ...errors }\r\n            const validate = () => {\r\n        \r\n                // temp.nameOfHealthFacility = basicInfo.nameOfHealthFacility ? \"\" : \"Name of Health Facility is required\"\r\n                // temp.ward = basicInfo.ward ? \"\" : \"Ward  is required.\"\r\n                // temp.lga = basicInfo.lga ? \"\" : \"Local Government Area is required.\"\r\n                // temp.state = basicInfo.state ? \"\" : \"State is required.\"\r\n                // temp.date = basicInfo.date ? \"\" : \"Date of Registration is required.\"\r\n                // temp.facilityType = basicInfo.facilityType ? \"\" : \"Facility Type is required.\"\r\n \r\n                //VACCINATION FORM VALIDATION\r\n                //temp.td1 = tetanusDiphtheria.td1 ? \"\" : \"This field is required\"\r\n                //temp.td2 = tetanusDiphtheria.td2 ? \"\" : \"This field is required\"\r\n                //temp.td3 = tetanusDiphtheria.td3 ? \"\" : \"This field is required\"\r\n                //temp.td4 = tetanusDiphtheria.td4 ? \"\" : \"This field is required\"\r\n                //temp.td5 = tetanusDiphtheria.td5 ? \"\" : \"This field is required\"\r\n                //temp.comment = tetanusDiphtheria.comment ? \"\" : \"This field is required\"\r\n            \r\n                    setErrors({ ...temp })\r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n            // const handleSubmit = async (e)=>{\r\n            //     e.preventDefault(); \r\n            //     tetanusDiphtheria.basicInfo=objValues\r\n            //         if(validate()){\r\n            //             // setSaving(true)\r\n            //             const tetanusDiphtheria ={\r\n            //                 td1:\"\",\r\n            //                 td2:\"\",\r\n            //                 td3:\"\",\r\n            //                 td4:\"\",\r\n            //                 td5:\"\", \r\n            //                 comment:\"\"\r\n\r\n            //             }\r\n            //             const basicInfo = {\r\n            //                 tetanusDiphtheria:[\"\"],\r\n            //                 nameOfHealthFacility:\"\",\r\n            //                 ward:\"\",\r\n            //                 lga:\"\",\r\n            //                 state:\"\",\r\n            //                 date:\"\",\r\n            //                 facilityType:\"\"\r\n            //             }\r\n\r\n            //             setSaving(true);\r\n                        \r\n                        \r\n            //         }\r\n            //         try {patientDTO.person=basicInfo;\r\n            //             console.log(basicInfo)\r\n            //         //patientDTO.vaccinationEnrollment=objValues;\r\n            //         const response = await axios.post(`${baseUrl}covid/enrollments`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            //         toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n            //         setSaving(false)\r\n            //         history.push('/');\r\n            //         }catch (error) {   \r\n            //             setSaving(false)             \r\n            //             if(error.response && error.response.data){\r\n            //                 let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n            //                 if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n            //                     toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n            //                 }else{\r\n            //                     toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n            //                 }\r\n            //             }\r\n            //             else{\r\n            //                 toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n            //             }\r\n            //         }\r\n                    \r\n\r\n\r\n            // }\r\n\r\n\r\n            return(\r\n                <>\r\n                    {/* <Card className={classes.root}> */}\r\n                        <CardContent>\r\n                            <div className='col-xl-12 col-lg-12'>\r\n                                <Form>\r\n                                <div className=\"card\">\r\n                                    {/* <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                        <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                    </div> */}\r\n\r\n                                \r\n                                    <div className=\"basic-form\">\r\n                                    \r\n                                        <div >\r\n                                            {/* <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">Name Of Health Facility <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nameOfHealthFacility\"\r\n                                                        id=\"nameOfHealthFacility\"\r\n                                                        value={basicInfo.nameOfHealthFacility}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.nameOfHealthFacility !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div> */}\r\n\r\n                                            {/* <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Ward</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"ward\"\r\n                                                        id=\"ward\"\r\n                                                        value={basicInfo.ward}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        \r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div> */}\r\n\r\n                                            {/* <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lga\"\r\n                                                        id=\"lga\"\r\n                                                        value={basicInfo.lga}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lga !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div> */}\r\n                                        </div>\r\n                                        {/* <div className={\"row\"}>\r\n\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Date</Label>\r\n                                                        <input\r\n                                                            className=\"form-control\"\r\n                                                            name=\"date\"\r\n                                                            type='date'\r\n                                                            id=\"date\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.date}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        >\r\n                                                        </input>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Facility Type </Label>\r\n                                                        <Input\r\n                                                            className=\"form-control\"\r\n                                                            name=\"facilityType\"\r\n                                                            type='select'\r\n                                                            id=\"facilityType\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.facilityType}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                             <option value=\"\" >Select</option>\r\n                                                            <option value=\"Facility\" >Private</option>\r\n                                                            <option value=\"Community\" >Public</option>\r\n                                                        </Input>\r\n                                                        {errors.facilityType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.facilityType}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                        \r\n                                        </div> */}\r\n                                    \r\n                                </div>\r\n                                </div>\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                            <h5 className=\"card-title\"  style={{color:'#fff'}}> National Health Management Information System Child Immunization Register</h5>\r\n                                        </div>\r\n\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"form-group mb-3 col-md-4\">                                    \r\n                                                \r\n                                                        <Label>Date Of Client Visit</Label>\r\n                                                            <input\r\n                                                                className=\"form-control\"\r\n                                                                type=\"date\"\r\n                                                                name=\"dateOfClientVisit\"\r\n                                                                id=\"dateOfClientVisit\"\r\n                                                                value={clientDetails.dateOfClientVisit}\r\n                                                                onChange={handleInputChangeClientDetails}          \r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            />          \r\n                                                \r\n                                                </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Client Card No </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"clientCardNo\"\r\n                                                        id=\"clientCardNo\"\r\n                                                        value={clientDetails.clientCardNo}\r\n                                                        onChange={handleInputChangeClientDetails}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />                 \r\n                                            </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Client Name </Label>\r\n                                                        <input\r\n                                                            className=\"form-control\"\r\n                                                            type=\"text\"\r\n                                                            name=\"clientName\"\r\n                                                            value={clientDetails.clientName}\r\n                                                            id=\"childCardNo\"\r\n                                                            onChange={handleInputChangeClientDetails}\r\n                                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        />     \r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label >Client Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"clientDob\"\r\n                                                        id=\"clientDob\"\r\n                                                        onChange={handleInputChangeClientDetails}\r\n                                                        value={clientDetails.clientDob} \r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.clientDob !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                                ) : \"\" }           \r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> Client Follow Up Address<span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                            className=\"form-control\"\r\n                                                            type='text'\r\n                                                            name=\"clientFollowUpAddress\"\r\n                                                            id=\"clientFollowUpAddress\"\r\n                                                            onChange={handleInputChangeClientDetails}\r\n                                                            value={clientDetails.clientFollowUpAddress}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                        </input>\r\n                                                        {errors.clientFollowUpAddress !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.sexId}</span>\r\n                                                            ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                             <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label > Client Phone Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"clientPhoneNumber\"\r\n                                                        id=\"clientPhoneNumber\"\r\n                                                        onChange={handleInputChangeClientDetails}\r\n                                                        value={clientDetails.clientPhoneNumber} \r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                {errors.clientPhoneNumber !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                                ) : \"\" }\r\n                                                </FormGroup>\r\n                                             </div>\r\n                                           \r\n\r\n                                                            \r\n                                            </div>\r\n\r\n                                        </div> \r\n                                    </div>\r\n                                    <div className=\"card\">\r\n                                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Tetanus Diphtheria </h5>\r\n                                                    {showContactCard===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaAngleDown /></span> </>)}\r\n                                                </div>\r\n                                                    {showContactCard && (\r\n                                                    <div className=\"card-body\">\r\n                                                        <div className={\"row\"}>\r\n                                                            <div className=\"form-group  col-md-4\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>TD 1 <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        type=\"dropdown\"\r\n                                                                        name=\"tp1\"\r\n                                                                        id=\"tp1\"\r\n                                                                        value={tetanusDiphtheria.selectedOption}\r\n                                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                        onChange={handleDropdownChange}\r\n                                                                        >\r\n                                                                        <option value=\"\">Select</option>\r\n                                                                        {dropdownOptions.map((value, index) => (\r\n                                                                            <option key={index} value={value.id}>\r\n                                                                                {value.name}\r\n                                                                            </option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n                                                                    {errors.tp1 !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.tp1}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    \r\n                                                                </FormGroup>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-md-4\">\r\n                                                            <FormGroup>\r\n                                                                    <Label>TD 2 <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        type=\"dropdown\"\r\n                                                                        name=\"tp2\"\r\n                                                                        id=\"tp2\"\r\n                                                                        value={tetanusDiphtheria.selectedOption}\r\n                                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                        onChange={handleDropdownChange}\r\n                                                                        >\r\n                                                                        <option value=\"\">Select</option>\r\n                                                                        {dropdownOptions.map((value, index) => (\r\n                                                                            <option key={index} value={value.id}>\r\n                                                                                {value.name}\r\n                                                                            </option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n                                                                    {errors.tp1 !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.tp1}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    \r\n                                                                </FormGroup>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-md-4\">\r\n                                                            <FormGroup>\r\n                                                                    <Label>TD 3 <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        type=\"dropdown\"\r\n                                                                        name=\"tp3\"\r\n                                                                        id=\"tp3\"\r\n                                                                        value={tetanusDiphtheria.selectedOption}\r\n                                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                        onChange={handleDropdownChange}\r\n                                                                        >\r\n                                                                        <option value=\"\">Select</option>\r\n                                                                        {dropdownOptions.map((value, index) => (\r\n                                                                            <option key={index} value={value.id}>\r\n                                                                                {value.name}\r\n                                                                            </option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n                                                                    {errors.tp3 !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.tp1}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    \r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"form-group  col-md-4\">\r\n                                                            <FormGroup>\r\n                                                                    <Label>TD 4 <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        type=\"dropdown\"\r\n                                                                        name=\"tp4\"\r\n                                                                        id=\"tp4\"\r\n                                                                        value={tetanusDiphtheria.selectedOption}\r\n                                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                        onChange={handleDropdownChange}\r\n                                                                        >\r\n                                                                        <option value=\"\">Select</option>\r\n                                                                        {dropdownOptions.map((value, index) => (\r\n                                                                            <option key={index} value={value.id}>\r\n                                                                                {value.name}\r\n                                                                            </option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n                                                                    {errors.tp4 !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.tp4}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    \r\n                                                                </FormGroup>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group  col-md-4\">\r\n                                                            <FormGroup>\r\n                                                                    <Label>TD 5 <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        type=\"dropdown\"\r\n                                                                        name=\"tp5\"\r\n                                                                        id=\"tp5\"\r\n                                                                        value={tetanusDiphtheria.selectedOption}\r\n                                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                        onChange={handleDropdownChange}\r\n                                                                        >\r\n                                                                        <option value=\"\">Select</option>\r\n                                                                        {dropdownOptions.map((value, index) => (\r\n                                                                            <option key={index} value={value.id}>\r\n                                                                                {value.name}\r\n                                                                            </option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n                                                                    {errors.tp5 !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.tp5}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    \r\n                                                                </FormGroup>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group  col-md-4\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>Comment <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                    <input\r\n                                                                        className=\"form-control\"\r\n                                                                        type=\"text\"\r\n                                                                        name=\"comment\"\r\n                                                                        id=\"comment\"\r\n                                                                        value={tetanusDiphtheria.selectedOption}\r\n                                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                        //onChange={handleInputChangeBasic}\r\n                                                                     />\r\n                                                                   \r\n                                                                    {errors.comment !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.comment}</span>\r\n                                                                        ) : \"\" }\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        \r\n                                                    </div>\r\n                                                    )}\r\n                                            </div>\r\n                                    <br />\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                //onClick={handleSubmit}\r\n                                //disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n                    {/* </Card> */}\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                {/* <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body> */}\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n                               </> \r\n                               //</Form>\r\n                            //</div>\r\n                        //</CardContent>\r\n                    //</Card>\r\n                //</>\r\n            )\r\n            }\r\n\r\nexport default Tetanus\r\n","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport Biometrics from './Biometric'\r\nimport AddmissionHome from './../Admission/AddmissionHome';\r\nimport PatientVaccinationHistory from './../Vaccination/VaccinationHistory'\r\nimport ImmunizationHome from '../Immunization/ImmunizationHome';\r\nimport Tetanus from '../Tetanus/TetanusHome';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n\r\n     }, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >COVID-19 /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='addmission' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='vaccination' &&( <PatientVaccinationHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='discharge' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='icu' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)} \r\n          {activeContent.route==='immunization-patient' &&( <ImmunizationHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='tetanus-patient' &&( <Tetanus patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)} \r\n           \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:1,\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    //const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"vaccinationEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [showContactCard, setShowContactCard] = useState(true);\r\n     const [vaccine, setVaccine] = useState([]);\r\n     //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n     const [objValues, setObjValues] = useState(\r\n        {   adverseEffect: \"\",\r\n            batchNumber:\"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: \"\",\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\",\r\n            knownMedicalCondition: \"\",\r\n            medicalCondition: \"\",\r\n            occupation: \"\",\r\n            vaccineId: \"\",\r\n            visitDate: \"\",\r\n            patientId: \"\",\r\n            visitId: \"\",\r\n            workInHealthSector: \"\"\r\n        });\r\n     \r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    let temp = { ...errors }\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        VACCINE();        \r\n        GetCountry();\r\n        setStateByCountryId()\r\n        COVID_ADVERSE_EFFECT()\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            toast.error('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    //COVID_ADVERSE_EFFECT\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    // const loadTopLevelCountry = useCallback(async () => {\r\n    //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n    //     settopLevelUnitCountryOptions(response.data);\r\n    // }, []);\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n    const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n            setStateByCountryId(1); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId() {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/1`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data.sort());\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n        }\r\n                \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value === \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value === \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        const ageNumber = e.target.value.replace(/\\D/g, '')\r\n        if (!ageDisabled && ageNumber) {  \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n            if(ageNumber!=='' && ageNumber>=60){\r\n                toggle()\r\n            }\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})      \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        \r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n           // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\"         \r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            setSaving(true)\r\n            let newConatctsInfo=[]            \r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                //patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.vaccinationEnrollment=objValues;\r\n                const response = await axios.post(`${baseUrl}covid/enrollments`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                setSaving(false)\r\n                history.push('/');\r\n            } catch (error) {   \r\n                setSaving(false)             \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }  \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }          \r\n    }      \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setRelatives({...relatives, [inputName]: NumberValue})    \r\n    }\r\n    // const checkPhoneNumberBasic=(e, inputName)=>{\r\n    //     const limit = 10;\r\n    //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    // } \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n    const handleCheckBoxworkInHealthSector =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['workInHealthSector']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['workInHealthSector']: false}); \r\n        }\r\n    }\r\n    \r\n    const handleInputChangePhoneNumber=(e, inputName)=>{\r\n        const limit = 11;\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setBasicInfo({...basicInfo, [inputName]: NumberValue})\r\n    }\r\n    const checkNumberLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    const handleCheckBoxknownMedicalCondition =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: false});  \r\n        }\r\n    }\r\n    const onClickContactCard =() =>{\r\n      setShowContactCard(!showContactCard)\r\n    }\r\n    const onClickRelativeCard =() =>{\r\n      setShowRelative(!showRelative)\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >COVID-19 /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration===\"\" ? moment(new Date()).format(\"YYYY-MM-DD\") : basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        \r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"5\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                                <p><b style={{color:\"red\"}}>{basicInfo.age!==\"\" && basicInfo.age< 0 ? \"The minimum age is 5\" : \" \"} </b></p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                    {showContactCard===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showContactCard && (\r\n                                  <div className=\"card-body\">\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Phone Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      maxLength={5}\r\n                                                      name=\"phoneNumber\"\r\n                                                      id=\"phoneNumber\"\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'phoneNumber')}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                                  {errors.phoneNumber !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                      ) : \"\" }\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Alt. Phone Number</Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      value={basicInfo.altPhonenumber}\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                      \r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"altPhonenumber\"\r\n                                                    id=\"altPhonenumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'altPhonenumber')}}\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                 />\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Email</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"email\"\r\n                                                      name=\"email\"\r\n                                                      id=\"email\"\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      value={basicInfo.email}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      required\r\n                                                  />\r\n                                                \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"row\">\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Country <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"countryId\"\r\n                                                      id=\"countryId\"\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      value={basicInfo.countryId}\r\n                                                      disabled\r\n                                                      onChange={getStates}\r\n                                                      >\r\n                                                      <option value={\"\"}>Select</option>\r\n                                                      {countries.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.countryId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.countryId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"stateId\"\r\n                                                      id=\"stateId\"\r\n                                                      value={basicInfo.stateId}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={getProvinces}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {states.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.stateId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.stateId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Province/District/LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"district\"\r\n                                                      id=\"district\"\r\n                                                      value={basicInfo.district}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {provinces.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.district !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.district}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Street Address <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"address\"\r\n                                                      id=\"address\"\r\n                                                      value={basicInfo.address}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                  />\r\n                                                {errors.address !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.address}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Landmark</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"landmark\"\r\n                                                      id=\"landmark\"\r\n                                                      value={basicInfo.landmark}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      \r\n                                                  />\r\n                                                  \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                    {showRelative===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showRelative && (\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        {/* <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        /> */}\r\n                                                                        <Input\r\n                                                                            type=\"text\"\r\n                                                                            name=\"phone\"\r\n                                                                            id=\"phone\"\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                            value={relatives.phone}\r\n                                                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {errors.phone !==\"\" ? (\r\n                                                                            <span className={classes.error}>{errors.phone}</span>\r\n                                                                            ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        {/* <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton> */}\r\n                                    {/* </div> */}\r\n                                </div>\r\n                                )}\r\n                            </div>\r\n                            {/* Adding First DOSAGE FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>COVID-19 First Dosage</h5>\r\n                                </div>\r\n\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-4\">                                    \r\n                            <div className=\"form-check custom-checkbox ml-1 \">\r\n                                <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                name=\"workInHealthSector\"\r\n                                id=\"workInHealthSector\"                                        \r\n                                onChange={handleCheckBoxworkInHealthSector}\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"workInHealthSector\"\r\n                                >\r\n                                Do you work in the Health sector ?\r\n                                </label>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                        \r\n                            <div className=\"form-check custom-checkbox ml-1 \">\r\n                                <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                name=\"knownMedicalCondition\"\r\n                                id=\"knownMedicalCondition\"                                        \r\n                                onChange={handleCheckBoxknownMedicalCondition}\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"knownMedicalCondition\"\r\n                                >\r\n                                Any known medical condition ?\r\n                                </label>\r\n                            </div>\r\n                            </div>\r\n                            {objValues.knownMedicalCondition===true &&(                                    \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label for=\"knownMedicalCondition\">Medical conditions </Label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            name=\"medicalCondition\"\r\n                                            value={basicInfo.medicalCondition}\r\n                                            id=\"medicalCondition\"\r\n                                            onChange={handleInputChangeBasic}\r\n                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                \r\n                            </div>\r\n                            )}\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                          <FormGroup>\r\n                                          <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                          <Input \r\n                                              type=\"select\"\r\n                                              name=\"vaccine\"\r\n                                              id=\"vaccine\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccine} \r\n                                          >\r\n                                              <option value=\"\" >Select</option>\r\n                                              {vaccine.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.name}\r\n                                                </option>\r\n                                            ))}\r\n                                          </Input>\r\n\r\n                                         \r\n                                          {errors.vaccine !==\"\" ? (\r\n                                                  <span className={classes.error}>{errors.vaccine}</span>\r\n                                          ) : \"\" }           \r\n                                          </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Date of First Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                                                             \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"select\"\r\n                                              name=\"location\"\r\n                                              id=\"location\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.location} \r\n                                          >\r\n                                              <option value=\"\" >Select</option>\r\n                                              <option value=\"Facility\" >Facility</option>\r\n                                              <option value=\"Community\" >Community</option>\r\n                                          </Input>\r\n                                      </InputGroup> \r\n                                      {errors.location !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.location}</span>\r\n                                      ) : \"\" }                                        \r\n                                      </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Facility Name </Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"text\"\r\n                                              name=\"vaccinationFacility\"\r\n                                              id=\"vaccinationFacility\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccinationFacility} \r\n                                          >\r\n                                          </Input>\r\n                                      </InputGroup> \r\n                                      {errors.vaccinationFacility !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                      ) : \"\" }                                        \r\n                                      </FormGroup>\r\n                              </div>\r\n                              )}\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.batchNumber !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.batchNumber}</span>\r\n                                      ) : \"\" }                                         \r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Yes\" >Yes</option>\r\n                                        <option value=\"No\" >No</option>\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.adverseEffect==='Yes' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Reaction Type (Adverse Effect)</Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffectOption\"\r\n                                        id=\"adverseEffectOption\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffectOption} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}      \r\n                            </div>\r\n\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF First DOSAGE */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\nimport Immunization from './main/webapp/jsx/components/Immunization/ImmunizationHome';\r\nimport Tetanus from './main/webapp/jsx/components/Tetanus/TetanusHome'\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path =\"/tetanus-patient\">\r\n            <Tetanus />\r\n          </Route>\r\n          <Route path =\"/immunization-patient\">\r\n            <Immunization />\r\n\r\n          </Route>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}