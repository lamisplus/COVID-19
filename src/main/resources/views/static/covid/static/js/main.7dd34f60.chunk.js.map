{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Patient/PatientVaccinatedLIst.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","calculate_age","dob","today","Date","birthDate","split","age_now","getFullYear","m","getMonth","getDate","icons","title","columns","field","filtering","data","query","Promise","resolve","reject","axios","baseUrl","pageSize","page","headers","then","response","result","records","map","row","name","firstName","lastName","hospital_number","participantId","gender","age","count","Label","size","vaccinationStatus","actions","to","pathname","state","patientObj","ButtonGroup","variant","style","backgroundColor","Button","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","divStyle","borderRadius","Home","useState","key","setKey","className","startIcon","textTransform","Row","Col","xl","Card","Body","Tabs","id","activeKey","onSelect","k","Tab","eventKey","PatientList","PatientVaccinatedLIst","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","classes","console","log","useEffect","ExpansionPanel","ExpansionPanelSummary","md","root2","dateParts","dateObject","moment","format","phone","address","Divider","useStyles","navItemText","SubMenu","patientObjs","Observation","observation","filter","x","type","catch","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","getAge","Vaccination","errors","setErrors","temp","vaccine","setVaccine","adverseEffect","batchNumber","doseNumber","patientId","vaccinationFacility","vaccineDate","objValues","setObjValues","saving","setSaving","VACCINE","handleInputChange","e","target","value","Modal","isOpen","showModal","toggle","Form","ModalHeader","ModalBody","CardBody","FormGroup","Input","onChange","InputGroup","max","preventDefault","Object","values","every","post","toast","loadPatients","disabled","PatientVaccinationHistory","vacinationList","setVaccinationtList","modal","setModal","React","openDeleteModal","setOpenDeleteModal","toggleDeleteModal","record","setRecord","patients","vaccineName","position","Dropdown","item","LoadEditModal","Icon","LoadDeleteModal","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","message","RecentHistory","VaccinationHistory","PatientnHistory","recentActivities","setRecentActivities","loading","setLoading","useHistory","PatientHistory","personId","activities","LoadViewPage","action","path","actionType","isLoading","date","viewable","LoadDeletePage","fontFamily","border","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","length","personCapturedFingers","_","uniq","biometricItems","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","index","lastModifiedDate","Toggle","as","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","y","cx","cy","r","alignRight","finger","find","newStoredBiometrics","updatePatientBiometricStatus","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","for","deviceName","selectedDevice","errorType","errorName","required","validate","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","InclusionCriteria","vaccination","setVaccination","setValues","category","patient_id","questionAnswers","visit_date","datatype","responses","obj","entries","question_id","answer","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","vitalSignModal","setVitalSignModal","reInfectionModal","setReinfectionModal","signsSymptomsModal","setSignsSymptomsModal","medicationModal","setMedicationModal","chronicMedicationModal","setChronicMedicationModal","supportiveCareModal","setSupportiveCareModal","vaccinationHistory","setVaccinationHistory","inclusionHistory","setInclusionHistory","demograhicHistory","setDemographicHistory","vitalHistory","setVitalHistory","comobitieHistory","setComobitieHistory","reinfectionHistory","setReinfectionHistory","signsSymptomsHistory","setSignsSymptomsHistory","chronicMedicationHistory","setChronicMedicationHistory","medicationHistory","setMedicationHistory","supportiveCarenHistory","setSupportiveCareHistory","CardContent","Grid","padded","Column","Segment","raised","ribbon","cursor","divided","floated","VitalSign","Comorbitie","art","setArt","activeTab","prepId","Biometric","library","add","faCheckSquare","faCoffee","faEdit","faTrash","demo","background","default","inline","UserRegistration","active","contact","contactPoint","dateOfBirth","deceased","deceasedDateTime","genderId","identifier","otherName","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","phoneNumber","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","email","relationshipId","middleName","relatives","setRelatives","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","patientDTO","userDetail","user","useLocation","showContactCard","setShowContactCard","knownMedicalCondition","medicalCondition","occupation","vaccineId","visitDate","hospitalNumStatus","setHospitalNumStatus","setHospitalNumStatus2","open","setOpen","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","GetCountry","setStateByCountryId","useCallback","sort","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","hosiptalNumber","hospitalNumber","uniqueId","getRelationship","relationship","handleInputChangeRelatives","handleSubmit","newConatctsInfo","contactInfo","line","fullName","surname","push","patientForm","landmark","person","vaccinationEnrollment","POSITION","BOTTOM_CENTER","subErrors","replace","slice","handleInputChangePhoneNumber","inputName","NumberValue","checkNumberLimit","onClickContactCard","onClickRelativeCard","autoClose","hideProgressBar","margingRight","min","defaultChecked","alert","ageNumber","currentDate","setDate","setMonth","dobNew","toISOString","Math","abs","maritalStatusOption","occupationOption","educationOption","getCountryId","relative","splice","handleEditRelative","handleDeleteRelative","checkPhoneNumber","validateRelatives","checked","htmlFor","Spinner","flexGrow","substr","settopLevelUnitCountryOptions","setfemaleStatus","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","personDto","prepSupporter","uniqueClientId","ancUnique","carePoints","setCarePoints","setSourceReferral","hivStatus","setHivStatus","setEnrollSetting","setTbStatus","setKP","setPregnancyStatus","setOvcEnrolled","getSex","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","identifiers","altphone","country","maritalStatus","employmentStatus","education","city","getStateId","patientAge","sex","getSexId","dateOfRegistration1","checkPhoneNumberBasic","TOP_RIGHT","containerStyle","inputStyle","placeholder","maxLength","code","maxWidth","femaleStatus","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","tbStatus","kP","pregnancyStatus","transferIn","setTransferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus2","enrollment","getCharacters","hivEnrollment","put","handleCheckBox","floor","random","App","PatientDetail","RegisterPatient","EnrollPatient","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","label","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.7dd34f60.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n// export const url =  'http://localhost:8787/api/v1/';\r\n// export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjg1NzAwNDg5fQ.wAWpMg2cOxKQYO6hJRRyNGai3GI9_NEQ0U5B4KzI4ix8j7VaajHXZ4YLyWsZYORcUzJbG2FupZcxQbH2bTFUiQ';","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/vaccinated-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender:  row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientList from './Patient/PatientList'\r\nimport PatientVaccinatedLIst from './Patient/PatientVaccinatedLIst'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>COVID-19</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <PatientList />\r\n                  </Tab>\r\n                  <Tab eventKey=\"vaccinated\" title=\"Vaccinated Patients\">                   \r\n                    <PatientVaccinatedLIst />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  console.log(patientObj)\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.lastName }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{patientObj.participantId}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dob }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>\r\n                          {calculate_age(moment(patientObj.dob).format(\"DD-MM-YYYY\"))}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.gender!==null ? patientObj.gender.display : \"\"}\r\n                        </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.phone!==null ? patientObj.phone :\"\"}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{patientObj.address!==null ? patientObj.address : \"\"} </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    const loadVaccination = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    }\r\n    const loadIcu = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'icu'})\r\n    }\r\n    const loadAddmission = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    }\r\n    const onClickDischarge = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadPatientHistory = ()=>{\r\n        //setActiveItem('history')\r\n        props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    }\r\n\r\n\r\n    return (\r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>                  \r\n                 {/* <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    console.log(props.records)\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Dosage Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare, } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from 'semantic-ui-react'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport Vaccination from './../Vaccination/AddViccination'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n    const [vacinationList, setVaccinationtList] = useState([])\r\n    const patientObj = props && props.patientObj ? props.patientObj : []\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [openDeleteModal, setOpenDeleteModal] = React.useState(false)\r\n    const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n    const [record, setRecord] = useState(null)\r\n    const [saving, setSaving] = useState(false)\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients Vaccinations\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVaccinationtList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const loadVaccinationModal =(row)=> {\r\n        setModal(!modal)\r\n    }\r\n    const LoadEditModal =(row)=>{\r\n        setRecord(row)\r\n        toggle()  \r\n    }\r\n    const LoadDeleteModal =(row)=>{\r\n        toggleDeleteModal()\r\n        setRecord(row)\r\n    }\r\n    console.log(record)\r\n    const LoadDeletePage =()=>{\r\n        setSaving(true)       \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}covid/vaccinations/${record.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            patients()\r\n            toggleDeleteModal()\r\n            setSaving(false) \r\n        })\r\n        .catch((error) => {\r\n            setSaving(false) \r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n            }\r\n            else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n        });  \r\n    \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n       <Card>\r\n         <CardBody>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                onClick={() => loadVaccinationModal()}\r\n                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Vaccination </span>\r\n            </Button>       \r\n            <br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient Vaccination History \"\r\n              columns={[\r\n                { title: \"Vaccine\", field: \"vaccine\", filtering: false },\r\n                {\r\n                  title: \"Vaccine Date\",\r\n                  field: \"vaccineDate\",\r\n                },\r\n                \r\n                { title: \"Dose Number\", field: \"doseNumber\", filtering: false },  \r\n                { title: \"Location\", field: \"location\", filtering: false },      \r\n                { title: \"Batch Number\", field: \"batchNumber\", filtering: false }, \r\n                { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n                { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false }, \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ vacinationList.map((row) => ({\r\n                    vaccine: row.vaccineName,\r\n                    vaccineDate: row.vaccineDate,\r\n                    batchNumber: row.batchNumber,\r\n                    doseNumber: row.doseNumber,\r\n                    location: row.location,\r\n                    vaccinationFacility: row.vaccinationFacility,\r\n                    adverseEffect: row.adverseEffect,\r\n                    actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>\r\n                  \r\n                  }))}\r\n            \r\n                options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            />\r\n    \r\n        </CardBody>\r\n       </Card>\r\n      <Vaccination toggle={toggle} showModal={modal} patientObj={props.patientObj} loadPatients={patients} records={record}/>\r\n      <Modal show={openDeleteModal} toggle={toggleDeleteModal} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete - <b>{record && record.batchNumber}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggleDeleteModal} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientVaccinationHistory;\r\n\r\n\r\n","import React, { Fragment} from \"react\";\r\nimport VaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst RecentHistory = (props) => {\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <div className=\"row\">\r\n        <VaccinationHistory patientObj={props.patientObj}/>\r\n     \r\n      </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport Biometrics from './Biometric'\r\nimport AddmissionHome from './../Admission/AddmissionHome';\r\nimport PatientVaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n\r\n     }, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >COVID-19 /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='addmission' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='vaccination' &&( <PatientVaccinationHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='discharge' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='icu' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}         \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:1,\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    //const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"vaccinationEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [showContactCard, setShowContactCard] = useState(true);\r\n     const [vaccine, setVaccine] = useState([]);\r\n     //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n     const [objValues, setObjValues] = useState(\r\n        {   adverseEffect: \"\",\r\n            batchNumber:\"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: \"\",\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\",\r\n            knownMedicalCondition: \"\",\r\n            medicalCondition: \"\",\r\n            occupation: \"\",\r\n            vaccineId: \"\",\r\n            visitDate: \"\",\r\n            patientId: \"\",\r\n            visitId: \"\",\r\n            workInHealthSector: \"\"\r\n        });\r\n     \r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    let temp = { ...errors }\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        VACCINE();        \r\n        GetCountry();\r\n        setStateByCountryId()\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            toast.error('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    // const loadTopLevelCountry = useCallback(async () => {\r\n    //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n    //     settopLevelUnitCountryOptions(response.data);\r\n    // }, []);\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n    const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n            setStateByCountryId(1); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId() {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/1`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data.sort());\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if(m<18){\r\n                    alert(\"The child is less than 18months\")\r\n                    setDisabledAgeBaseOnAge(true)\r\n                }else{\r\n                    setDisabledAgeBaseOnAge(false)\r\n                }\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n                }\r\n           \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        const ageNumber = e.target.value.replace(/\\D/g, '')\r\n        if (!ageDisabled && ageNumber) {  \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n            if(ageNumber!=='' && ageNumber>=60){\r\n                toggle()\r\n            }\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})      \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        \r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n           // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            setSaving(true)\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                //patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.vaccinationEnrollment=objValues;\r\n                const response = await axios.post(`${baseUrl}covid/enrollments`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                setSaving(false)\r\n                history.push('/');\r\n            } catch (error) {   \r\n                setSaving(false)             \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }          \r\n    }      \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setRelatives({...relatives, [inputName]: NumberValue})    \r\n    }\r\n    // const checkPhoneNumberBasic=(e, inputName)=>{\r\n    //     const limit = 10;\r\n    //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    // } \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n    const handleCheckBoxworkInHealthSector =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['workInHealthSector']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['workInHealthSector']: false}); \r\n        }\r\n    }\r\n    \r\n    const handleInputChangePhoneNumber=(e, inputName)=>{\r\n        const limit = 11;\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setBasicInfo({...basicInfo, [inputName]: NumberValue})\r\n    }\r\n    const checkNumberLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    const handleCheckBoxknownMedicalCondition =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: false});  \r\n        }\r\n    }\r\n    const onClickContactCard =() =>{\r\n      setShowContactCard(!showContactCard)\r\n    }\r\n    const onClickRelativeCard =() =>{\r\n      setShowRelative(!showRelative)\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >COVID-19 /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        \r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"1\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                    {showContactCard===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showContactCard && (\r\n                                  <div className=\"card-body\">\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Phone Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      maxLength={5}\r\n                                                      name=\"phoneNumber\"\r\n                                                      id=\"phoneNumber\"\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'phoneNumber')}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                                  {errors.phoneNumber !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                      ) : \"\" }\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Alt. Phone Number</Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      value={basicInfo.altPhonenumber}\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                      \r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"altPhonenumber\"\r\n                                                    id=\"altPhonenumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'altPhonenumber')}}\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                 />\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Email</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"email\"\r\n                                                      name=\"email\"\r\n                                                      id=\"email\"\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      value={basicInfo.email}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      required\r\n                                                  />\r\n                                                \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"row\">\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Country <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"countryId\"\r\n                                                      id=\"countryId\"\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      value={basicInfo.countryId}\r\n                                                      disabled\r\n                                                      onChange={getStates}\r\n                                                      >\r\n                                                      <option value={\"\"}>Select</option>\r\n                                                      {countries.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.countryId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.countryId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"stateId\"\r\n                                                      id=\"stateId\"\r\n                                                      value={basicInfo.stateId}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={getProvinces}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {states.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.stateId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.stateId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Province/District/LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"district\"\r\n                                                      id=\"district\"\r\n                                                      value={basicInfo.district}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {provinces.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.district !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.district}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Street Address <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"address\"\r\n                                                      id=\"address\"\r\n                                                      value={basicInfo.address}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                  />\r\n                                                {errors.address !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.address}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Landmark</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"landmark\"\r\n                                                      id=\"landmark\"\r\n                                                      value={basicInfo.landmark}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      \r\n                                                  />\r\n                                                  \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                    {showRelative===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showRelative && (\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        {/* <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        /> */}\r\n                                                                        <Input\r\n                                                                            type=\"text\"\r\n                                                                            name=\"phone\"\r\n                                                                            id=\"phone\"\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                            value={relatives.phone}\r\n                                                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {errors.phone !==\"\" ? (\r\n                                                                            <span className={classes.error}>{errors.phone}</span>\r\n                                                                            ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        {/* <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton> */}\r\n                                    {/* </div> */}\r\n                                </div>\r\n                                )}\r\n                            </div>\r\n                            {/* Adding First DOSAGE FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>COVID-19 First Dosage</h5>\r\n                                </div>\r\n\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-4\">                                    \r\n                            <div className=\"form-check custom-checkbox ml-1 \">\r\n                                <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                name=\"workInHealthSector\"\r\n                                id=\"workInHealthSector\"                                        \r\n                                onChange={handleCheckBoxworkInHealthSector}\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"workInHealthSector\"\r\n                                >\r\n                                Do you work in the Health sector ?\r\n                                </label>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                        \r\n                            <div className=\"form-check custom-checkbox ml-1 \">\r\n                                <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                name=\"knownMedicalCondition\"\r\n                                id=\"knownMedicalCondition\"                                        \r\n                                onChange={handleCheckBoxknownMedicalCondition}\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"knownMedicalCondition\"\r\n                                >\r\n                                Any known medical condition ?\r\n                                </label>\r\n                            </div>\r\n                            </div>\r\n                            {objValues.knownMedicalCondition===true &&(                                    \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label for=\"knownMedicalCondition\">Medical conditions </Label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            name=\"medicalCondition\"\r\n                                            value={basicInfo.medicalCondition}\r\n                                            id=\"medicalCondition\"\r\n                                            onChange={handleInputChangeBasic}\r\n                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                \r\n                            </div>\r\n                            )}\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                          <FormGroup>\r\n                                          <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                          <Input \r\n                                              type=\"select\"\r\n                                              name=\"vaccine\"\r\n                                              id=\"vaccine\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccine} \r\n                                          >\r\n                                              <option value=\"\" >Select</option>\r\n                                              {vaccine.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.name}\r\n                                                </option>\r\n                                            ))}\r\n                                          </Input>\r\n\r\n                                         \r\n                                          {errors.vaccine !==\"\" ? (\r\n                                                  <span className={classes.error}>{errors.vaccine}</span>\r\n                                          ) : \"\" }           \r\n                                          </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Date of First Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                                                             \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"select\"\r\n                                              name=\"location\"\r\n                                              id=\"location\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.location} \r\n                                          >\r\n                                              <option value=\"\" >Select</option>\r\n                                              <option value=\"Facility\" >Facility</option>\r\n                                              <option value=\"Community\" >Community</option>\r\n                                          </Input>\r\n                                      </InputGroup> \r\n                                      {errors.location !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.location}</span>\r\n                                      ) : \"\" }                                        \r\n                                      </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Facility Name </Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"text\"\r\n                                              name=\"vaccinationFacility\"\r\n                                              id=\"vaccinationFacility\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccinationFacility} \r\n                                          >\r\n                                          </Input>\r\n                                      </InputGroup> \r\n                                      {errors.vaccinationFacility !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                      ) : \"\" }                                        \r\n                                      </FormGroup>\r\n                              </div>\r\n                              )}\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.batchNumber !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.batchNumber}</span>\r\n                                      ) : \"\" }                                         \r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>     \r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF First DOSAGE */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}