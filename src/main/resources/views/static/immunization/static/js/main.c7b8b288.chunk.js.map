{"version":3,"sources":["main/webapp/jsx/utils/queryKeys.js","main/webapp/api.js","main/webapp/jsx/services/fetchAllPatients.js","main/webapp/jsx/utils/calculateAge.js","main/webapp/jsx/utils/queryClient.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/services/fetchAllVaccinatedPatients.js","main/webapp/jsx/components/Patient/PatientVaccinatedList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/services/fetchPatientVaccinationHistory.js","main/webapp/jsx/services/archiveImmunization.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/customHooks/useArchiveImmunization.js","main/webapp/jsx/utils/determineClientRoutineImmunizationVaccine.js","main/webapp/jsx/services/fetchRoutineImmunizationVaccine.js","main/webapp/jsx/components/Immunization/useImmunizationFormSchema.js","main/webapp/jsx/services/saveImmunization.js","main/webapp/jsx/components/Immunization/CreateRoutineImmunization.js","main/webapp/jsx/customHooks/useSaveImmunization.js","main/webapp/jsx/services/fetchImmunizationById.js","main/webapp/jsx/services/updateImmunization.js","main/webapp/jsx/components/Immunization/UpdateRoutineImmunization.js","main/webapp/jsx/customHooks/useUpdateImmunization.js","main/webapp/jsx/components/Immunization/ImmunizationHome.js","main/webapp/jsx/components/Tetanus/TetanusHome.js","main/webapp/jsx/components/Tetanus/useTetanusFormValidationSchema.js","main/webapp/jsx/components/Covid/CovidFirstVaccination.js","main/webapp/jsx/services/fetchCodeset.js","main/webapp/jsx/services/fetchCovidVaccines.js","main/webapp/jsx/components/Covid/covidFirstVaccinationValidationSchema.js","main/webapp/jsx/components/Covid/CovidVaccinationHome.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["getPatientDataKey","getVaccinatedPatientDataKey","url","token","URLSearchParams","window","location","search","get","fetchAllPatients","async","page","pageSize","_ref","axios","concat","baseUrl","headers","Authorization","data","calculateAge","dob","today","Date","birthDate","age_now","getFullYear","m","getMonth","getDate","calculateAgeNoText","queryClientSettings","defaultOptions","queries","retry","refetchOnMount","refetchOnWindowFocus","refetchOnReconnect","cacheTime","Infinity","refetchInterval","refetchIntervalInBackground","suspense","staleTime","mutations","queryClient","QueryClient","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","showPPI","setShowPPI","useState","query","setQueryParams","handleCheckBox","e","target","checked","isLoading","refetch","useQuery","onSuccess","nextPage","queryKey","prefetchQuery","prefetchNextPage","children","MaterialTable","icons","title","columns","field","hidden","render","row","firstName","surname","otherName","filtering","_row$identifier","_row$identifier$ident","currentIdentifier","identifier","filter","obj","type","pop","value","gender","display","dateOfBirth","Link","to","pathname","route","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","height","width","size","Button","color","MdDashboard","fontSize","fontWeight","components","Toolbar","className","name","id","onChange","border","borderRadius","htmlFor","MTableToolbar","records","totalCount","totalRecords","currentPage","options","headerStyle","searchFieldStyle","margingLeft","paging","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","onChangePage","newPage","prevFilters","fetchAllVaccinatedPatients","response","someHardCodedData","visitId","active","sex","deceased","maritalStatus","employmentStatus","education","organization","biometricStatus","deceasedDateTime","assignerId","contact","address","city","line","stateId","district","countryId","postalCode","organisationUnitId","genderId","contactPoint","relationshipId","dateOfRegistration","ninNumber","emrId","facilityId","archived","uuid","dynamicHivStatus","isDateOfBirthEstimated","tableData","_row$uniqueImmunizati","_row$uniqueImmunizati2","lastname","uniqueImmunizationData","_row$uniqueImmunizati3","hospitalNumber","_row$uniqueImmunizati4","_row$uniqueImmunizati5","Label","content","totalElements","pageNumber","divStyle","Home","key","setKey","marginTop","marginBottom","startIcon","FaUserPlus","textTransform","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","PatientVaccinatedList","withStyles","theme","root","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","padding","spacing","unit","link","primary","main","textDecoration","classes","useEffect","ExpansionPanel","ExpansionPanelSummary","md","root2","lastName","ButtonMui","TiArrowBack","participantId","_obj$identifier","_obj$identifier$ident","_identifiers$pop","identifiers","call","getHospitalNumber","dateParts","split","dateObject","calculate_age","moment","format","phoneNumber","find","getPhoneNumber","houseAddress","landMark","getAddress","Divider","SubMenu","patientProp","activeItem","setActiveItem","patientAge","Menu","inverted","Item","onClick","setActiveContent","activeContent","actionType","fetchPatientVaccinationHistory","config","archiveImmunzation","put","PatientsVaccinaionHistory","_props$patientObj","LoadViewPage","action","immunizationType","mutate","useArchiveImmunization","history","useHistory","isError","useMutation","mutationFn","toast","success","refetchQueries","push","onError","error","vaccineType","vaccinationDate","position","Dropdown","item","Icon","LoadDeletePage","determineClientImmunization","startDate","endDate","clientAgeInWeeks","diff","clientAgeInMonths","clientAgeInYears","fetchRoutineImmunizationVaccine","code","useImmunizationFormValidationSchema","onSubmit","initialValues","immunizationFormIntialValues","vaccineDetail","missedVaccine","missedVaccineType","ImmunizationFormInitialSchema","yup","required","when","is","then","otherwise","formik","useFormik","validationSchema","saveImmunization","post","library","add","faCheckSquare","faCoffee","faEdit","faTrash","useStyles","makeStyles","card","margin","flexDirection","form","submit","cardBottom","Select","button","demo","background","default","inline","CreateRoutineImmunization","_props$patientObj2","_formik$values2","_formik$touched","_formik$values3","_formik$touched2","_formik$values4","_formik$touched3","_formik$values5","_formik$touched4","_formik$values6","_formik$values7","_formik$touched5","clientDateOfBirth","vaccines","isLoadingMissedVaccine","handleSubmit","_props$patientObj3","_props$patientObj4","_formik$values","_props$patientObj5","_props$patientObj5$id","_props$patientObj6","_props$patientObj7","_props$patientObj7$ge","_props$patientObj8","_props$patientObj9","_props$patientObj10","_props$patientObj11","_props$patientObj12","_props$patientObj13","Object","keys","forEach","fieldName","setFieldTouched","errorObj","validateForm","isValid","length","payload","patientId","patientUuid","values","age","resetForm","useSaveImmunization","CardContent","Form","Input","handleChange","max","onBlur","handleBlur","touched","errors","map","vacc","setFieldValue","disabled","MatButton","SaveIcon","CancelIcon","updateImmunization","args","UpdateRoutineImmunization","_props$activeContent2","_props$activeContent4","disableInputs","formInitialValue","setFormInitialValue","_props$activeContent","useUpdateImmunization","_props$activeContent3","fetchImmunizationById","_data$uniqueImmunizat","_data$uniqueImmunizat2","_data$uniqueImmunizat3","_data$uniqueImmunizat4","setValues","readOnly","Immunization","componentMap","create","update","view","_Fragment","mapCompoenentToActionType","Tetanus","tetanusVaccines","console","log","tetanusFormValidationSchema","vaccineResult","useTetanusFormValidationSchema","FormGroup","disable","CovidFirstVaccination","_formik$values8","_formik$touched6","_formik$values9","_formik$touched7","_formik$values10","_formik$touched8","_formik$values11","_formik$values12","_formik$touched9","_formik$values13","_formik$touched10","covidAdverseEffects","fetchCodesets","fetchCovidVaccines","covidFirstVaccValidationSchema","workInHealthSector","knownMedicalCondition","medicalCondition","toLowerCase","adverseEffect","adverseEffectOption","dateOfFirstDosage","vaccinationFacility","batchNumber","useCovidFirstVaccinationFormValidationSchema","for","adverseEffects","vaccine","CovidVaccinationHome","vaccineDosage","setVaccineDosage","covidFormMap","FIRST","CovidFirstVaccinationDose","ToastContainer","autoClose","hideProgressBar","margingRight","art","setArt","activeTab","useMemo","PatientCardDetail","PatientVaccinationHistory","ImmunizationHome","flexGrow","RegisterPatient","_relatives$phone","_relatives$address","basicInfo","setBasicInfo","streetAddress","maritalStatusId","educationId","employmentStatusId","altPhonenumber","sexId","relatives","setRelatives","phone","email","middleName","contactArray","allContacts","setAllContacts","saving","setSaving","disabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","patientFacilityId","setPatientFacilityId","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","setErrors","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","patientDTO","setPatientDTO","person","hivEnrollment","userDetail","user","useLocation","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","open","setOpen","React","toggle","locationState","getPatient","useCallback","_patient$contact","_patient$contact2","_identifiers$identifi","_contactPoint$contact","_contactPoint$contact2","_contactPoint$contact3","_patient$maritalStatu","_patient$education","_patient$employmentSt","sexCodeset","patient","_","upperFirst","lowerCase","phoneNumberFormatCheck","altphone","country","sort","catch","parseInt","landmark","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","GetCountry","setStateByCountryId","_phone$value","undefined","charAt","replace","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNumberLimit","getHosiptalNumber","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","slice","handleInputChangePhoneNumber","inputName","NumberValue","min","index","defaultChecked","ageNumber","currentDate","setDate","setMonth","dobNew","toISOString","maritalStatusOption","occupationOption","educationOption","getCountryId","_item$address","splice","handleDeleteRelative","FontAwesomeIcon","relative","checkPhoneNumber","handleSaveRelationship","validateRelatives","temp","every","x","fullName","handleCancelSaveRelationship","AddIcon","handleAddRelative","Spinner","preventDefault","validate","patientForm","errorMessage","apierror","message","subErrors","POSITION","BOTTOM_CENTER","handleCancel","Modal","show","centered","backdrop","Header","Title","Footer","App","Router","QueryClientProvider","client","Switch","Route","path","TetanusHome","PatientDetail","RegisterPatientPage","ReactQueryDevtools","initialIsOpen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","version","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","label","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","alert","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","fontFamily","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.c7b8b288.chunk.js","sourcesContent":["export const getPatientDataKey = \"GET_PATIENT_DATA\"\r\nexport const getVaccinatedPatientDataKey = \"GET_VACCINATED_PATIENT_DATA\"","export const url =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://localhost:8383/api/v1/\"\r\n    : \"/api/v1/\";\r\nexport const token =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzA4NzQ4NTQwfQ.cGKpQCmFWmzDliuYCbPfPlYbYP_JSWyzmOF06yIrxiFzVJCEu1cVn0Fxlw4Mm0kNsjHcyFTU_LuKeux983Xfpg\"\r\n    : new URLSearchParams(window.location.search).get(\"jwt\");\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"./../../api\";\r\n\r\nexport const fetchAllPatients = async ({ page, pageSize, search }) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}patient?pageSize=${pageSize}&pageNo=${page}&searchParam=${search}`,\r\n    { headers: { Authorization: `Bearer ${token}` } }\r\n  );\r\n  return response.data;\r\n};\r\n","export const calculateAge = (dob) => {\r\n    const today = new Date();\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n\r\n    if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n      age_now--;\r\n    }\r\n\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  export const calculateAgeNoText = (dob) => {\r\n    const today = new Date();\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n\r\n    if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n      age_now--;\r\n    }\r\n\r\n    if (age_now === 0) {\r\n      return m;\r\n    }\r\n    return age_now;\r\n  };","import { QueryClient } from \"react-query\";\r\n\r\nconst queryClientSettings = {\r\n  defaultOptions: {\r\n    queries: {\r\n      retry: 2,\r\n      refetchOnMount: \"always\",\r\n      refetchOnWindowFocus: true,\r\n      refetchOnReconnect: true,\r\n      cacheTime: Infinity,\r\n      refetchInterval: 3.6e6, //1 hour\r\n      refetchIntervalInBackground: true,\r\n      suspense: false,\r\n      staleTime: Infinity,\r\n    },\r\n    mutations: {\r\n      retry: 2,\r\n    },\r\n  },\r\n};\r\n\r\nexport const queryClient = new QueryClient(queryClientSettings);\r\n","import React, { useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getPatientDataKey } from \"../../utils/queryKeys\";\r\nimport { fetchAllPatients } from \"../../services/fetchAllPatients\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport { calculateAge } from \"../../utils/calculateAge\";\r\nimport { queryClient } from \"../../utils/queryClient\";\r\n\r\n//Date Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst Patients = (props) => {\r\n  const [showPPI, setShowPPI] = useState(true);\r\n  const [query, setQueryParams] = useState({\r\n    page: 0,\r\n    pageSize: 10,\r\n    search: \"\",\r\n  });\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  const prefetchNextPage = async () => {\r\n    const nextPage = query.page + 1;\r\n    // Use the same query key as in the useQuery hook\r\n    const queryKey = [getPatientDataKey, { ...query, page: nextPage }];\r\n    await queryClient.prefetchQuery(queryKey, () =>\r\n      fetchAllPatients({ ...query, page: nextPage })\r\n    );\r\n  };\r\n\r\n  const { data, isLoading, refetch } = useQuery(\r\n    [getPatientDataKey, query],\r\n    () => fetchAllPatients(query),\r\n    {\r\n      onSuccess: () => prefetchNextPage(),\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient\"\r\n        columns={[\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"firstName\",\r\n            hidden: showPPI,\r\n            render: (row) =>\r\n              row?.firstName + \" \" + row?.surname || row?.otherName || \"\",\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"participantId\",\r\n            filtering: false,\r\n            render: (row) => {\r\n              const identifiers = row?.identifier?.identifier?.filter((obj) => obj?.type === \"HospitalNumber\")\r\n              const currentIdentifier = identifiers.pop();\r\n              \r\n            return  (currentIdentifier?.value !== null ? currentIdentifier.value : \"\")\r\n            },\r\n          },\r\n          {\r\n            title: \"Sex\",\r\n            field: \"gender\",\r\n            filtering: false,\r\n            render: (row) => (row?.gender !== null ? row.gender.display : \"\"),\r\n          },\r\n          {\r\n            title: \"Age\",\r\n            field: \"dateOfBirth\",\r\n            filtering: false,\r\n            render: (row) => calculateAge(row?.dateOfBirth),\r\n          },\r\n\r\n          {\r\n            title: \"Actions\",\r\n            field: \"actions\",\r\n            filtering: false,\r\n            render: (row) => (\r\n              <div>\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/patient-vaccination-history\",\r\n                    route: \"patient-vaccination-history\",\r\n                    state: { patientObj: row },\r\n                  }}\r\n                >\r\n                  <ButtonGroup\r\n                    variant=\"contained\"\r\n                    aria-label=\"split button\"\r\n                    style={{\r\n                      backgroundColor: \"rgb(153, 46, 98)\",\r\n                      height: \"30px\",\r\n                      width: \"215px\",\r\n                    }}\r\n                    size=\"large\"\r\n                  >\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      aria-label=\"select merge strategy\"\r\n                      aria-haspopup=\"menu\"\r\n                      style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                    >\r\n                      <MdDashboard />\r\n                    </Button>\r\n                    <Button style={{ backgroundColor: \"rgb(153, 46, 98)\" }}>\r\n                      <span\r\n                        style={{\r\n                          fontSize: \"10px\",\r\n                          color: \"#fff\",\r\n                          fontWeight: \"bolder\",\r\n                        }}\r\n                      >\r\n                        Patient Dashboard\r\n                      </span>\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </Link>\r\n              </div>\r\n            ),\r\n          },\r\n        ]}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n        data={data?.records || []}\r\n        totalCount={data?.totalRecords}\r\n        isLoading={isLoading}\r\n        page={data?.currentPage}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          paging: true,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: query?.pageSize || 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        onChangePage={(newPage) => {\r\n          setQueryParams((prevFilters) => ({ ...prevFilters, page: newPage }));\r\n          refetch(query);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const fetchAllVaccinatedPatients = async ({ page, pageSize, search }) => {\r\n \r\n  const response = await axios.get(\r\n    `${baseUrl}immunization/history/all?pageSize=${pageSize}&pageNo=${page}&searchParam=${search}`,\r\n    { headers: { Authorization: `Bearer ${token}` } }\r\n  );\r\n\r\n  return response?.data;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport { getVaccinatedPatientDataKey } from \"../../utils/queryKeys\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchAllVaccinatedPatients } from \"../../services/fetchAllVaccinatedPatients\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport { calculateAge } from \"../../utils/calculateAge\";\r\nimport { queryClient } from \"../../utils/queryClient\";\r\n\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst Patients = (props) => {\r\n  const [showPPI, setShowPPI] = useState(true);\r\n  const [query, setQueryParams] = useState({\r\n    page: 0,\r\n    pageSize: 10,\r\n    search: \"\",\r\n  });\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  const prefetchNextPage = async () => {\r\n    const nextPage = query.page + 1;\r\n    // Use the same query key as in the useQuery hook\r\n    const queryKey = [\r\n      getVaccinatedPatientDataKey,\r\n      { ...query, page: nextPage },\r\n    ];\r\n    await queryClient.prefetchQuery(queryKey, () =>\r\n      fetchAllVaccinatedPatients({ ...query, page: nextPage })\r\n    );\r\n  };\r\n\r\n  const { data, isLoading, refetch } = useQuery(\r\n    [getVaccinatedPatientDataKey, query],\r\n    () => fetchAllVaccinatedPatients(query),\r\n    {\r\n      onSuccess: () => prefetchNextPage(),\r\n    }\r\n  );\r\n  const someHardCodedData = {\r\n    id: 31050,\r\n    visitId: null,\r\n    active: true,\r\n    surname: \"AnotherLN\",\r\n    firstName: \"AnotherFN\",\r\n    otherName: \"\",\r\n    sex: \"Female\",\r\n    gender: {\r\n      id: 377,\r\n      display: \"Female\",\r\n    },\r\n    deceased: false,\r\n    maritalStatus: {\r\n      id: 5,\r\n      display: \"Single\",\r\n    },\r\n    employmentStatus: {\r\n      id: 88,\r\n      display: \"Unemployed\",\r\n    },\r\n    education: {\r\n      id: 10,\r\n      display: \"None\",\r\n    },\r\n    organization: null,\r\n    biometricStatus: false,\r\n    dateOfBirth: \"2024-01-01\",\r\n    deceasedDateTime: null,\r\n    identifier: {\r\n      identifier: [\r\n        {\r\n          type: \"HospitalNumber\",\r\n          value: \"456e34\",\r\n          assignerId: 1,\r\n        },\r\n      ],\r\n    },\r\n    contact: {\r\n      contact: [\r\n        {\r\n          address: {\r\n            city: null,\r\n            line: [\"\"],\r\n            stateId: null,\r\n            district: null,\r\n            countryId: null,\r\n            postalCode: null,\r\n            organisationUnitId: null,\r\n          },\r\n          surname: \"\",\r\n          genderId: null,\r\n          firstName: \"Emmanuel\",\r\n          otherName: \"\",\r\n          contactPoint: {\r\n            type: \"phone\",\r\n            value: \"\",\r\n          },\r\n          relationshipId: 79,\r\n        },\r\n      ],\r\n    },\r\n    contactPoint: {\r\n      contactPoint: [\r\n        {\r\n          type: \"phone\",\r\n          value: \"\",\r\n        },\r\n      ],\r\n    },\r\n    address: {\r\n      address: [\r\n        {\r\n          city: \"Street address\",\r\n          line: [null],\r\n          stateId: 5,\r\n          district: \"113\",\r\n          countryId: 1,\r\n          postalCode: \"\",\r\n          organisationUnitId: 0,\r\n        },\r\n      ],\r\n    },\r\n    dateOfRegistration: \"2024-02-07\",\r\n    ninNumber: \"\",\r\n    emrId: null,\r\n    facilityId: null,\r\n    archived: 0,\r\n    uuid: \"9c1d3753-e7aa-4161-ab59-347910cd6dc3\",\r\n    dynamicHivStatus: null,\r\n    isDateOfBirthEstimated: true,\r\n    tableData: {\r\n      id: 0,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient\"\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n        columns={[\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"firstName\",\r\n            hidden: showPPI,\r\n            render: (row) => {\r\n              const lastname = row?.uniqueImmunizationData?.lastname;\r\n              const firstName = row?.uniqueImmunizationData?.firstName;\r\n              return firstName + \" \" + lastname;\r\n            },\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"participantId\",\r\n            filtering: false,\r\n            render: (row) => row?.uniqueImmunizationData?.hospitalNumber,\r\n          },\r\n          {\r\n            title: \"Sex\",\r\n            field: \"gender\",\r\n            filtering: false,\r\n            render: (row) => row?.uniqueImmunizationData?.sex,\r\n          },\r\n          {\r\n            title: \"Age\",\r\n            field: \"dob\",\r\n            filtering: false,\r\n            render: (row) =>\r\n              calculateAge(row?.uniqueImmunizationData?.dateOfBirth),\r\n          },\r\n\r\n          {\r\n            title: \"Vaccination Status\",\r\n            field: \"vaccinationStatus\",\r\n            filtering: false,\r\n            render: (row) => (\r\n              <Label color=\"blue\" size=\"mini\">\r\n                {\"Vaccinated\"}\r\n              </Label>\r\n            ),\r\n          },\r\n          {\r\n            title: \"Actions\",\r\n            field: \"actions\",\r\n            filtering: false,\r\n            render: (row) => (\r\n              <div>\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/patient-vaccination-history\",\r\n                    state: { patientObj: someHardCodedData },\r\n                  }}\r\n                >\r\n                  <ButtonGroup\r\n                    variant=\"contained\"\r\n                    aria-label=\"split button\"\r\n                    style={{\r\n                      backgroundColor: \"rgb(153, 46, 98)\",\r\n                      height: \"30px\",\r\n                      width: \"215px\",\r\n                    }}\r\n                    size=\"large\"\r\n                  >\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      aria-label=\"select merge strategy\"\r\n                      aria-haspopup=\"menu\"\r\n                      style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                    >\r\n                      <MdDashboard />\r\n                    </Button>\r\n                    <Button style={{ backgroundColor: \"rgb(153, 46, 98)\" }}>\r\n                      <span\r\n                        style={{\r\n                          fontSize: \"10px\",\r\n                          color: \"#fff\",\r\n                          fontWeight: \"bolder\",\r\n                        }}\r\n                      >\r\n                        Patient Dashboard\r\n                      </span>\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </Link>\r\n              </div>\r\n            ),\r\n          },\r\n        ]}\r\n        data={data?.content || []}\r\n        totalCount={data?.totalElements}\r\n        isLoading={isLoading}\r\n        page={data?.pageNumber}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          paging: true,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: query?.pageSize || 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        onChangePage={(newPage) => {\r\n          setQueryParams((prevFilters) => ({ ...prevFilters, page: newPage }));\r\n          refetch(query);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport PatientList from \"./Patient/PatientList\";\r\nimport PatientVaccinatedList from \"./Patient/PatientVaccinatedList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n  const [key, setKey] = useState(\"home\");\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>Immunization</h4>\r\n          </li>\r\n        </ol>\r\n\r\n        <div>\r\n          <Link to={\"register-patient\"}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\" float-end mb-10\"\r\n              startIcon={<FaUserPlus size=\"10\" />}\r\n              style={{ backgroundColor: \"#014d88\" }}\r\n            >\r\n              <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <Row style={{ marginTop: \"20px\" }}>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">\r\n                    <PatientList />\r\n                  </Tab>\r\n                  <Tab eventKey=\"vaccinated\" title=\"All Vaccinated Patients\">\r\n                    <PatientVaccinatedList />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj;\r\n  \r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n  const getPhoneNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers.contactPoint.find(\r\n      (obj) => obj.type === \"phone\"\r\n    );\r\n    return phoneNumber ? phoneNumber.value : \"\";\r\n  };\r\n  const getAddress = (identifier) => {\r\n    const identifiers = identifier;\r\n    const address = identifiers.address.find((obj) => obj.city);\r\n    const houseAddress =\r\n      address && address.line[0] !== null ? address.line[0] : \"\";\r\n    const landMark =\r\n      address && address.city && address.city !== null ? address.city : \"\";\r\n    return address ? houseAddress + \" \" + landMark : \"\";\r\n  };\r\n\r\n  const getLastName = (obj) => {\r\n    if (obj && obj.lastName) {\r\n      return obj.lastName;\r\n    } else if (obj && obj.surname) {\r\n      return obj.surname;\r\n    } else if (obj && obj.otherName) {\r\n      return obj.otherName;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const getHospitalNumber = (obj) => {\r\n    if (obj && obj.participantId) {\r\n      return obj.participantId\r\n    }else {\r\n    \r\n      const identifiers = obj?.identifier?.identifier?.filter((obj) => obj?.type === \"HospitalNumber\") || []\r\n      const currentIdentifier = identifiers?.pop?.() || null;\r\n      \r\n    return  (currentIdentifier?.value !== null ? currentIdentifier.value : \"\")\r\n    }\r\n  \r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Row className={\"mt-1\"}>\r\n                <Col md={12} className={classes.root2}>\r\n                  <b style={{ fontSize: \"25px\", color: \"rgb(153, 46, 98)\" }}>\r\n                    {patientObj.firstName + \" \" + getLastName(patientObj)}\r\n                  </b>\r\n                  <Link to={\"/\"}>\r\n                    <ButtonMui\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className=\" float-end ms-2 mr-2 mt-2\"\r\n                      //startIcon={<FaUserPlus size=\"10\"/>}\r\n                      startIcon={<TiArrowBack />}\r\n                      style={{\r\n                        backgroundColor: \"rgb(153, 46, 98)\",\r\n                        color: \"#fff\",\r\n                        height: \"35px\",\r\n                      }}\r\n                    >\r\n                      <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                    </ButtonMui>\r\n                  </Link>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Patient ID :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getHospitalNumber(patientObj)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    Date Of Birth :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {patientObj?.dob || patientObj?.dateOfBirth}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Age :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {calculate_age(\r\n                        moment(\r\n                          patientObj.dob || patientObj?.dateOfBirth\r\n                        ).format(\"DD-MM-YYYY\")\r\n                      )}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Gender :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {patientObj.gender !== null\r\n                        ? patientObj.gender.display\r\n                        : \"\"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Phone Number :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getPhoneNumber(patientObj.contactPoint)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Address :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getAddress(patientObj.address)}{\" \"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </ExpansionPanelSummary>\r\n        <Divider />\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { calculateAgeNoText } from \"../../utils/calculateAge\";\r\n\r\nfunction SubMenu(props) {\r\n  const patientProp = props.patientObj ? props.patientObj : {};\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [activeItem, setActiveItem] = useState(\"recent-history\");\r\n  const [patientObj] = useState(patientProp);\r\n  const [patientAge] = useState(\r\n    calculateAgeNoText(patientObj?.dob || patientObj?.dateOfBirth) || 0\r\n  );\r\n\r\n  const onClickHome = (row) => {\r\n    props.setActiveContent({ ...props.activeContent, route: \"recent-history\" });\r\n  };\r\n\r\n  const onClickImmunization = (row) => {\r\n    setActiveItem(\"immunization\");\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: \"routine-immunization-patient\",\r\n      actionType: \"create\",\r\n    });\r\n  };\r\n\r\n  const onClickTetanus = (row) => {\r\n    setActiveItem(\"tetanus\");\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: \"tetanus-patient\",\r\n      actionType: \"create\",\r\n    });\r\n  };\r\n\r\n  const onClickCovid = (row) => {\r\n    setActiveItem(\"covid\");\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: \"covid-patient\",\r\n      actionType: \"create\",\r\n    });\r\n  };\r\n\r\n  const loadPatientVaccinationHistory = () => {\r\n    setActiveItem(\"history\");\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: \"vaccination-history\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"20px\" }}>\r\n      <Menu size=\"large\" color={\"black\"} inverted>\r\n        <Menu.Item onClick={() => onClickHome()}> Home</Menu.Item>\r\n        <Menu.Item onClick={() => onClickImmunization()}>\r\n          {\" \"}\r\n          Routine Immunization\r\n        </Menu.Item>\r\n        <Menu.Item onClick={() => onClickTetanus()}> Tetanus </Menu.Item>\r\n        {patientAge >= 5 && (\r\n          <Menu.Item onClick={onClickCovid}> COVID-19 </Menu.Item>\r\n        )}\r\n        <Menu.Item onClick={() => loadPatientVaccinationHistory(patientObj)}>\r\n          History\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubMenu;\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const fetchPatientVaccinationHistory = async ({\r\n  page,\r\n  pageSize,\r\n  search,\r\n  id,\r\n}) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}immunization/history/${id}?pageSize=${pageSize}&pageNo=${page}&searchParam=${search}`,\r\n    { headers: { Authorization: `Bearer ${token}` } }\r\n  );\r\n\r\n  return response?.data;\r\n};\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nconst config = {\r\n  headers: { Authorization: `Bearer ${token}` },\r\n};\r\n\r\nexport const archiveImmunzation = async (id) => {\r\n  const response = await axios.put(\r\n    `${baseUrl}immunization/${id}/archive`,\r\n    null,\r\n    config\r\n  );\r\n\r\n  return response.data;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport { getVaccinatedPatientDataKey } from \"../../utils/queryKeys\";\r\nimport { useQuery } from \"react-query\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { queryClient } from \"../../utils/queryClient\";\r\nimport { fetchPatientVaccinationHistory } from \"../../services/fetchPatientVaccinationHistory\";\r\nimport { Dropdown, Menu, Icon } from \"semantic-ui-react\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { archiveImmunzation } from \"../../services/archiveImmunization\";\r\nimport { useArchiveImmunization } from \"../../customHooks/useArchiveImmunization\";\r\n\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst PatientsVaccinaionHistory = (props) => {\r\n  const [showPPI, setShowPPI] = useState(true);\r\n  const [query, setQueryParams] = useState({\r\n    page: 0,\r\n    pageSize: 20,\r\n    search: \"\",\r\n    id: props?.patientObj?.id,\r\n  });\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  const prefetchNextPage = async () => {\r\n    const nextPage = query.page + 1;\r\n    // Use the same query key as in the useQuery hook\r\n    const queryKey = [\r\n      getVaccinatedPatientDataKey,\r\n      { ...query, page: nextPage },\r\n    ];\r\n    await queryClient.prefetchQuery(queryKey, () =>\r\n      fetchPatientVaccinationHistory({ ...query, page: nextPage })\r\n    );\r\n  };\r\n\r\n  const { data, isLoading, refetch } = useQuery(\r\n    [getVaccinatedPatientDataKey, query],\r\n    () => fetchPatientVaccinationHistory(query),\r\n    {\r\n      onSuccess: () => prefetchNextPage(),\r\n    }\r\n  );\r\n\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.immunizationType === \"ROUTINE_IMMUNIZATION\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"routine-immunization-patient\",\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.immunizationType === \"TETANUS_IMMUNIZATION\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"tetanus-patient\",\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"covid-patient\",\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    }\r\n  };\r\n  const LoadDeletePage = (row) => {\r\n    mutate(row.id);\r\n  };\r\n\r\n  const { mutate } = useArchiveImmunization();\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Patient Vaccination History\"\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n        columns={[\r\n          {\r\n            title: \"Immunization Type\",\r\n            field: \"immunizationType\",\r\n            filtering: true,\r\n            // hidden: showPPI,\r\n          },\r\n          {\r\n            title: \"Vaccine Type\",\r\n            field: \"vaccineType\",\r\n            filtering: false,\r\n            render: (row) => row?.uniqueImmunizationData?.vaccineType,\r\n          },\r\n          {\r\n            title: \"Vaccination Date\",\r\n            field: \"vaccinationDate\",\r\n            filtering: false,\r\n            render: (row) => row?.uniqueImmunizationData?.vaccinationDate,\r\n          },\r\n\r\n          {\r\n            title: \"Actions\",\r\n            field: \"actions\",\r\n            filtering: false,\r\n            render: (row) => (\r\n              <div>\r\n                <Menu.Menu position=\"right\">\r\n                  <Menu.Item>\r\n                    <Button\r\n                      style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                      primary\r\n                    >\r\n                      <Dropdown item text=\"Action\">\r\n                        <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                          <Dropdown.Item\r\n                            onClick={() => LoadViewPage(row, \"view\")}\r\n                          >\r\n                            {\" \"}\r\n                            <Icon name=\"eye\" />\r\n                            View{\" \"}\r\n                          </Dropdown.Item>\r\n\r\n                          <Dropdown.Item\r\n                            onClick={() => LoadViewPage(row, \"update\")}\r\n                          >\r\n                            <Icon name=\"edit\" />\r\n                            Edit\r\n                          </Dropdown.Item>\r\n\r\n                          <Dropdown.Item\r\n                            onClick={() => LoadDeletePage(row, \"delete\")}\r\n                          >\r\n                            {\" \"}\r\n                            <Icon name=\"trash\" /> Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </Button>\r\n                  </Menu.Item>\r\n                </Menu.Menu>\r\n              </div>\r\n            ),\r\n          },\r\n        ]}\r\n        data={data?.content || []}\r\n        totalCount={data?.totalElements}\r\n        isLoading={isLoading}\r\n        page={data?.pageNumber}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          paging: true,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: query?.pageSize || 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        onChangePage={(newPage) => {\r\n          setQueryParams((prevFilters) => ({ ...prevFilters, page: newPage }));\r\n          refetch(query);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientsVaccinaionHistory;\r\n","import { useMutation } from \"react-query\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { queryClient } from \"../utils/queryClient\";\r\nimport { archiveImmunzation } from \"../services/archiveImmunization\";\r\n\r\nexport const useArchiveImmunization = () => {\r\n  const history = useHistory();\r\n\r\n  const { mutate, isLoading, isError } = useMutation({\r\n    mutationFn: archiveImmunzation,\r\n    onSuccess: () => {\r\n      toast.success(\"Immunization deleted successful.\");\r\n      queryClient.refetchQueries();\r\n      history.push({\r\n        pathname: \"/\",\r\n      });\r\n    },\r\n\r\n    onError: () => {\r\n      toast.error(\"Immunization deletion failed\");\r\n    },\r\n  });\r\n\r\n  return {\r\n    mutate,\r\n    isLoading,\r\n    isError,\r\n  };\r\n};\r\n","import * as moment from \"moment\";\r\n\r\nexport const determineClientImmunization = (dateOfBirth) => {\r\n  const startDate = moment(dateOfBirth);\r\n  const endDate = moment();\r\n  const clientAgeInWeeks = endDate.diff(startDate, \"weeks\");\r\n  const clientAgeInMonths = endDate.diff(startDate, \"months\");\r\n  const clientAgeInYears = endDate.diff(startDate, \"years\");\r\n\r\n  if (clientAgeInWeeks < 6) {\r\n    //if client is less than six weeks\r\n    return \"IMMUNIZATION_VACCINE_AT_BIRTH\";\r\n  } else if (clientAgeInWeeks >= 6 && clientAgeInWeeks < 10) {\r\n    // if client is 6 weeks or above but still less than 10 weeks\r\n    return \"IMMUNIZATION_VACCINE_AT_6 WEEKS\";\r\n  } else if (clientAgeInWeeks >= 10 && clientAgeInWeeks < 14) {\r\n    // if client is 10 weeks or above but still less than 14 weeks\r\n    return \"IMMUNIZATION_VACCINE_AT_10 WEEKS\";\r\n  } else if (clientAgeInWeeks >= 14 && clientAgeInMonths < 6) {\r\n    // if client is 14 weeks or above but still less than 6 months\r\n    return \"IMMUNIZATION_VACCINE_AT_14 WEEKS\";\r\n  } else if (clientAgeInMonths >= 6 && clientAgeInMonths < 9) {\r\n    // if client is 6 months or above but still less than 9 months\r\n    return \"IMMUNIZATION_VACCINE_AT_6 MONTHS\";\r\n  } else if (clientAgeInMonths >= 9 && clientAgeInMonths < 15) {\r\n    // if client is 9 months or above but still less than 15 months\r\n    return \"IMMUNIZATION_VACCINE_AT_9 MONTHS\";\r\n  } else if (clientAgeInMonths >= 15 && clientAgeInYears < 9) {\r\n    // if client is 15 months or above but still less than 9 years\r\n    return \"IMMUNIZATION_VACCINE_AT_15 MONTHS\";\r\n  } else if (clientAgeInYears >= 9) {\r\n    // if client is 9 years or above\r\n    return \"IMMUNIZATION_VACCINE_AT_9 YEARS\";\r\n  }\r\n  return \"ROUTINE_IMMUNIZATION_VACCINE_TYPE\";\r\n};\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const fetchRoutineImmunizationVaccine = async (code) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}application-codesets/v2/${code}`,\r\n    { headers: { Authorization: `Bearer ${token}` } }\r\n  );\r\n\r\n  return response?.data;\r\n};\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const useImmunizationFormValidationSchema = (\r\n  onSubmit,\r\n  initialValues\r\n) => {\r\n  const immunizationFormIntialValues = {\r\n    vaccineType: \"\",\r\n    vaccineDetail: \"\",\r\n    missedVaccine: \"\",\r\n    missedVaccineType: \"\",\r\n    vaccinationDate: \"\",\r\n  };\r\n\r\n  const ImmunizationFormInitialSchema = yup.object({\r\n    vaccineType: yup.string().required(\"This field is required\"),\r\n    vaccinationDate: yup.string().required(\"This field is required\"),\r\n    vaccineDetail: yup.string().required(\"This field is required\"),\r\n    missedVaccine: yup.string().required(\"This field is required\"),\r\n    missedVaccineType: yup.string().when(\"missedVaccine\", {\r\n      is: (missedVaccine) => missedVaccine === \"yes\",\r\n      then: yup.string().required(\"This field is required\"),\r\n      otherwise: yup.string(),\r\n    }),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: initialValues\r\n      ? { ...immunizationFormIntialValues, ...initialValues }\r\n      : immunizationFormIntialValues,\r\n    onSubmit,\r\n    validationSchema: ImmunizationFormInitialSchema,\r\n  });\r\n  return { formik };\r\n};\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const saveImmunization = async (data) => {\r\n  const response = await axios.post(`${baseUrl}immunization`, data, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n\r\n  return response.data;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Label } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useQuery } from \"react-query\";\r\n// import { queryClient } from \"../../utils/queryClient\";\r\nimport { determineClientImmunization } from \"../../utils/determineClientRoutineImmunizationVaccine\";\r\nimport { fetchRoutineImmunizationVaccine } from \"../../services/fetchRoutineImmunizationVaccine\";\r\nimport { useImmunizationFormValidationSchema } from \"./useImmunizationFormSchema\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport moment from \"moment\";\r\nimport { useSaveImmunization } from \"../../customHooks/useSaveImmunization\";\r\nimport { calculateAgeNoText } from \"../../utils/calculateAge\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst CreateRoutineImmunization = (props) => {\r\n  const classes = useStyles();\r\n  const clientDateOfBirth =\r\n    props?.patientObj?.dateOfBirth || props?.patientObj?.dob;\r\n\r\n  const [queryKey] = useState(determineClientImmunization(clientDateOfBirth));\r\n\r\n  const { data: vaccines, isLoading } = useQuery([queryKey], () =>\r\n    fetchRoutineImmunizationVaccine(queryKey)\r\n  );\r\n\r\n  const { data: missedVaccine, isLoading: isLoadingMissedVaccine } = useQuery(\r\n    [\"ROUTINE_IMMUNIZATION_VACCINE_TYPE\"],\r\n    () => fetchRoutineImmunizationVaccine(\"ROUTINE_IMMUNIZATION_VACCINE_TYPE\")\r\n  );\r\n\r\n  const handleSubmit = async () => {\r\n    Object.keys(formik?.initialValues).forEach((fieldName) => {\r\n      formik?.setFieldTouched(fieldName, true);\r\n    });\r\n    const errorObj = await formik.validateForm();\r\n    const isValid = Object.keys(errorObj).length === 0;\r\n\r\n    const payload = {\r\n      immunizationType: \"ROUTINE_IMMUNIZATION\",\r\n      patientId: props?.patientObj?.id,\r\n      patientUuid: props?.patientObj?.uuid,\r\n      vaccinationDate: formik?.values?.vaccinationDate,\r\n      uniqueImmunizationData: {\r\n        ...formik.values,\r\n        hospitalNumber: props?.patientObj?.identifier.identifier[0]?.value,\r\n        sex: props?.patientObj?.sex || props?.patientObj?.gender?.display,\r\n        age: calculateAgeNoText(props?.patientObj?.dateOfBirth),\r\n        firstName: props?.patientObj?.firstName,\r\n        lastname: props?.patientObj?.surname || props?.patientObj?.lastname,\r\n        dateOfBirth: props?.patientObj?.dateOfBirth,\r\n        dateOfRegistration: props?.patientObj?.dateOfRegistration,\r\n      },\r\n    };\r\n\r\n    if (isValid) {\r\n      mutate(payload);\r\n      \r\n    }\r\n  };\r\n  const { formik } = useImmunizationFormValidationSchema(handleSubmit);\r\n  const { mutate } = useSaveImmunization(formik);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Card className={classes.root} style={{ marginTop: 20 }}>\r\n      <CardContent>\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <Form>\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  {\" \"}\r\n                  Routine Immunization\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>Date of vaccination</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      name=\"vaccinationDate\"\r\n                      id=\"vaccinationDate\"\r\n                      type=\"date\"\r\n                      onChange={formik.handleChange}\r\n                      {...{\r\n                        max: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n                      }}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.vaccinationDate}\r\n                    />\r\n                    {formik?.touched?.vaccinationDate &&\r\n                      formik?.errors.vaccinationDate && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccinationDate}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>\r\n                      Type of vaccine {isLoading && \"Loading vaccine ...\"}\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"vaccineType\"\r\n                      id=\"vaccineType\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.vaccineType}\r\n                    >\r\n                      <option value=\"\">Select vaccine type</option>\r\n                      {vaccines?.map((vacc) => (\r\n                        <option key={vacc?.id} value={vacc?.code}>\r\n                          {vacc?.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n\r\n                    {formik?.touched?.vaccineType &&\r\n                      formik?.errors.vaccineType && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccineType}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>Detail of vaccine</Label>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      name=\"vaccineDetail\"\r\n                      id=\"vaccineDetail\"\r\n                      style={{\r\n                        height: 150,\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.vaccineDetail}\r\n                    />\r\n                    {formik?.touched?.vaccineDetail &&\r\n                      formik?.errors.vaccineDetail && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccineDetail}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>Any missed vaccination ?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"missedVaccine\"\r\n                      id=\"missedVaccine\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      onChange={(e) => {\r\n                        formik.setFieldValue(\"missedVaccineType\", \"\");\r\n                        formik.handleChange(e);\r\n                      }}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.missedVaccine}\r\n                    >\r\n                      <option value=\"\">Select option</option>\r\n\r\n                      <option value={\"yes\"}>Yes</option>\r\n                      <option value={\"no\"}>No</option>\r\n                    </select>\r\n\r\n                    {formik?.touched?.missedVaccine &&\r\n                      formik?.errors.missedVaccine && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.missedVaccine}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  {formik?.values?.missedVaccine === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-12\">\r\n                      <Label>\r\n                        Enter missed vaccine{\" \"}\r\n                        {isLoadingMissedVaccine && \"Loading vaccine ...\"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"missedVaccineType\"\r\n                        id=\"missedVaccineType\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik?.values?.missedVaccineType}\r\n                        disabled={isLoadingMissedVaccine}\r\n                      >\r\n                        <option value=\"\">Select vaccine type</option>\r\n                        {missedVaccine?.map((vacc) => (\r\n                          <option key={vacc?.id} value={vacc?.code}>\r\n                            {vacc?.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n\r\n                      {formik?.touched?.missedVaccineType &&\r\n                        formik?.errors.missedVaccineType && (\r\n                          <span className={classes.error}>\r\n                            {formik?.errors.missedVaccineType}\r\n                          </span>\r\n                        )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <MatButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!isLoading ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              style={{ backgroundColor: \"#992E62\" }}\r\n              onClick={() =>\r\n                history.push({\r\n                  pathname: \"/\",\r\n                  state: { patientObj: props?.patientObj },\r\n                })\r\n              }\r\n            >\r\n              <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                Cancel\r\n              </span>\r\n            </MatButton>\r\n          </Form>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CreateRoutineImmunization;\r\n","import { useMutation } from \"react-query\";\r\nimport { saveImmunization } from \"../services/saveImmunization\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { queryClient } from \"../utils/queryClient\";\r\n\r\nexport const useSaveImmunization = (formik) => {\r\n  const history = useHistory();\r\n\r\n  const { mutate, isLoading, isError } = useMutation({\r\n    mutationFn: saveImmunization,\r\n    onSuccess: () => {\r\n      toast.success(\"Routine Immunization saved successful.\");\r\n      formik.resetForm();\r\n      queryClient.refetchQueries()\r\n      history.push({\r\n        pathname: \"/\",\r\n      });\r\n    },\r\n  });\r\n\r\n  return {\r\n    mutate,\r\n    isLoading,\r\n    isError,\r\n  };\r\n};\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const fetchImmunizationById = async (id) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}immunization/${id}`,\r\n    { headers: { Authorization: `Bearer ${token}` } }\r\n  );\r\n\r\n  return response?.data;\r\n};\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nconst config = {\r\n  headers: { Authorization: `Bearer ${token}` },\r\n};\r\n\r\nexport const updateImmunization = async (args) => {\r\n  \r\n\r\n  const response = await axios.put(\r\n    `${baseUrl}immunization/${args.id}`,\r\n    {\r\n      ...args.data,\r\n    },\r\n    config\r\n  );\r\n\r\n  return response.data;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Label } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useQuery } from \"react-query\";\r\n// import { queryClient } from \"../../utils/queryClient\";\r\nimport { determineClientImmunization } from \"../../utils/determineClientRoutineImmunizationVaccine\";\r\nimport { fetchRoutineImmunizationVaccine } from \"../../services/fetchRoutineImmunizationVaccine\";\r\nimport { useImmunizationFormValidationSchema } from \"./useImmunizationFormSchema\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport moment from \"moment\";\r\nimport { fetchImmunizationById } from \"../../services/fetchImmunizationById\";\r\nimport { useUpdateImmunization } from \"../../customHooks/useUpdateImmunization\";\r\nimport { calculateAgeNoText } from \"../../utils/calculateAge\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst UpdateRoutineImmunization = (props) => {\r\n  const disableInputs = props?.disableInputs;\r\n  const classes = useStyles();\r\n  const clientDateOfBirth =\r\n    props?.patientObj?.dateOfBirth || props?.patientObj?.dob;\r\n\r\n  const [queryKey] = useState(determineClientImmunization(clientDateOfBirth));\r\n  const [formInitialValue, setFormInitialValue] = useState(null)\r\n  const { data: vaccines, isLoading } = useQuery([queryKey], () =>\r\n    fetchRoutineImmunizationVaccine(queryKey)\r\n  );\r\n\r\n  const { data: missedVaccine, isLoading: isLoadingMissedVaccine } = useQuery(\r\n    [\"ROUTINE_IMMUNIZATION_VACCINE_TYPE\"],\r\n    () => fetchRoutineImmunizationVaccine(\"ROUTINE_IMMUNIZATION_VACCINE_TYPE\")\r\n  );\r\n\r\n  const handleSubmit = async () => {\r\n    Object.keys(formik?.initialValues).forEach((fieldName) => {\r\n      formik?.setFieldTouched(fieldName, true);\r\n    });\r\n    const errorObj = await formik.validateForm();\r\n    const isValid = Object.keys(errorObj).length === 0;\r\n\r\n    const payload = {\r\n      immunizationType: \"ROUTINE_IMMUNIZATION\",\r\n      patientId: props?.patientObj?.id,\r\n      patientUuid: props?.patientObj?.uuid,\r\n      vaccinationDate: formik?.values?.vaccinationDate,\r\n      uniqueImmunizationData: {\r\n        ...formik.values,\r\n        hospitalNumber: props?.patientObj?.identifier.identifier[0]?.value,\r\n        sex: props?.patientObj?.sex || props?.patientObj?.gender?.display,\r\n        age: calculateAgeNoText(props?.patientObj?.dateOfBirth),\r\n        firstName: props?.patientObj?.firstName,\r\n        lastname: props?.patientObj?.surname || props?.patientObj?.lastname,\r\n        dateOfBirth: props?.patientObj?.dateOfBirth,\r\n        dateOfRegistration: props?.patientObj?.dateOfRegistration,\r\n      },\r\n    };\r\n\r\n    if (isValid) {\r\n      mutate({ data: payload, id: props?.activeContent?.id });\r\n    }\r\n  };\r\n\r\n  const { formik } = useImmunizationFormValidationSchema(handleSubmit);\r\n  const { mutate } = useUpdateImmunization(formik);\r\n  const history = useHistory();\r\n\r\n  useQuery(\r\n    [\"FETCH_IMMUNIZATION_BY_ID\", props?.activeContent?.id],\r\n    () => fetchImmunizationById(props?.activeContent?.id),\r\n    {\r\n      onSuccess: (data) => {\r\n        const initialValues = {\r\n          immunizationType: data?.immunizationType,\r\n          vaccinationDate: data?.vaccinationDate,\r\n          vaccineType: data?.uniqueImmunizationData?.vaccineType,\r\n          vaccineDetail: data?.uniqueImmunizationData?.vaccineDetail,\r\n          missedVaccine: data?.uniqueImmunizationData?.missedVaccine,\r\n          missedVaccineType: data?.uniqueImmunizationData?.missedVaccineType,\r\n        };\r\n        if (formInitialValue === null) {\r\n          setFormInitialValue(initialValues)\r\n          formik.setValues(initialValues);\r\n        }\r\n      },\r\n      refetchOnMount: \"always\",\r\n\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Card className={classes.root} style={{ marginTop: 20 }}>\r\n      <CardContent>\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <Form>\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  {\" \"}\r\n                  Routine Immunization {`(${props?.activeContent?.actionType})`}\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>Date of vaccination</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      name=\"vaccinationDate\"\r\n                      id=\"vaccinationDate\"\r\n                      type=\"date\"\r\n                      onChange={formik.handleChange}\r\n                      {...{\r\n                        max: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n                      }}\r\n                      disabled={disableInputs}\r\n                      readOnly={disableInputs}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.vaccinationDate}\r\n                    />\r\n                    {formik?.touched?.vaccinationDate &&\r\n                      formik?.errors.vaccinationDate && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccinationDate}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>\r\n                      Type of vaccine {isLoading && \"Loading vaccine ...\"}\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"vaccineType\"\r\n                      id=\"vaccineType\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={disableInputs}\r\n                      readOnly={disableInputs}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.vaccineType}\r\n                    >\r\n                      <option value=\"\">Select vaccine type</option>\r\n                      {vaccines?.map((vacc) => (\r\n                        <option key={vacc?.id} value={vacc?.code}>\r\n                          {vacc?.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n\r\n                    {formik?.touched?.vaccineType &&\r\n                      formik?.errors.vaccineType && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccineType}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>Detail of vaccine</Label>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      name=\"vaccineDetail\"\r\n                      id=\"vaccineDetail\"\r\n                      disabled={disableInputs}\r\n                      readOnly={disableInputs}\r\n                      style={{\r\n                        height: 150,\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.vaccineDetail}\r\n                    />\r\n                    {formik?.touched?.vaccineDetail &&\r\n                      formik?.errors.vaccineDetail && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccineDetail}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>Any missed vaccination ?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"missedVaccine\"\r\n                      id=\"missedVaccine\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      onChange={(e) => {\r\n                        formik.setFieldValue(\"missedVaccineType\", \"\");\r\n                        formik.handleChange(e);\r\n                      }}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.missedVaccine}\r\n                      disabled={disableInputs}\r\n                      readOnly={disableInputs}\r\n                    >\r\n                      <option value=\"\">Select option</option>\r\n\r\n                      <option value={\"yes\"}>Yes</option>\r\n                      <option value={\"no\"}>No</option>\r\n                    </select>\r\n\r\n                    {formik?.touched?.missedVaccine &&\r\n                      formik?.errors.missedVaccine && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.missedVaccine}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  {formik?.values?.missedVaccine === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-12\">\r\n                      <Label>\r\n                        Enter missed vaccine{\" \"}\r\n                        {isLoadingMissedVaccine && \"Loading vaccine ...\"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"missedVaccineType\"\r\n                        id=\"missedVaccineType\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik?.values?.missedVaccineType}\r\n                        disabled={isLoadingMissedVaccine || disableInputs}\r\n                        readOnly={disableInputs}\r\n                      >\r\n                        <option value=\"\">Select vaccine type</option>\r\n                        {missedVaccine?.map((vacc) => (\r\n                          <option key={vacc?.id} value={vacc?.code}>\r\n                            {vacc?.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n\r\n                      {formik?.touched?.missedVaccineType &&\r\n                        formik?.errors.missedVaccineType && (\r\n                          <span className={classes.error}>\r\n                            {formik?.errors.missedVaccineType}\r\n                          </span>\r\n                        )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {!disableInputs && (\r\n              <MatButton\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                onClick={handleSubmit}\r\n              >\r\n                {!isLoading ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>\r\n                    Updating...\r\n                  </span>\r\n                )}\r\n              </MatButton>\r\n            )}\r\n            {!disableInputs && (\r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                style={{ backgroundColor: \"#992E62\" }}\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/\",\r\n                    // state: { patientObj: props?.patientObj },\r\n                  })\r\n                }\r\n              >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                  Cancel\r\n                </span>\r\n              </MatButton>\r\n            )}\r\n          </Form>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UpdateRoutineImmunization;\r\n","import { useMutation } from \"react-query\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { queryClient } from \"../utils/queryClient\";\r\nimport { updateImmunization } from \"../services/updateImmunization\";\r\n\r\nexport const useUpdateImmunization = (formik) => {\r\n  const history = useHistory();\r\n\r\n  const { mutate, isLoading, isError } = useMutation({\r\n    mutationFn: updateImmunization,\r\n    onSuccess: () => {\r\n      toast.success(\"Routine Immunization updated successful.\");\r\n      formik.resetForm();\r\n      queryClient.refetchQueries()\r\n      history.push({\r\n        pathname: \"/\",\r\n      });\r\n    },\r\n  });\r\n\r\n  return {\r\n    mutate,\r\n    isLoading,\r\n    isError,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport CreateRoutineImmunization from \"./CreateRoutineImmunization\";\r\nimport UpdateRoutineImmunization from \"./UpdateRoutineImmunization\";\r\n\r\nconst Immunization = (props) => {\r\n  const actionType = props?.activeContent?.actionType || \"create\";\r\n\r\n  const componentMap = {\r\n    create: <CreateRoutineImmunization {...props} />,\r\n    update: <UpdateRoutineImmunization {...props} disableInputs={false}/>,\r\n    view: <UpdateRoutineImmunization {...props} disableInputs={true} />,\r\n  };\r\n\r\n  const mapCompoenentToActionType = (actionType) => {\r\n    if (!actionType) {\r\n      return componentMap[\"create\"];\r\n    }\r\n\r\n    return componentMap[actionType];\r\n  };\r\n\r\n  return <>{mapCompoenentToActionType(actionType)}</>;\r\n};\r\n\r\nexport default Immunization;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { Card, Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useTetanusFormValidationSchema } from \"./useTetanusFormValidationSchema\";\r\nimport { fetchRoutineImmunizationVaccine } from \"../../services/fetchRoutineImmunizationVaccine\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Tetanus = (props) => {\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const { data: tetanusVaccines, isLoading } = useQuery(\r\n    [\"TETANUS_VACCINE\"],\r\n    () => fetchRoutineImmunizationVaccine(\"TETANUS_VACCINE\")\r\n  );\r\n\r\n  const handleSubmit = async () => {\r\n    Object.keys(formik?.initialValues).forEach((fieldName) => {\r\n      formik?.setFieldTouched(fieldName, true);\r\n    });\r\n    const errorObj = await formik.validateForm();\r\n    const isValid = Object.keys(errorObj).length === 0;\r\n    console.log(isValid, formik.errors);\r\n  };\r\n\r\n  const { formik } = useTetanusFormValidationSchema(handleSubmit);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <Form>\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Tetanus\r\n                </h5>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Type of vaccine {isLoading && \"Loading vaccine ...\"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"vaccineType\"\r\n                      id=\"vaccineType\"\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik.values?.vaccineType}\r\n                      disable={isLoading}\r\n                    >\r\n                      <option>Select</option>\r\n                      {!isLoading &&\r\n                        tetanusVaccines?.map((vacc) => (\r\n                          <option value={vacc.id} key={vacc?.id}>\r\n                            {vacc?.name || vacc?.display}\r\n                          </option>\r\n                        ))}\r\n                    </Input>\r\n\r\n                    {formik?.touched?.vaccineType &&\r\n                      formik?.errors.vaccineType && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccineType}\r\n                        </span>\r\n                      )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {formik?.values?.vaccineType !== \"\" && (\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Vaccine results\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"vaccineResult\"\r\n                        id=\"vaccineResult\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values?.vaccineResult}\r\n                      />\r\n\r\n                      {formik?.touched?.vaccineResult &&\r\n                        formik?.errors.vaccineResult && (\r\n                          <span className={classes.error}>\r\n                            {formik?.errors.vaccineResult}\r\n                          </span>\r\n                        )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <br />\r\n            <MatButton\r\n              type=\"button\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              onClick={handleSubmit}\r\n              style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n            >\r\n              {!false ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              style={{ backgroundColor: \"#992E62\" }}\r\n              onClick={() => history.push({ pathname: \"/\" })}\r\n            >\r\n              <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                Cancel\r\n              </span>\r\n            </MatButton>\r\n          </Form>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Tetanus;\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const useTetanusFormValidationSchema = (onSubmit) => {\r\n  const tetanusIntialValues = {\r\n    vaccineType: \"\",\r\n    vaccineResult: \"\",\r\n  };\r\n\r\n  const tetanusFormValidationSchema = yup.object({\r\n    vaccineType: yup.string().required(\"This field is required\"),\r\n    \r\n    vaccineResult: yup.string().when(\"vaccineType\", {\r\n      is: (vaccineType) => vaccineType !== \"\",\r\n      then: yup.string().required(\"This field is required\"),\r\n      otherwise: yup.string(),\r\n    }),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: tetanusIntialValues,\r\n    onSubmit,\r\n    validationSchema: tetanusFormValidationSchema,\r\n  });\r\n  return { formik };\r\n};\r\n","import MatButton from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\nimport { FormGroup, Label, Input, Form, Spinner } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { fetchCodesets } from \"../../services/fetchCodeset\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCovidVaccines } from \"../../services/fetchCovidVaccines\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { useCovidFirstVaccinationFormValidationSchema } from \"./covidFirstVaccinationValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst CovidFirstVaccination = () => {\r\n  const classes = useStyles();\r\n\r\n  const { data: covidAdverseEffects } = useQuery(\r\n    [\"GET_CODESETS\", \"COVID_ADVERSE_EFFECT\"],\r\n    () => fetchCodesets(\"COVID_ADVERSE_EFFECT\")\r\n  );\r\n\r\n  const { data: vaccines } = useQuery([\"COVID_VACCINES\"], () =>\r\n    fetchCovidVaccines()\r\n  );\r\n  const history = useHistory();\r\n  const { formik } = useCovidFirstVaccinationFormValidationSchema();\r\n\r\n  const handleSubmit = async () => {\r\n    Object.keys(formik?.initialValues).forEach((fieldName) => {\r\n      formik?.setFieldTouched(fieldName, true);\r\n    });\r\n    const errorObj = await formik.validateForm();\r\n    const isValid = Object.keys(errorObj).length === 0;\r\n    console.log(isValid);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    COVID-19 First Dosage\r\n                  </h5> \r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Do you work in the Health sector ?\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        \r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"workInHealthSector\"\r\n                          id=\"workInHealthSector\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.workInHealthSector}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"YES\">Yes</option>\r\n                          <option value=\"NO\">No</option>\r\n                        </Input>\r\n\r\n                        {formik?.touched?.workInHealthSector &&\r\n                          formik?.errors.workInHealthSector && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.workInHealthSector}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Any known medical condition ?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"knownMedicalCondition\"\r\n                          id=\"knownMedicalCondition\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.knownMedicalCondition}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"YES\">Yes</option>\r\n                          <option value=\"NO\">No</option>\r\n                        </Input>\r\n\r\n                        {formik?.touched?.knownMedicalCondition &&\r\n                          formik?.errors.knownMedicalCondition && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.knownMedicalCondition}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik?.values?.knownMedicalCondition === \"YES\" && (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label for=\"medicalCondition\">\r\n                            Medical conditions{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"medicalCondition\"\r\n                            id=\"medicalCondition\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values?.medicalCondition}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik?.touched?.medicalCondition &&\r\n                            formik?.errors.medicalCondition && (\r\n                              <span className={classes.error}>\r\n                                {formik?.errors.medicalCondition}\r\n                              </span>\r\n                            )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"adverseEffect\">\r\n                          Adverse Effect{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"adverseEffect\"\r\n                          id=\"adverseEffect\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.adverseEffect}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"YES\">Yes</option>\r\n                          <option value=\"NO\">No</option>\r\n                        </Input>\r\n\r\n                        {formik?.touched?.adverseEffect &&\r\n                          formik?.errors.adverseEffect && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.adverseEffect}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik?.values?.adverseEffect === \"YES\" && (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label for=\"adverseEffectOption\">\r\n                            Reaction Type (Adverse Effect){\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"adverseEffectOption\"\r\n                            id=\"adverseEffectOption\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values?.adverseEffectOption}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n\r\n                            {covidAdverseEffects?.map((adverseEffects) => (\r\n                              <option\r\n                                value={adverseEffects?.id}\r\n                                key={adverseEffects?.id}\r\n                              >\r\n                                {adverseEffects?.display}\r\n                              </option>\r\n                            ))}\r\n                          </Input>\r\n\r\n                          {formik?.touched?.adverseEffectOption &&\r\n                            formik?.errors.adverseEffectOption && (\r\n                              <span className={classes.error}>\r\n                                {formik?.errors.adverseEffectOption}\r\n                              </span>\r\n                            )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"vaccineType\">\r\n                          Vaccine <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"vaccineType\"\r\n                          id=\"vaccineType\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.vaccineType}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {vaccines?.map((vaccine) => (\r\n                            <option value={vaccine?.id} key={vaccine?.id}>\r\n                              {vaccine?.name}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n\r\n                        {formik?.touched?.vaccineType &&\r\n                          formik?.errors.vaccineType && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.vaccineType}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"dateOfFirstDosage\">\r\n                          Date of First Dosage{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"dateOfFirstDosage\"\r\n                          id=\"dateOfFirstDosage\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.dateOfFirstDosage}\r\n                        />\r\n                        {formik?.touched?.dateOfFirstDosage &&\r\n                          formik?.errors.dateOfFirstDosage && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.dateOfFirstDosage}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Location <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"location\"\r\n                          id=\"location\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.location}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Facility\">Facility</option>\r\n                          <option value=\"Community\">Community</option>\r\n                        </Input>\r\n\r\n                        {formik?.touched?.location &&\r\n                          formik?.errors.location && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.location}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik?.values?.location === \"Facility\" && (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label for=\"vaccinationFacility\">\r\n                            Facility Name\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"vaccinationFacility\"\r\n                            id=\"vaccinationFacility\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values?.vaccinationFacility}\r\n                          />\r\n\r\n                          {formik?.touched?.vaccinationFacility &&\r\n                            formik?.errors.vaccinationFacility && (\r\n                              <span className={classes.error}>\r\n                                {formik?.errors.vaccinationFacility}\r\n                              </span>\r\n                            )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"batchNumber\">\r\n                          Batch Number <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"batchNumber\"\r\n                          id=\"batchNumber\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.batchNumber}\r\n                        />\r\n                        {formik?.touched?.batchNumber &&\r\n                          formik?.errors.batchNumber && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.batchNumber}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              <MatButton\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                onClick={handleSubmit}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                {!false ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n              </MatButton>\r\n\r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                style={{ backgroundColor: \"#992E62\" }}\r\n                onClick={() => history.push({ pathname: \"/\" })}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                  Cancel\r\n                </span>\r\n              </MatButton>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CovidFirstVaccination;\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const fetchCodesets = async (code) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}application-codesets/v2/${code}`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const fetchCovidVaccines = async (code) => {\r\n  const response = await axios.get(`${baseUrl}covid/codeset?category=VACCINE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return response.data;\r\n};\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const useCovidFirstVaccinationFormValidationSchema = (onSubmit) => {\r\n  const covidFirstVaccinationInitialValue = {\r\n    workInHealthSector: \"\",\r\n    knownMedicalCondition: \"\",\r\n    medicalCondition: \"\",\r\n    adverseEffect: \"\",\r\n    adverseEffectOption: \"\",\r\n    vaccineType: \"\",\r\n    dateOfFirstDosage: \"\",\r\n    location: \"\",\r\n    vaccinationFacility: \"\",\r\n    batchNumber: \"\",\r\n  };\r\n\r\n  const covidFirstVaccValidationSchema = yup.object({\r\n    workInHealthSector: yup.string().required(\"This field is required\"),\r\n\r\n    knownMedicalCondition: yup.string().required(\"This field is required\"),\r\n\r\n    medicalCondition: yup.string().when(\"knownMedicalCondition\", {\r\n      is: (knownMedicalCondition) =>\r\n        knownMedicalCondition?.toLowerCase() === \"yes\",\r\n      then: yup.string().required(\"This field is required\"),\r\n      otherwise: yup.string(),\r\n    }),\r\n\r\n    adverseEffect: yup.string().required(\"This field is required\"),\r\n\r\n    adverseEffectOption: yup.string().when(\"adverseEffect\", {\r\n      is: (adverseEffect) => adverseEffect?.toLowerCase() === \"yes\",\r\n      then: yup.string().required(\"This field is required\"),\r\n      otherwise: yup.string(),\r\n    }),\r\n\r\n    vaccineType: yup.string().required(\"This field is required\"),\r\n\r\n    dateOfFirstDosage: yup.string().required(\"This field is required\"),\r\n\r\n    location: yup.string().required(\"This field is required\"),\r\n\r\n    vaccinationFacility: yup.string().when(\"location\", {\r\n      is: (location) => location?.toLowerCase() === \"facility\",\r\n      then: yup.string().required(\"This field is required\"),\r\n      otherwise: yup.string(),\r\n    }),\r\n\r\n    batchNumber: yup.string().required(\"This field is required\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: covidFirstVaccinationInitialValue,\r\n    onSubmit,\r\n    validationSchema: covidFirstVaccValidationSchema,\r\n  });\r\n  return { formik };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Input } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport CovidFirstVaccinationDose from \"./CovidFirstVaccination\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst CovidVaccinationHome = (props) => {\r\n  const [vaccineDosage, setVaccineDosage] = useState(\"\");\r\n\r\n  const covidFormMap = {\r\n    FIRST: <CovidFirstVaccinationDose />,\r\n  };\r\n\r\n  const RenderCovidForm = () => {\r\n    if (!vaccineDosage || vaccineDosage === \"\") {\r\n      return null;\r\n    }\r\n    return covidFormMap[vaccineDosage];\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n\r\n      <div style={{ marginTop: 10, marginBottom: 20 }}>\r\n        <Link\r\n          to={{\r\n            pathname: \"/\",\r\n            state: \"users\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-end mr-10 pr-10\"\r\n            style={{\r\n              backgroundColor: \"#014d88\",\r\n              fontWeight: \"bolder\",\r\n              margingRight: \"-40px\",\r\n            }}\r\n            startIcon={<TiArrowBack />}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n              Back{\" \"}\r\n            </span>\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <div>\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Vaccine Dosage\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"vaccineDosage\"\r\n                      id=\"vaccineDosage\"\r\n                      value={vaccineDosage}\r\n                      onChange={(e) => setVaccineDosage(e.target.value)}\r\n                    >\r\n                      <option value=\"\">Select option</option>\r\n                      <option value=\"FIRST\">First</option>\r\n                      <option value=\"SECOND\">Second</option>\r\n                      <option value=\"THIRD\">Third</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {RenderCovidForm()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CovidVaccinationHome;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport PatientCardDetail from \"./PatientCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport PatientVaccinationHistory from \"./../Vaccination/VaccinationHistory\";\r\nimport ImmunizationHome from \"../Immunization/ImmunizationHome\";\r\nimport Tetanus from \"../Tetanus/TetanusHome\";\r\nimport CovidVaccinationHome from \"../Covid/CovidVaccinationHome\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  let history = useHistory();\r\n  const [art, setArt] = useState(false);\r\n  const [activeContent, setActiveContent] = useState({\r\n    route: \"recent-history\",\r\n    id: \"\",\r\n    activeTab: \"home\",\r\n    actionType: \"create\",\r\n    obj: {},\r\n  });\r\n  const { classes } = props;\r\n  const patientObj = useMemo(() => {\r\n    return history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  }, [history.location]);\r\nconsole.log(patientObj)\r\n  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>Immunization /</Link> Patient Dashboard\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <PatientCardDetail\r\n            patientObj={patientObj}\r\n            setArt={setArt}\r\n            setActiveContent={setActiveContent}\r\n          />\r\n          <SubMenu\r\n            patientObj={patientObj}\r\n            art={art}\r\n            setActiveContent={setActiveContent}\r\n          />\r\n          <div>\r\n            {activeContent.route === \"vaccination-history\" && (\r\n              <PatientVaccinationHistory\r\n                patientObj={patientObj}\r\n                setActiveContent={setActiveContent}\r\n                activeContent={activeContent}\r\n              />\r\n            )}\r\n            \r\n            {activeContent.route === \"routine-immunization-patient\" && (\r\n              <ImmunizationHome\r\n                patientObj={patientObj}\r\n                setActiveContent={setActiveContent}\r\n                activeContent={activeContent}\r\n              />\r\n            )}\r\n\r\n\r\n            {activeContent.route === \"tetanus-patient\" && (\r\n              <Tetanus\r\n                patientObj={patientObj}\r\n                setActiveContent={setActiveContent}\r\n                activeContent={activeContent}\r\n              />\r\n            )}\r\n\r\n            \r\n            {activeContent.route === \"covid-patient\" && (\r\n              <CovidVaccinationHome\r\n                patientObj={patientObj}\r\n                setActiveContent={setActiveContent}\r\n                activeContent={activeContent}\r\n              />\r\n            )}\r\n\r\n\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","/* eslint-disable valid-typeof */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"./patient.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelSui } from \"semantic-ui-react\";\r\nimport { queryClient } from \"../../utils/queryClient\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    //maxWidth: 752,\r\n    //flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst RegisterPatient = (props) => {\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    active: true,\r\n    streetAddress: \"\",\r\n    address: [],\r\n    contact: [],\r\n    contactPoint: [],\r\n    dateOfBirth: \"\",\r\n    deceased: false,\r\n    deceasedDateTime: null,\r\n    firstName: \"\",\r\n    genderId: \"\",\r\n    identifier: \"\",\r\n    otherName: \"\",\r\n    maritalStatusId: \"\",\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    dateOfRegistration: \"\",\r\n    isDateOfBirthEstimated: null,\r\n    age: \"\",\r\n    phoneNumber: \"\",\r\n    altPhonenumber: \"\",\r\n    dob: \"\",\r\n    countryId: 1,\r\n    stateId: \"\",\r\n    district: \"\",\r\n    sexId: \"\",\r\n    ninNumber: \"\",\r\n  });\r\n  const [relatives, setRelatives] = useState({\r\n    address: \"\",\r\n    phone: \"\",\r\n    firstName: \"\",\r\n    email: \"\",\r\n    relationshipId: \"\",\r\n    lastName: \"\",\r\n    middleName: \"\",\r\n  });\r\n\r\n  let contactArray = [];\r\n  const [allContacts, setAllContacts] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [disabledAgeBaseOnAge] = useState(false);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [showRelative, setShowRelative] = useState(false);\r\n  const [patientFacilityId, setPatientFacilityId] = useState(null);\r\n  const [genders, setGenders] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions] = useState(\r\n    []\r\n  );\r\n  const [patientDTO, setPatientDTO] = useState({\r\n    person: \"\",\r\n    hivEnrollment: \"\",\r\n  });\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //status for hospital Number\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [hospitalNumStatus2, setHospitalNumStatus2] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const locationState = location.state;\r\n  let patientId = null;\r\n  patientId = locationState ? locationState.patientId : null;\r\n\r\n  const loadState = (stateId) => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data.sort());\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPatient = useCallback(async () => {\r\n    if (patientId) {\r\n      const response = await axios.get(`${baseUrl}patient/${patientId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const sexCodeset = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      const patient = response.data;\r\n\r\n      console.log(\"get patient\", patient?.contact?.contact);\r\n\r\n      setAllContacts(patient?.contact?.contact);\r\n      setPatientFacilityId(patient.facilityId);\r\n      const identifiers = patient.identifier;\r\n      const address = patient.address;\r\n      const contactPoint = patient?.contactPoint;\r\n      const hospitalNumber = identifiers?.identifier?.find(\r\n        (obj) => obj.type === \"HospitalNumber\"\r\n      );\r\n\r\n      const sex = _.find(sexCodeset.data, {\r\n        display: _.upperFirst(_.lowerCase(patient.sex)),\r\n      }).id;\r\n\r\n      const phone = phoneNumberFormatCheck(\r\n        contactPoint?.contactPoint?.find((obj) => obj.type === \"phone\")\r\n      );\r\n\r\n      const email = contactPoint?.contactPoint?.find(\r\n        (obj) => obj.type === \"email\"\r\n      );\r\n      const altphone = phoneNumberFormatCheck(\r\n        contactPoint?.contactPoint?.find((obj) => obj.type === \"altphone\")\r\n      );\r\n\r\n      const country =\r\n        address && address?.address && address?.address.length > 0\r\n          ? address.address[0]\r\n          : null;\r\n\r\n      if (country.stateId) {\r\n        loadState(country.stateId);\r\n      }\r\n\r\n      setBasicInfo({\r\n        active: true,\r\n        streetAddress: country.city,\r\n        address: [],\r\n        contact: [],\r\n        contactPoint: [],\r\n        dateOfBirth: \"\",\r\n        deceased: false,\r\n        deceasedDateTime: null,\r\n        hospitalNumber: hospitalNumber.value,\r\n        firstName: patient.firstName,\r\n        lastName: patient.surname,\r\n        genderId: \"\",\r\n        identifier: \"\",\r\n        otherName: \"\",\r\n        maritalStatusId: patient.maritalStatus?.id,\r\n        educationId: patient.education?.id,\r\n        employmentStatusId: patient.employmentStatus?.id,\r\n        dateOfRegistration: patient.dateOfRegistration,\r\n        isDateOfBirthEstimated: patient.dateOfBirth === \"Actual\" ? false : true,\r\n        age: calculate_age(patient.dateOfBirth),\r\n        phoneNumber: phone?.value,\r\n        altPhonenumber: altphone?.value,\r\n        dob: patient.dateOfBirth,\r\n        countryId: 1,\r\n        stateId: country.stateId,\r\n        district: parseInt(country.district),\r\n        landmark: country.line[0],\r\n        sexId: sex,\r\n        ninNumber: \"\",\r\n        email: email?.value,\r\n      });\r\n    }\r\n  }, [patientId]);\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    loadMaritalStatus();\r\n    loadEducation();\r\n    loadOccupation();\r\n    loadRelationships();\r\n    loadTopLevelCountry();\r\n    GetCountry();\r\n    setStateByCountryId();\r\n    getPatient();\r\n    if (basicInfo.dateOfRegistration < basicInfo.dob) {\r\n      toast.error(\"Date of registration can not be earlier than date of birth\");\r\n    }\r\n  }, [getPatient]);\r\n\r\n  const loadGenders = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setGenders(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadTopLevelCountry = useCallback(async () => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/0`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    settopLevelUnitCountryOptions(response.data.sort());\r\n  }, []);\r\n  const loadOrganisationUnitsByParentId = async (parentId) => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/${parentId}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data;\r\n  };\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n\r\n    return age_now;\r\n  };\r\n  const phoneNumberFormatCheck = (phone) => {\r\n    //console.log(\"err\", phone);\r\n    if (\r\n      phone !== undefined &&\r\n      typeof phone?.value !== null &&\r\n      typeof phone?.value !== \"undefined\" &&\r\n      phone?.value?.charAt(0) === \"0\"\r\n    ) {\r\n      phone.value = phone.value.replace(\"0\", \"234\");\r\n    }\r\n    return phone;\r\n  };\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get States from selected country\r\n  const getStates = (e) => {\r\n    const getCountryId = e.target.value;\r\n    setStateByCountryId(1);\r\n    setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId() {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/1`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setStates(response.data.sort());\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data.sort());\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      //   const m = today.getMonth() - birthDate.getMonth();\r\n      //   if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      //     age_now--;\r\n      //   }\r\n      basicInfo.age = age_now;\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, age: \"\" });\r\n    }\r\n    setBasicInfo({ ...basicInfo, dob: e.target.value });\r\n    if (basicInfo.age !== \"\" && basicInfo.age >= 60) {\r\n      toggle();\r\n    }\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value === \"Actual\") {\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value === \"Estimated\") {\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    const ageNumber = e.target.value.replace(/\\D/g, \"\");\r\n    if (!ageDisabled && ageNumber) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(ageNumber * -1, \"years\");\r\n      //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n      basicInfo.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n      if (ageNumber !== \"\" && ageNumber >= 60) {\r\n        toggle();\r\n      }\r\n    }\r\n    setBasicInfo({ ...basicInfo, age: ageNumber });\r\n  };\r\n\r\n  const handleInputChangeBasic = (e) => {\r\n    setBasicInfo({ ...basicInfo, [e.target.name]: e.target.value });\r\n\r\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"ninNumber\" && e.target.value !== \"\") {\r\n      const ninNumberValue = checkNumberLimit(\r\n        e.target.value.replace(/\\D/g, \"\")\r\n      );\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: ninNumberValue });\r\n    }\r\n    if (e.target.name === \"hospitalNumber\" && e.target.value !== \"\") {\r\n      async function getHosiptalNumber() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          errors.hospitalNumber = \"\";\r\n          //setObjValues({ ...objValues, uniqueId: e.target.value });\r\n          setHospitalNumStatus2(true);\r\n        } else {\r\n          errors.hospitalNumber = \"\";\r\n          toast.error(\"Error! Hosiptal Number already exist\");\r\n          setHospitalNumStatus(true);\r\n          setHospitalNumStatus2(false);\r\n        }\r\n      }\r\n      getHosiptalNumber();\r\n    }\r\n  };\r\n\r\n  //Function to show relatives\r\n  const handleAddRelative = () => {\r\n    setShowRelative(true);\r\n  };\r\n  //Function to cancel the relatives form\r\n  const handleCancelSaveRelationship = () => {\r\n    setShowRelative(false);\r\n  };\r\n  /*****  Validation  Relationship Input*/\r\n  const validateRelatives = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = relatives.firstName ? \"\" : \"First Name is required\";\r\n    //temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n    //temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n    temp.relationshipId = relatives.relationshipId\r\n      ? \"\"\r\n      : \"Relationship Type is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n  //Function to add relatives\r\n  const handleSaveRelationship = () => {\r\n    if (validateRelatives()) {\r\n      const contact = {\r\n        address: {\r\n          line: [relatives.address],\r\n        },\r\n        contactPoint: {\r\n          type: \"phone\",\r\n          value: relatives.phone,\r\n        },\r\n        firstName: relatives.firstName,\r\n        fullName:\r\n          relatives.firstName +\r\n          \" \" +\r\n          relatives.middleName +\r\n          \" \" +\r\n          relatives.lastName,\r\n        relationshipId: relatives.relationshipId,\r\n        surname: relatives.lastName,\r\n        otherName: relatives.middleName,\r\n      };\r\n\r\n      if (allContacts === undefined) {\r\n        contactArray.push(contact);\r\n        setAllContacts(contactArray);\r\n      } else {\r\n        setAllContacts([...allContacts, contact]);\r\n      }\r\n      setRelatives({\r\n        address: \"\",\r\n        phone: \"\",\r\n        firstName: \"\",\r\n        email: \"\",\r\n        relationshipId: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n      });\r\n    }\r\n  };\r\n  const handleDeleteRelative = (index) => {\r\n    allContacts.splice(index, 1);\r\n    setAllContacts([...allContacts]);\r\n  };\r\n  const handleEditRelative = (relative, index) => {\r\n    console.log(relative);\r\n    setRelatives(relative);\r\n    setShowRelative(true);\r\n    allContacts.splice(index, 1);\r\n  };\r\n  const getRelationship = (relationshipId) => {\r\n    const relationship = relationshipOptions.find(\r\n      (obj) => obj.id === relationshipId\r\n    );\r\n    return relationship ? relationship.display : \"\";\r\n  };\r\n  const handleInputChangeRelatives = (e) => {\r\n    setRelatives({ ...relatives, [e.target.name]: e.target.value });\r\n  };\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\";\r\n    temp.hospitalNumber = basicInfo.hospitalNumber\r\n      ? \"\"\r\n      : \"Hospital Number  is required.\";\r\n    //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n\r\n    temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\";\r\n    temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\";\r\n    temp.dateOfRegistration = basicInfo.dateOfRegistration\r\n      ? \"\"\r\n      : \"Date of Registration is required.\";\r\n    temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\";\r\n    temp.streetAddress = basicInfo.streetAddress ? \"\" : \"Address is required.\";\r\n    //temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n    temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\";\r\n    temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\";\r\n    temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\";\r\n    temp.employmentStatusId = basicInfo.employmentStatusId\r\n      ? \"\"\r\n      : \"Employee Status  is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validate()) {\r\n      setSaving(true);\r\n\r\n      //     });\r\n      try {\r\n        const patientForm = {\r\n          active: true,\r\n          address: [\r\n            {\r\n              city: basicInfo.streetAddress,\r\n              countryId: basicInfo.countryId,\r\n              district: basicInfo.district,\r\n              line: [basicInfo.landmark],\r\n              organisationUnitId: 0,\r\n              postalCode: \"\",\r\n              stateId: basicInfo.stateId,\r\n            },\r\n          ],\r\n          contact: allContacts,\r\n          contactPoint: [],\r\n          dateOfBirth: basicInfo.dob,\r\n          deceased: false,\r\n          deceasedDateTime: null,\r\n          firstName: basicInfo.firstName,\r\n          genderId: basicInfo.sexId,\r\n          sexId: basicInfo.sexId,\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: \"HospitalNumber\",\r\n              value: basicInfo.hospitalNumber,\r\n            },\r\n          ],\r\n          otherName: basicInfo.middleName,\r\n          maritalStatusId: basicInfo.maritalStatusId,\r\n          surname: basicInfo.lastName,\r\n          educationId: basicInfo.educationId,\r\n          employmentStatusId: basicInfo.employmentStatusId,\r\n          dateOfRegistration: basicInfo.dateOfRegistration,\r\n          isDateOfBirthEstimated:\r\n            basicInfo.dateOfBirth === \"Actual\" ? false : true,\r\n          ninNumber: basicInfo.ninNumber,\r\n        };\r\n\r\n        const phone = {\r\n          type: \"phone\",\r\n          value: basicInfo.phoneNumber,\r\n        };\r\n        if (basicInfo.email) {\r\n          const email = {\r\n            type: \"email\",\r\n            value: basicInfo.email,\r\n          };\r\n          patientForm.contactPoint.push(email);\r\n        }\r\n        if (basicInfo.altPhonenumber) {\r\n          const altPhonenumber = {\r\n            type: \"altphone\",\r\n            value: basicInfo.altPhonenumber,\r\n          };\r\n          patientForm.contactPoint.push(altPhonenumber);\r\n        }\r\n        patientForm.contactPoint.push(phone);\r\n        patientForm.id = patientId;\r\n        patientDTO.person = patientForm;\r\n\r\n        if (patientId) {\r\n          patientForm.id = null;\r\n          patientForm.facilityId = patientFacilityId;\r\n          const response = await axios.put(\r\n            `${baseUrl}patient/${patientId}`,\r\n            patientForm,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n          await queryClient.refetchQueries();\r\n          toast.success(\"Patient Updated successfully\");\r\n          setSaving(false);\r\n          history.push(\"/patient-vaccination-history\", {\r\n            patientObj: response.data,\r\n          });\r\n        } else {\r\n          const response = await axios.post(`${baseUrl}patient`, patientForm, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          await queryClient.refetchQueries();\r\n          toast.success(\"Patient Register successfully\");\r\n          setSaving(false);\r\n          history.push(\"/patient-vaccination-history\", {\r\n            patientObj: response.data,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          if (\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\" &&\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.subErrors[0].message !== \"\"\r\n          ) {\r\n            toast.error(\r\n              error.response.data.apierror.message +\r\n                \" : \" +\r\n                error.response.data.apierror.subErrors[0].field +\r\n                \" \" +\r\n                error.response.data.apierror.subErrors[0].message,\r\n              { position: toast.POSITION.BOTTOM_CENTER }\r\n            );\r\n          } else {\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n\r\n  const checkPhoneNumber = (e, inputName) => {\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setRelatives({ ...relatives, [inputName]: NumberValue });\r\n  };\r\n\r\n  const checkNumberLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  const handleInputChangePhoneNumber = (e, inputName) => {\r\n    const limit = 11;\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setBasicInfo({ ...basicInfo, [inputName]: NumberValue });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    history.push({ pathname: \"/\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>Patient /</Link> Patient Registration\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Link\r\n        to={{\r\n          pathname: \"/\",\r\n          state: \"users\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end mr-10 pr-10\"\r\n          style={{\r\n            backgroundColor: \"#014d88\",\r\n            fontWeight: \"bolder\",\r\n            margingRight: \"-40px\",\r\n          }}\r\n          startIcon={<TiArrowBack />}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n            Back{\" \"}\r\n          </span>\r\n        </Button>\r\n      </Link>\r\n      <br />\r\n      <br />\r\n\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    {userDetail === null\r\n                      ? \"Basic Information\"\r\n                      : \"Edit User Information\"}\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of Registration{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfRegistration\"\r\n                            id=\"dateOfRegistration\"\r\n                            min=\"1983-12-31\"\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            value={basicInfo.dateOfRegistration}\r\n                            //value={basicInfo.dateOfRegistration===\"\"? moment(new Date()).format(\"YYYY-MM-DD\") : basicInfo.dateOfRegistration}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.dateOfRegistration !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.dateOfRegistration}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">\r\n                            Hospital Number{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            value={basicInfo.hospitalNumber}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hospitalNumber !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {hospitalNumStatus === true ? (\r\n                            <span className={classes.error}>\r\n                              {\"Hospital number already exist\"}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"ninNumber\">\r\n                            National Identity Number (NIN){\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"ninNumber\"\r\n                            value={basicInfo.ninNumber}\r\n                            id=\"ninNumber\"\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                      {/* <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}HIV Enrollment\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div> */}\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">\r\n                            First Names <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            value={basicInfo.firstName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.firstName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.firstName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Middle Name</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"middleName\"\r\n                            id=\"middleName\"\r\n                            value={basicInfo.middleName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Last Name <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={basicInfo.lastName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.lastName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.lastName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Sex <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sexId\"\r\n                            id=\"sexId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.sexId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {genders.map((gender, index) => (\r\n                              <option key={gender.id} value={gender.id}>\r\n                                {gender.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.sexId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.sexId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-2 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>Date Of Birth</Label>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Actual\"\r\n                                name=\"dateOfBirth\"\r\n                                defaultChecked\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Actual\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Estimated\"\r\n                                name=\"dateOfBirth\"\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Estimated\r\n                            </label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Date </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dob\"\r\n                            min=\"1940-01-01\"\r\n                            id=\"dob\"\r\n                            max={basicInfo.dateOfRegistration}\r\n                            value={basicInfo.dob}\r\n                            onChange={handleDobChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Age</Label>\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"age\"\r\n                            className=\"form-control\"\r\n                            id=\"age\"\r\n                            min=\"1\"\r\n                            value={basicInfo.age}\r\n                            disabled={ageDisabled}\r\n                            onChange={handleAgeChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                        {basicInfo.age !== \"\" && basicInfo.age >= 80 ? (\r\n                          <span className={classes.error}>\r\n                            Are you sure of the age\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={\"row\"}>\r\n                      {/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Marital Status</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatusId\"\r\n                            id=\"maritalStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.maritalStatusId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {maritalStatusOptions.map(\r\n                              (maritalStatusOption, index) => (\r\n                                <option\r\n                                  key={maritalStatusOption.id}\r\n                                  value={maritalStatusOption.id}\r\n                                >\r\n                                  {maritalStatusOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Employment Status{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"employmentStatusId\"\r\n                            id=\"employmentStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.employmentStatusId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {occupationOptions.map(\r\n                              (occupationOption, index) => (\r\n                                <option\r\n                                  key={occupationOption.id}\r\n                                  value={occupationOption.id}\r\n                                >\r\n                                  {occupationOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                          {errors.employmentStatusId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.employmentStatusId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Education Level{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"educationId\"\r\n                            id=\"educationId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.educationId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {educationOptions.map((educationOption, index) => (\r\n                              <option\r\n                                key={educationOption.id}\r\n                                value={educationOption.id}\r\n                              >\r\n                                {educationOption.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.educationId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.educationId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Contact Details\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className={\"row\"}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Phone Number <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        {/* <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                   onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                   \r\n                                                   //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                /> */}\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"phoneNumber\"\r\n                          id=\"phoneNumber\"\r\n                          onChange={(e) => {\r\n                            handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                          }}\r\n                          value={basicInfo.phoneNumber}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          required\r\n                        />\r\n                        {errors.phoneNumber !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.phoneNumber}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                        {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Alt. Phone Number</Label>\r\n                        {/* <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    \r\n                                                /> */}\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"altPhonenumber\"\r\n                          id=\"altPhonenumber\"\r\n                          onChange={(e) => {\r\n                            handleInputChangePhoneNumber(e, \"altPhonenumber\");\r\n                          }}\r\n                          value={basicInfo.altPhonenumber}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          required\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Email</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          onChange={handleInputChangeBasic}\r\n                          value={basicInfo.email}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          required\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Country <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"countryId\"\r\n                          id=\"countryId\"\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          value={basicInfo.countryId}\r\n                          onChange={getStates}\r\n                          disabled\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          {countries.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.countryId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.countryId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          State <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"stateId\"\r\n                          id=\"stateId\"\r\n                          value={basicInfo.stateId}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          onChange={getProvinces}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {states.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.stateId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.stateId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Province/District/LGA{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"district\"\r\n                          id=\"district\"\r\n                          value={basicInfo.district}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          onChange={handleInputChangeBasic}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {provinces.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.district !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.district}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className={\"row\"}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Street Address{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"streetAddress\"\r\n                          id=\"streetAddress\"\r\n                          value={basicInfo.streetAddress}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {errors.streetAddress !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.streetAddress}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Landmark</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"landmark\"\r\n                          id=\"landmark\"\r\n                          value={basicInfo.landmark}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Relationship / Next Of Kin\r\n                  </h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    {allContacts && allContacts.length > 0 && (\r\n                      <div className=\"col-xl-12 col-lg-12\">\r\n                        <table style={{ width: \"100%\" }} className=\"mb-3\">\r\n                          <thead className=\"mb-3\">\r\n                            <tr>\r\n                              <th>Relationship Type</th>\r\n                              <th>Name</th>\r\n                              <th>Phone</th>\r\n                              <th>Address</th>\r\n                              <th>Actions</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"mb-3\">\r\n                            {allContacts.map((item, index) => {\r\n                              return (\r\n                                <tr key={item.index} className=\"mb-3\">\r\n                                  <td>\r\n                                    {getRelationship(item.relationshipId)}\r\n                                  </td>\r\n                                  <td>\r\n                                    {item?.firstName +\r\n                                      \" \" +\r\n                                      item?.otherName +\r\n                                      \" \" +\r\n                                      item?.surname}\r\n                                  </td>\r\n                                  <td>{item.contactPoint.value}</td>\r\n                                  <td>{item.address?.line[0]}</td>\r\n                                  <td>\r\n                                    {/* <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                      onClick={() =>\r\n                                        handleEditRelative(item, index)\r\n                                      }\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"edit\" />\r\n                                    </button> */}\r\n                                    &nbsp;&nbsp;\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-danger btn-sm removeRow\"\r\n                                      onClick={(e) =>\r\n                                        handleDeleteRelative(index)\r\n                                      }\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"trash\" />\r\n                                    </button>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                      {showRelative && (\r\n                        <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"relationshipType\">\r\n                                    Relationship Type{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                  </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"relationshipId\"\r\n                                    id=\"relationshipId\"\r\n                                    value={relatives.relationshipId}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  >\r\n                                    <option value={\"\"}>Select</option>\r\n                                    {relationshipOptions.map(\r\n                                      (relative, index) => (\r\n                                        <option\r\n                                          key={relative.id}\r\n                                          value={relative.id}\r\n                                        >\r\n                                          {relative.display}\r\n                                        </option>\r\n                                      )\r\n                                    )}\r\n                                  </select>\r\n                                  {errors.relationshipId !== \"\" ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.relationshipId}\r\n                                    </span>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"cfirstName\">\r\n                                    First Name{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                  </Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={relatives.firstName}\r\n                                    id=\"firstName\"\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                  {errors.firstName !== \"\" ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.firstName}\r\n                                    </span>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Middle Name</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"middleName\"\r\n                                    id=\"middleName\"\r\n                                    value={relatives.middleName}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                  {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Last Name </Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    value={relatives.lastName}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactPhoneNumber\">\r\n                                    Phone Number\r\n                                  </Label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"phone\"\r\n                                    id=\"phone\"\r\n                                    onChange={(e) => {\r\n                                      checkPhoneNumber(e, \"phone\");\r\n                                    }}\r\n                                    value={relatives.phone?.value}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                  {errors.phone !== \"\" ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.phone}\r\n                                    </span>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactEmail\">Email</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    value={relatives.email}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    required\r\n                                  />\r\n                                  {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactAddress\">Address</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    id=\"address\"\r\n                                    value={relatives.address?.city}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                  {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleSaveRelationship}\r\n                                >\r\n                                  Add\r\n                                </MatButton>\r\n                              </div>\r\n\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"secondary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleCancelSaveRelationship}\r\n                                >\r\n                                  Cancel\r\n                                </MatButton>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\"></div>\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<AddIcon />}\r\n                    onClick={handleAddRelative}\r\n                    style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                  >\r\n                    Add a Relative/Next Of Kin\r\n                  </MatButton>\r\n                  {/* </div> */}\r\n                </div>\r\n              </div>\r\n              {saving ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                onClick={handleSubmit}\r\n                hidden={disabledAgeBaseOnAge}\r\n                disabled={saving}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                {!saving ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n              </MatButton>\r\n\r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                style={{ backgroundColor: \"#992E62\" }}\r\n                onClick={handleCancel}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                  Cancel\r\n                </span>\r\n              </MatButton>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterPatient;\r\n","import React from \"react\";\r\nimport { MemoryRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Home from \"./main/webapp/jsx/components/Home\";\r\nimport PatientDetail from \"./main/webapp/jsx/components/Patient/PatientDetail\";\r\nimport RegisterPatientPage from \"./main/webapp/jsx/components/Patient/RegisterPatient\";\r\nimport ImmunizationHome from \"./main/webapp/jsx/components/Immunization/ImmunizationHome\";\r\nimport TetanusHome from \"./main/webapp/jsx/components/Tetanus/TetanusHome\";\r\nimport { QueryClientProvider } from \"react-query\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nimport { queryClient } from \"./main/webapp/jsx/utils/queryClient\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <QueryClientProvider client={queryClient}>\r\n        <div>\r\n          <ToastContainer  autoClose={3000} hideProgressBar position=\"bottom-center\"/>\r\n          <Switch>\r\n            <Route path=\"/tetanus-patient\">\r\n              <TetanusHome />\r\n            </Route>\r\n            <Route path=\"/routine-immunization-patient\">\r\n              <ImmunizationHome />\r\n            </Route>\r\n            <Route path=\"/patient-vaccination-history\">\r\n              <PatientDetail />\r\n            </Route>\r\n            <Route path=\"/register-patient\">\r\n              <RegisterPatientPage />\r\n            </Route>\r\n\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n        <ReactQueryDevtools initialIsOpen={false} />\r\n      </QueryClientProvider>\r\n    </Router>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}