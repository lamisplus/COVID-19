{"version":3,"sources":["main/webapp/jsx/utils/queryKeys.js","main/webapp/api.js","main/webapp/jsx/services/fetchAllPatients.js","main/webapp/jsx/utils/calculateAge.js","main/webapp/jsx/utils/queryClient.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/services/fetchAllCovidVaccinatedPatients.js","main/webapp/jsx/components/Patient/PatientVaccinatedList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/utils/determineClientRoutineImmunizationVaccine.js","main/webapp/jsx/services/fetchRoutineImmunizationVaccine.js","main/webapp/jsx/components/Immunization/ImmunizationHome.js","main/webapp/jsx/components/Immunization/useImmunizationFormSchema.js","main/webapp/jsx/components/Tetanus/TetanusHome.js","main/webapp/jsx/components/Tetanus/useTetanusFormValidationSchema.js","main/webapp/jsx/components/Covid/CovidFirstVaccination.js","main/webapp/jsx/services/fetchCodeset.js","main/webapp/jsx/services/fetchCovidVaccines.js","main/webapp/jsx/components/Covid/covidFirstVaccinationValidationSchema.js","main/webapp/jsx/components/Covid/CovidVaccinationHome.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["getPatientDataKey","getVaccinatedPatientDataKey","url","token","URLSearchParams","window","location","search","get","fetchAllPatients","async","page","pageSize","_ref","axios","concat","baseUrl","headers","Authorization","data","calculateAge","dob","noText","today","Date","birthDate","age_now","getFullYear","m","getMonth","getDate","queryClientSettings","defaultOptions","queries","retry","refetchOnMount","refetchOnWindowFocus","refetchOnReconnect","cacheTime","Infinity","refetchInterval","refetchIntervalInBackground","suspense","staleTime","mutations","queryClient","QueryClient","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","showPPI","setShowPPI","useState","query","setQueryParams","handleCheckBox","e","target","checked","isLoading","refetch","useQuery","onSuccess","nextPage","queryKey","prefetchQuery","prefetchNextPage","children","MaterialTable","icons","title","columns","field","hidden","render","row","firstName","surname","otherName","filtering","_row$identifier","_row$identifier$ident","currentIdentifier","identifier","filter","obj","type","pop","value","gender","display","dateOfBirth","Link","to","pathname","route","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","height","width","size","Button","color","MdDashboard","fontSize","fontWeight","components","Toolbar","className","name","id","onChange","border","borderRadius","htmlFor","MTableToolbar","records","totalCount","totalRecords","currentPage","options","headerStyle","searchFieldStyle","margingLeft","paging","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","onChangePage","newPage","prevFilters","fetchAllCovidVaccinatedPatients","response","lastName","Label","vaccinationStatus","divStyle","Home","key","setKey","marginTop","marginBottom","startIcon","FaUserPlus","textTransform","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","PatientVaccinatedList","withStyles","theme","root","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","padding","spacing","unit","link","primary","main","textDecoration","classes","useEffect","ExpansionPanel","ExpansionPanelSummary","md","root2","ButtonMui","TiArrowBack","participantId","_obj$identifier","_obj$identifier$ident","_identifiers$pop","identifiers","call","getHospitalNumber","dateParts","split","dateObject","calculate_age","moment","format","phoneNumber","contactPoint","find","getPhoneNumber","address","city","houseAddress","line","landMark","getAddress","Divider","SubMenu","patientProp","activeItem","setActiveItem","patientAge","calculateAgeNoText","Menu","inverted","Item","onClick","setActiveContent","activeContent","getAge","useStyles","makeStyles","card","margin","flexDirection","form","submit","cardBottom","Select","button","input","error","Vaccination","errors","setErrors","temp","covidEffect","setCovidEffect","vaccine","setVaccine","objValues","setObjValues","adverseEffect","batchNumber","doseNumber","patientId","vaccinationFacility","vaccineDate","saving","setSaving","VACCINE","COVID_ADVERSE_EFFECT","then","catch","handleInputChange","Modal","isOpen","showModal","toggle","Form","ModalHeader","ModalBody","CardBody","_Fragment","FormGroup","Input","map","InputGroup","max","MatButton","SaveIcon","preventDefault","Object","values","every","x","post","toast","success","loadPatients","disabled","CancelIcon","PatientVaccinationHistory","vacinationList","setVaccinationList","modal","setModal","openDeleteModal","setOpenDeleteModal","React","toggleDeleteModal","record","setRecord","patients","useCallback","console","log","vaccineName","actions","position","Dropdown","item","LoadEditModal","IconMenu","LoadDeleteModal","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","message","fetchRoutineImmunizationVaccine","code","library","add","faCheckSquare","faCoffee","faEdit","faTrash","demo","background","default","inline","Immunization","_props$patientObj","_props$patientObj2","_formik$values","_formik$values2","_formik$values3","_formik$values4","_formik$values5","clientDateOfBirth","startDate","endDate","clientAgeInWeeks","diff","clientAgeInMonths","clientAgeInYears","determineClientImmunization","vaccines","missedVaccine","isLoadingMissedVaccine","formik","onSubmit","ImmunizationFormInitialSchema","yup","vaccineType","required","vaccineDetail","missedVaccineType","when","is","missedVaccineValue","toLowerCase","otherwise","useFormik","initialValues","validationSchema","useImmunizationFormValidationSchema","history","useHistory","CardContent","handleChange","onBlur","handleBlur","vacc","setFieldValue","push","Tetanus","_formik$touched","_formik$touched2","tetanusVaccines","handleSubmit","keys","forEach","fieldName","setFieldTouched","errorObj","validateForm","isValid","length","tetanusFormValidationSchema","vaccineResult","useTetanusFormValidationSchema","disable","touched","CovidFirstVaccination","_formik$touched3","_formik$touched4","_formik$values6","_formik$values7","_formik$touched5","_formik$values8","_formik$touched6","_formik$values9","_formik$touched7","_formik$values10","_formik$touched8","_formik$values11","_formik$values12","_formik$touched9","_formik$values13","_formik$touched10","covidAdverseEffects","fetchCodesets","fetchCovidVaccines","covidFirstVaccValidationSchema","workInHealthSector","knownMedicalCondition","medicalCondition","adverseEffectOption","dateOfFirstDosage","useCovidFirstVaccinationFormValidationSchema","for","adverseEffects","CovidVaccinationHome","vaccineDosage","setVaccineDosage","covidFormMap","FIRST","CovidFirstVaccinationDose","ToastContainer","autoClose","hideProgressBar","margingRight","art","setArt","activeTab","actionType","useMemo","PatientCardDetail","ImmunizationHome","flexGrow","RegisterPatient","_relatives$phone","_relatives$address","basicInfo","setBasicInfo","active","streetAddress","contact","deceased","deceasedDateTime","genderId","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","age","altPhonenumber","countryId","stateId","district","sexId","ninNumber","relatives","setRelatives","phone","email","relationshipId","middleName","contactArray","allContacts","setAllContacts","disabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","patientFacilityId","setPatientFacilityId","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","patientDTO","setPatientDTO","person","hivEnrollment","userDetail","user","useLocation","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","open","setOpen","locationState","getPatient","_patient$contact","_patient$contact2","_identifiers$identifi","_contactPoint$contact","_contactPoint$contact2","_contactPoint$contact3","_patient$maritalStatu","_patient$education","_patient$employmentSt","sexCodeset","patient","facilityId","hospitalNumber","sex","_","upperFirst","lowerCase","phoneNumberFormatCheck","altphone","country","sort","maritalStatus","education","employmentStatus","parseInt","landmark","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","GetCountry","setStateByCountryId","_phone$value","undefined","charAt","replace","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNumberLimit","getHosiptalNumber","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","slice","handleInputChangePhoneNumber","inputName","NumberValue","min","index","defaultChecked","ageNumber","currentDate","setDate","setMonth","dobNew","toISOString","maritalStatusOption","occupationOption","educationOption","getCountryId","_item$address","splice","handleDeleteRelative","FontAwesomeIcon","relative","checkPhoneNumber","handleSaveRelationship","validateRelatives","fullName","handleCancelSaveRelationship","AddIcon","handleAddRelative","Spinner","validate","patientForm","organisationUnitId","postalCode","assignerId","put","refetchQueries","subErrors","POSITION","BOTTOM_CENTER","handleCancel","App","Router","QueryClientProvider","client","Switch","Route","path","TetanusHome","PatientDetail","RegisterPatientPage","ReactQueryDevtools","initialIsOpen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","version","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","label","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","alert","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","fontFamily","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"spBAAO,MAAMA,EAAoB,mBACpBC,EAA8B,8B,sBCDpC,MAAMC,GAET,WACSC,GAET,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,OCFvCC,GAAmBC,UAAuC,IAAhC,KAAEC,EAAI,SAAEC,EAAQ,OAAEL,GAAQM,EAK/D,aAJuBC,KAAMN,IAAI,GAADO,OAC3BC,GAAO,qBAAAD,OAAoBH,EAAQ,YAAAG,OAAWJ,EAAI,iBAAAI,OAAgBR,GACrE,CAAEU,QAAS,CAAEC,cAAc,UAADH,OAAYZ,QAExBgB,IAAI,E,2CCRf,MAAMC,GAAeA,CAACC,EAAKC,KAC9B,MAAMC,EAAQ,IAAIC,KACZC,EAAY,IAAID,KAAKH,GAC3B,IAAIK,EAAUH,EAAMI,cAAgBF,EAAUE,cAC9C,MAAMC,EAAIL,EAAMM,WAAaJ,EAAUI,WAMvC,OAJIH,GAAW,GAAKE,EAAI,GAAKL,EAAMO,UAAYL,EAAUK,WACvDJ,IAGc,IAAZA,EACKE,EAAI,YAENF,EAAU,UAAU,ECV/B,MAAMK,GAAsB,CACxBC,eAAgB,CACdC,QAAS,CACPC,MAAO,EACPC,gBAAgB,EAChBC,sBAAsB,EACtBC,oBAAoB,EACpBC,UAAWC,IACXC,gBAAiB,KACjBC,6BAA6B,EAC7BC,UAAU,EACVC,UAAWJ,KAEbK,UAAW,CACTV,MAAO,KAKAW,GAAc,I,OAAIC,GAAYf,I,YCa7CgB,IAAOC,OAAO,MACdC,MAEA,MAAMC,GAAa,CACjBC,IAAKC,sBAAW,CAACC,EAAOC,IAAQC,eAACC,IAAM,IAAKH,EAAOC,IAAKA,MACxDG,MAAOL,sBAAW,CAACC,EAAOC,IAAQC,eAACE,IAAK,IAAKJ,EAAOC,IAAKA,MACzDI,MAAON,sBAAW,CAACC,EAAOC,IAAQC,eAACG,IAAK,IAAKL,EAAOC,IAAKA,MACzDK,OAAQP,sBAAW,CAACC,EAAOC,IAAQC,eAACK,IAAa,IAAKP,EAAOC,IAAKA,MAClEO,YAAaT,sBAAW,CAACC,EAAOC,IAC9BC,eAACO,IAAY,IAAKT,EAAOC,IAAKA,MAEhCS,KAAMX,sBAAW,CAACC,EAAOC,IAAQC,eAACQ,IAAI,IAAKV,EAAOC,IAAKA,MACvDU,OAAQZ,sBAAW,CAACC,EAAOC,IAAQC,eAACU,IAAO,IAAKZ,EAAOC,IAAKA,MAC5DY,OAAQd,sBAAW,CAACC,EAAOC,IAAQC,eAACY,IAAU,IAAKd,EAAOC,IAAKA,MAC/Dc,UAAWhB,sBAAW,CAACC,EAAOC,IAAQC,eAACa,IAAS,IAAKf,EAAOC,IAAKA,MACjEe,SAAUjB,sBAAW,CAACC,EAAOC,IAAQC,eAACc,IAAQ,IAAKhB,EAAOC,IAAKA,MAC/DgB,SAAUlB,sBAAW,CAACC,EAAOC,IAAQC,eAACO,IAAY,IAAKT,EAAOC,IAAKA,MACnEiB,aAAcnB,sBAAW,CAACC,EAAOC,IAC/BC,eAACiB,IAAW,IAAKnB,EAAOC,IAAKA,MAE/BmB,YAAarB,sBAAW,CAACC,EAAOC,IAAQC,eAACG,IAAK,IAAKL,EAAOC,IAAKA,MAC/DoB,OAAQtB,sBAAW,CAACC,EAAOC,IAAQC,eAACmB,IAAM,IAAKrB,EAAOC,IAAKA,MAC3DqB,UAAWvB,sBAAW,CAACC,EAAOC,IAAQC,eAACqB,IAAW,IAAKvB,EAAOC,IAAKA,MACnEuB,gBAAiBzB,sBAAW,CAACC,EAAOC,IAAQC,eAACuB,IAAM,IAAKzB,EAAOC,IAAKA,MACpEyB,WAAY3B,sBAAW,CAACC,EAAOC,IAAQC,eAACwB,IAAU,IAAK1B,EAAOC,IAAKA,OAkLtD0B,OA/KG3B,IAChB,MAAO4B,EAASC,GAAcC,oBAAS,IAChCC,EAAOC,GAAkBF,mBAAS,CACvCxE,KAAM,EACNC,SAAU,GACVL,OAAQ,KAEJ+E,EAAkBC,IAClBA,EAAEC,OAAOC,QACXP,GAAW,GAEXA,GAAW,EACb,GAYI,KAAE/D,EAAI,UAAEuE,EAAS,QAAEC,GAAYC,YACnC,CAAC5F,EAAmBoF,IACpB,IAAM3E,GAAiB2E,IACvB,CACES,UAAWA,IAbUnF,WACvB,MAAMoF,EAAWV,EAAMzE,KAAO,EAExBoF,EAAW,CAAC/F,EAAmB,IAAKoF,EAAOzE,KAAMmF,UACjDjD,GAAYmD,cAAcD,GAAU,IACxCtF,GAAiB,IAAK2E,EAAOzE,KAAMmF,KACpC,EAOkBG,KAIrB,OACE1C,eAAA,OAAA2C,SACE3C,eAAC4C,IAAa,CACZC,MAAOlD,GACPmD,MAAM,eACNC,QAAS,CACP,CACED,MAAO,eACPE,MAAO,YACPC,OAAQvB,EACRwB,OAASC,IACJ,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKC,WAAY,KAAS,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKE,WAAc,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAKG,YAAa,IAE7D,CACER,MAAO,kBACPE,MAAO,gBACPO,WAAW,EACXL,OAASC,IAAS,IAADK,EAAAC,EACf,MACMC,GADiB,OAAHP,QAAG,IAAHA,GAAe,QAAZK,EAAHL,EAAKQ,kBAAU,IAAAH,GAAY,QAAZC,EAAfD,EAAiBG,kBAAU,IAAAF,OAAxB,EAAHA,EAA6BG,QAAQC,GAAsB,oBAAX,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKC,SAChCC,MAExC,OAAsC,QAAZ,OAAjBL,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBM,OAAiBN,EAAkBM,MAAQ,EAAE,GAG3E,CACElB,MAAO,MACPE,MAAO,SACPO,WAAW,EACXL,OAASC,GAAyB,QAAb,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKc,QAAkBd,EAAIc,OAAOC,QAAU,IAEhE,CACEpB,MAAO,MACPE,MAAO,cACPO,WAAW,EACXL,OAASC,GAAQtF,GAAgB,OAAHsF,QAAG,IAAHA,OAAG,EAAHA,EAAKgB,cAGrC,CACErB,MAAO,UACPE,MAAO,UACPO,WAAW,EACXL,OAASC,GACPnD,eAAA,OAAA2C,SACE3C,eAACoE,KAAI,CACHC,GAAI,CACFC,SAAU,+BACVC,MAAO,8BACPC,MAAO,CAAEC,WAAYtB,IACrBR,SAEF+B,gBAACC,KAAW,CACVC,QAAQ,YACR,aAAW,eACXC,MAAO,CACLC,gBAAiB,mBACjBC,OAAQ,OACRC,MAAO,SAETC,KAAK,QAAOtC,SAAA,CAEZ3C,eAACkF,KAAM,CACLC,MAAM,UACNF,KAAK,QACL,aAAW,wBACX,gBAAc,OACdJ,MAAO,CAAEC,gBAAiB,oBAAqBnC,SAE/C3C,eAACoF,KAAW,MAEdpF,eAACkF,KAAM,CAACL,MAAO,CAAEC,gBAAiB,oBAAqBnC,SACrD3C,eAAA,QACE6E,MAAO,CACLQ,SAAU,OACVF,MAAO,OACPG,WAAY,UACZ3C,SACH,iCAUf4C,WAAY,CACVC,QAAU1F,GACR4E,gBAAA,OAAA/B,SAAA,CACE+B,gBAAA,OAAKe,UAAU,oDAAmD9C,SAAA,CAChE3C,eAAA,SACE8D,KAAK,WACL2B,UAAU,mBACVC,KAAK,UACLC,GAAG,SACH3B,MAAM,SACN9B,SAAqB,IAAZR,EACTkE,SAAU7D,EACV8C,MAAO,CACLgB,OAAQ,oBACRC,aAAc,aAGlB9F,eAAA,SAAOyF,UAAU,mBAAmBM,QAAQ,mBAAkBpD,SAC5D3C,eAAA,KAAG6E,MAAO,CAAEM,MAAO,UAAWG,WAAY,QAAS3C,SAAC,kBAKxD3C,eAACgG,gBAAa,IAAKlG,QAIzBlC,MAAU,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMqI,UAAW,GACvBC,WAAgB,OAAJtI,QAAI,IAAJA,OAAI,EAAJA,EAAMuI,aAClBhE,UAAWA,EACX/E,KAAU,OAAJQ,QAAI,IAAJA,OAAI,EAAJA,EAAMwI,YACZC,QAAS,CACPC,YAAa,CACXxB,gBAAiB,UACjBK,MAAO,QAEToB,iBAAkB,CAChBvB,MAAO,OACPwB,YAAa,SAEfjD,WAAW,EACXkD,QAAQ,EACRC,cAAc,EACdC,qBAAsB,OACtBC,gBAAiB,CAAC,GAAI,GAAI,KAC1BvJ,UAAe,OAALwE,QAAK,IAALA,OAAK,EAALA,EAAOxE,WAAY,GAC7BwJ,iBAAkB,KAEpBC,aAAeC,IACbjF,GAAgBkF,IAAW,IAAWA,EAAa5J,KAAM2J,MACzD3E,EAAQP,EAAM,KAGd,ECtOH,MAAMoF,GAAkC9J,UAAuC,IAAhC,KAAEC,EAAI,SAAEC,EAAQ,OAAEL,GAAQM,EAE9E,MAAM4J,QAAiB3J,KAAMN,IAAI,GAADO,OAC3BC,GAAO,uCAAAD,OAAsCH,EAAQ,YAAAG,OAAWJ,EAAI,iBAAAI,OAAgBR,GACvF,CAAEU,QAAS,CAAEC,cAAc,UAADH,OAAYZ,OAGxC,OAAe,OAARsK,QAAQ,IAARA,OAAQ,EAARA,EAAUtJ,IAAI,E,cCyBvB4B,IAAOC,OAAO,MACdC,MAEA,MAAMC,GAAa,CACjBC,IAAKC,sBAAW,CAACC,EAAOC,IAAQC,eAACC,IAAM,IAAKH,EAAOC,IAAKA,MACxDG,MAAOL,sBAAW,CAACC,EAAOC,IAAQC,eAACE,IAAK,IAAKJ,EAAOC,IAAKA,MACzDI,MAAON,sBAAW,CAACC,EAAOC,IAAQC,eAACG,IAAK,IAAKL,EAAOC,IAAKA,MACzDK,OAAQP,sBAAW,CAACC,EAAOC,IAAQC,eAACK,IAAa,IAAKP,EAAOC,IAAKA,MAClEO,YAAaT,sBAAW,CAACC,EAAOC,IAC9BC,eAACO,IAAY,IAAKT,EAAOC,IAAKA,MAEhCS,KAAMX,sBAAW,CAACC,EAAOC,IAAQC,eAACQ,IAAI,IAAKV,EAAOC,IAAKA,MACvDU,OAAQZ,sBAAW,CAACC,EAAOC,IAAQC,eAACU,IAAO,IAAKZ,EAAOC,IAAKA,MAC5DY,OAAQd,sBAAW,CAACC,EAAOC,IAAQC,eAACY,IAAU,IAAKd,EAAOC,IAAKA,MAC/Dc,UAAWhB,sBAAW,CAACC,EAAOC,IAAQC,eAACa,IAAS,IAAKf,EAAOC,IAAKA,MACjEe,SAAUjB,sBAAW,CAACC,EAAOC,IAAQC,eAACc,IAAQ,IAAKhB,EAAOC,IAAKA,MAC/DgB,SAAUlB,sBAAW,CAACC,EAAOC,IAAQC,eAACO,IAAY,IAAKT,EAAOC,IAAKA,MACnEiB,aAAcnB,sBAAW,CAACC,EAAOC,IAC/BC,eAACiB,IAAW,IAAKnB,EAAOC,IAAKA,MAE/BmB,YAAarB,sBAAW,CAACC,EAAOC,IAAQC,eAACG,IAAK,IAAKL,EAAOC,IAAKA,MAC/DoB,OAAQtB,sBAAW,CAACC,EAAOC,IAAQC,eAACmB,IAAM,IAAKrB,EAAOC,IAAKA,MAC3DqB,UAAWvB,sBAAW,CAACC,EAAOC,IAAQC,eAACqB,IAAW,IAAKvB,EAAOC,IAAKA,MACnEuB,gBAAiBzB,sBAAW,CAACC,EAAOC,IAAQC,eAACuB,IAAM,IAAKzB,EAAOC,IAAKA,MACpEyB,WAAY3B,sBAAW,CAACC,EAAOC,IAAQC,eAACwB,IAAU,IAAK1B,EAAOC,IAAKA,OA0LtD0B,OAvLG3B,IAChB,MAAO4B,EAASC,GAAcC,oBAAS,IAChCC,EAAOC,GAAkBF,mBAAS,CACvCxE,KAAM,EACNC,SAAU,GACVL,OAAQ,KAEJ+E,EAAkBC,IAClBA,EAAEC,OAAOC,QACXP,GAAW,GAEXA,GAAW,EACb,GAeI,KAAE/D,EAAI,UAAEuE,EAAS,QAAEC,GAAYC,YACnC,CAAC3F,EAA6BmF,IAC9B,IAAMoF,GAAgCpF,IACtC,CACES,UAAWA,IAhBUnF,WACvB,MAAMoF,EAAWV,EAAMzE,KAAO,EAExBoF,EAAW,CACf9F,EACA,IAAKmF,EAAOzE,KAAMmF,UAEdjD,GAAYmD,cAAcD,GAAU,IACxCyE,GAAgC,IAAKpF,EAAOzE,KAAMmF,KACnD,EAOkBG,KAIrB,OACE1C,eAAA,OAAA2C,SACE3C,eAAC4C,IAAa,CACZC,MAAOlD,GACPmD,MAAM,eACNyC,WAAY,CACVC,QAAU1F,GACR4E,gBAAA,OAAA/B,SAAA,CACE+B,gBAAA,OAAKe,UAAU,oDAAmD9C,SAAA,CAChE3C,eAAA,SACE8D,KAAK,WACL2B,UAAU,mBACVC,KAAK,UACLC,GAAG,SACH3B,MAAM,SACN9B,SAAqB,IAAZR,EACTkE,SAAU7D,EACV8C,MAAO,CACLgB,OAAQ,oBACRC,aAAc,aAGlB9F,eAAA,SAAOyF,UAAU,mBAAmBM,QAAQ,mBAAkBpD,SAC5D3C,eAAA,KAAG6E,MAAO,CAAEM,MAAO,UAAWG,WAAY,QAAS3C,SAAC,kBAKxD3C,eAACgG,gBAAa,IAAKlG,QAIzBiD,QAAS,CACP,CACED,MAAO,eACPE,MAAO,YACPC,OAAQvB,EACRwB,OAASC,IACT,MAAMgE,GAAc,OAAHhE,QAAG,IAAHA,OAAG,EAAHA,EAAKgE,YAAe,OAAHhE,QAAG,IAAHA,OAAG,EAAHA,EAAKG,aAAgB,OAAHH,QAAG,IAAHA,OAAG,EAAHA,EAAKE,UAAW,GAClE,OAAW,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAKC,WAAY,IAAM+D,CAAQ,GAG3C,CACErE,MAAO,kBACPE,MAAO,gBACPO,WAAW,GAEb,CACET,MAAO,MACPE,MAAO,SACPO,WAAW,EACXL,OAASC,GAAyB,QAAb,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKc,QAAkBd,EAAIc,OAAOC,QAAU,IAEhE,CACEpB,MAAO,MACPE,MAAO,MACPO,WAAW,EACXL,OAASC,GAAQtF,GAAgB,OAAHsF,QAAG,IAAHA,OAAG,EAAHA,EAAKrF,MAGrC,CACEgF,MAAO,qBACPE,MAAO,oBACPO,WAAW,EACXL,OAASC,GACPnD,eAACoH,KAAK,CAACjC,MAAM,OAAOF,KAAK,OAAMtC,UACzB,OAAHQ,QAAG,IAAHA,OAAG,EAAHA,EAAKkE,oBAAqB,MAIjC,CACEvE,MAAO,UACPE,MAAO,UACPO,WAAW,EACXL,OAASC,GACPnD,eAAA,OAAA2C,SACE3C,eAACoE,KAAI,CACHC,GAAI,CACFC,SAAU,+BACVE,MAAO,CAAEC,WAAYtB,IACrBR,SAEF+B,gBAACC,KAAW,CACVC,QAAQ,YACR,aAAW,eACXC,MAAO,CACLC,gBAAiB,mBACjBC,OAAQ,OACRC,MAAO,SAETC,KAAK,QAAOtC,SAAA,CAEZ3C,eAACkF,KAAM,CACLC,MAAM,UACNF,KAAK,QACL,aAAW,wBACX,gBAAc,OACdJ,MAAO,CAAEC,gBAAiB,oBAAqBnC,SAE/C3C,eAACoF,KAAW,MAEdpF,eAACkF,KAAM,CAACL,MAAO,CAAEC,gBAAiB,oBAAqBnC,SACrD3C,eAAA,QACE6E,MAAO,CACLQ,SAAU,OACVF,MAAO,OACPG,WAAY,UACZ3C,SACH,iCAUf/E,MAAU,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMqI,UAAW,GACvBC,WAAgB,OAAJtI,QAAI,IAAJA,OAAI,EAAJA,EAAMuI,aAClBhE,UAAWA,EACX/E,KAAU,OAAJQ,QAAI,IAAJA,OAAI,EAAJA,EAAMwI,YACZC,QAAS,CACPC,YAAa,CACXxB,gBAAiB,UACjBK,MAAO,QAEToB,iBAAkB,CAChBvB,MAAO,OACPwB,YAAa,SAEfjD,WAAW,EACXkD,QAAQ,EACRC,cAAc,EACdC,qBAAsB,OACtBC,gBAAiB,CAAC,GAAI,GAAI,KAC1BvJ,UAAe,OAALwE,QAAK,IAALA,OAAK,EAALA,EAAOxE,WAAY,GAC7BwJ,iBAAkB,KAEpBC,aAAeC,IACbjF,GAAgBkF,IAAW,IAAWA,EAAa5J,KAAM2J,MACzD3E,EAAQP,EAAM,KAGd,E,UCxOV,MAAMyF,GAAW,CACfxB,aAAc,MACdT,SAAU,IA6DGkC,OA1DFA,KACX,MAAOC,EAAKC,GAAU7F,mBAAS,QAE/B,OACE8C,gBAAA,OAAA/B,SAAA,CACE+B,gBAAA,OACEe,UAAU,uBACVZ,MAAO,CAAE6C,UAAW,MAAOC,aAAc,SAAUhF,SAAA,CAEnD3C,eAAA,MAAIyF,UAAU,aAAY9C,SACxB3C,eAAA,MAAIyF,UAAU,yBAAwB9C,SACpC3C,eAAA,MAAA2C,SAAI,qBAIR3C,eAAA,OAAA2C,SACE3C,eAACoE,KAAI,CAACC,GAAI,mBAAmB1B,SAC3B3C,eAACkF,KAAM,CACLN,QAAQ,YACRO,MAAM,UACNM,UAAU,mBACVmC,UAAW5H,eAAC6H,KAAU,CAAC5C,KAAK,OAC5BJ,MAAO,CAAEC,gBAAiB,WAAYnC,SAEtC3C,eAAA,QAAM6E,MAAO,CAAEiD,cAAe,cAAenF,SAAC,yBAMtD3C,eAAC+H,IAAG,CAAClD,MAAO,CAAE6C,UAAW,QAAS/E,SAChC3C,eAACgI,IAAG,CAACC,GAAI,GAAGtF,SACV3C,eAACkI,IAAI,CAACrD,MAAOyC,GAAS3E,SACpB3C,eAACkI,IAAKC,KAAI,CAAAxF,SAER3C,eAAA,OAAKyF,UAAU,eAAc9C,SAC3B+B,gBAAC0D,IAAI,CACHzC,GAAG,yBACH0C,UAAWb,EACXc,SAAWC,GAAMd,EAAOc,GACxB9C,UAAU,OAAM9C,SAAA,CAEhB3C,eAACwI,IAAG,CAACC,SAAS,OAAO3F,MAAM,gBAAeH,SACxC3C,eAAC0I,GAAW,MAEd1I,eAACwI,IAAG,CAACC,SAAS,aAAa3F,MAAM,0BAAyBH,SACxD3C,eAAC2I,GAAqB,qBAQhC,E,wFCpDVnJ,IAAOC,OAAO,MACdC,MA8MekJ,qBA5MCC,IAAK,CACnBC,KAAM,CACJ9D,MAAO,QAET+D,QAAS,CACP1D,SAAUwD,EAAMG,WAAWC,QAAQ,KAErCC,iBAAkB,CAChB7D,SAAUwD,EAAMG,WAAWC,QAAQ,IACnC9D,MAAO0D,EAAMM,QAAQC,KAAKC,WAE5BC,KAAM,CACJC,cAAe,SACfxE,OAAQ,GACRC,MAAO,IAETwE,QAAS,CACPC,WAAY,UAEdC,OAAQ,CACNC,UAAW,UAEbC,OAAQ,CACNC,WAAW,aAADrM,OAAeqL,EAAMM,QAAQW,SACvCC,QAAQ,GAADvM,OAAKqL,EAAMmB,QAAQC,KAAI,OAAAzM,OAA2B,EAArBqL,EAAMmB,QAAQC,KAAQ,OAE5DC,KAAM,CACJ/E,MAAO0D,EAAMM,QAAQgB,QAAQC,KAC7BC,eAAgB,OAChB,UAAW,CACTA,eAAgB,iBA8KPzB,EAzKf,SAAqB9I,GACnB,MAAM,QAAEwK,GAAYxK,EACd2E,EAAa3E,EAAM2E,WAiEzB,OA9DA8F,qBAAU,QAGP,CAACzK,EAAM2E,aA4DRzE,eAAA,OAAKyF,UAAW6E,EAAQxB,KAAKnG,SAC3B+B,gBAAC8F,KAAc,CAAA7H,SAAA,CACb3C,eAACyK,KAAqB,CAAA9H,SACpB3C,eAAC+H,KAAG,CAAApF,SACF3C,eAACgI,KAAG,CAAC0C,GAAI,GAAG/H,SACV+B,gBAACqD,KAAG,CAACtC,UAAW,OAAO9C,SAAA,CACrB+B,gBAACsD,KAAG,CAAC0C,GAAI,GAAIjF,UAAW6E,EAAQK,MAAMhI,SAAA,CACpC3C,eAAA,KAAG6E,MAAO,CAAEQ,SAAU,OAAQF,MAAO,oBAAqBxC,SACvD8B,EAAWrB,UAAY,KAlCrBS,EAkCuCY,EAjCtDZ,GAAOA,EAAIsD,SACNtD,EAAIsD,SACFtD,GAAOA,EAAIR,QACbQ,EAAIR,QACFQ,GAAOA,EAAIP,UACbO,EAAIP,UAEJ,MA4BKtD,eAACoE,KAAI,CAACC,GAAI,IAAI1B,SACZ3C,eAAC4K,KAAS,CACRhG,QAAQ,YACRO,MAAM,UACNM,UAAU,4BAEVmC,UAAW5H,eAAC6K,KAAW,IACvBhG,MAAO,CACLC,gBAAiB,mBACjBK,MAAO,OACPJ,OAAQ,QACRpC,SAEF3C,eAAA,QAAM6E,MAAO,CAAEiD,cAAe,cAAenF,SAAC,gBAIpD3C,eAACgI,KAAG,CAAC0C,GAAI,EAAGjF,UAAW6E,EAAQK,MAAMhI,SACnC+B,gBAAA,QAAA/B,SAAA,CACG,IAAI,eACQ,IACb3C,eAAA,KAAG6E,MAAO,CAAEM,MAAO,WAAYxC,SA7CtBkB,KACzB,GAAIA,GAAOA,EAAIiH,cACb,OAAOjH,EAAIiH,cACP,CAAC,IAADC,EAAAC,EAAAC,EAEJ,MAAMC,GAAiB,OAAHrH,QAAG,IAAHA,GAAe,QAAZkH,EAAHlH,EAAKF,kBAAU,IAAAoH,GAAY,QAAZC,EAAfD,EAAiBpH,kBAAU,IAAAqH,OAAxB,EAAHA,EAA6BpH,QAAQC,GAAsB,oBAAX,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKC,UAA8B,GAC9FJ,GAA+B,OAAXwH,QAAW,IAAXA,GAAgB,QAALD,EAAXC,EAAanH,WAAG,IAAAkH,OAAL,EAAXA,EAAAE,KAAAD,KAAwB,KAEpD,OAAsC,QAAZ,OAAjBxH,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBM,OAAiBN,EAAkBM,MAAQ,EACvE,GAqCmBoH,CAAkB3G,UAKzBzE,eAACgI,KAAG,CAAC0C,GAAI,EAAGjF,UAAW6E,EAAQK,MAAMhI,SACnC+B,gBAAA,QAAA/B,SAAA,CAAM,kBACY,IAChB3C,eAAA,KAAG6E,MAAO,CAAEM,MAAO,WAAYxC,UAClB,OAAV8B,QAAU,IAAVA,OAAU,EAAVA,EAAY3G,OAAiB,OAAV2G,QAAU,IAAVA,OAAU,EAAVA,EAAYN,oBAItCnE,eAACgI,KAAG,CAAC0C,GAAI,EAAGjF,UAAW6E,EAAQK,MAAMhI,SACnC+B,gBAAA,QAAA/B,SAAA,CACG,IAAI,QACC,IACN3C,eAAA,KAAG6E,MAAO,CAAEM,MAAO,WAAYxC,SA3G1B7E,KACrB,IAAIE,EAAQ,IAAIC,KACZoN,EAAYvN,EAAIwN,MAAM,KACtBC,EAAa,IAAItN,MAAMoN,EAAU,GAAIA,EAAU,GAAK,GAAIA,EAAU,IAClEnN,EAAY,IAAID,KAAKsN,GACrBpN,EAAUH,EAAMI,cAAgBF,EAAUE,cAC1CC,EAAIL,EAAMM,WAAaJ,EAAUI,WAIrC,OAHID,EAAI,GAAY,IAANA,GAAWL,EAAMO,UAAYL,EAAUK,YACnDJ,IAEc,IAAZA,EACKE,EAAI,YAENF,EAAU,UAAU,EA+FRqN,CACCC,IACEhH,EAAW3G,MAAiB,OAAV2G,QAAU,IAAVA,OAAU,EAAVA,EAAYN,cAC9BuH,OAAO,sBAKjB1L,eAACgI,KAAG,CAAC0C,GAAI,EAAE/H,SACT+B,gBAAA,QAAA/B,SAAA,CACG,IAAI,WACI,IACT3C,eAAA,KAAG6E,MAAO,CAAEM,MAAO,WAAYxC,SACN,OAAtB8B,EAAWR,OACRQ,EAAWR,OAAOC,QAClB,UAIVlE,eAACgI,KAAG,CAAC0C,GAAI,EAAGjF,UAAW6E,EAAQK,MAAMhI,SACnC+B,gBAAA,QAAA/B,SAAA,CACG,IAAI,iBACU,IACf3C,eAAA,KAAG6E,MAAO,CAAEM,MAAO,WAAYxC,SApHzBgB,KACtB,MACMgI,EADchI,EACYiI,aAAaC,MAC1ChI,GAAqB,UAAbA,EAAIC,OAEf,OAAO6H,EAAcA,EAAY3H,MAAQ,EAAE,EAgHxB8H,CAAerH,EAAWmH,qBAIjC5L,eAACgI,KAAG,CAAC0C,GAAI,EAAGjF,UAAW6E,EAAQK,MAAMhI,SACnC+B,gBAAA,QAAA/B,SAAA,CACG,IAAI,YACK,IACV+B,gBAAA,KAAGG,MAAO,CAAEM,MAAO,WAAYxC,SAAA,CAtH7BgB,KAClB,MACMoI,EADcpI,EACQoI,QAAQF,MAAMhI,GAAQA,EAAImI,OAChDC,EACJF,GAA+B,OAApBA,EAAQG,KAAK,GAAcH,EAAQG,KAAK,GAAK,GACpDC,EACJJ,GAAWA,EAAQC,MAAyB,OAAjBD,EAAQC,KAAgBD,EAAQC,KAAO,GACpE,OAAOD,EAAUE,EAAe,IAAME,EAAW,EAAE,EAgHhCC,CAAW3H,EAAWsH,SAAU,qBAQ/C/L,eAACqM,KAAO,SArHOxI,KAyHvB,I,UCpJeyI,OAjEf,SAAiBxM,GACf,MAAMyM,EAAczM,EAAM2E,WAAa3E,EAAM2E,WAAa,CAAC,GAEpD+H,EAAYC,GAAiB7K,mBAAS,mBACtC6C,GAAc7C,mBAAS2K,IACvBG,GAAc9K,mBPOc9D,KACjC,MAAME,EAAQ,IAAIC,KACZC,EAAY,IAAID,KAAKH,GAC3B,IAAIK,EAAUH,EAAMI,cAAgBF,EAAUE,cAC9C,MAAMC,EAAIL,EAAMM,WAAaJ,EAAUI,WAMvC,OAJIH,GAAW,GAAKE,EAAI,GAAKL,EAAMO,UAAYL,EAAUK,WACvDJ,IAGc,IAAZA,EACKE,EAEFF,CAAO,EOnBdwO,EAA6B,OAAVlI,QAAU,IAAVA,OAAU,EAAVA,EAAY3G,OAAiB,OAAV2G,QAAU,IAAVA,OAAU,EAAVA,EAAYN,eAAgB,GAuCpE,OACEnE,eAAA,OAAK6E,MAAO,CAAE6C,UAAW,QAAS/E,SAChC+B,gBAACkI,KAAI,CAAC3H,KAAK,QAAQE,MAAO,QAAS0H,UAAQ,EAAAlK,SAAA,CACzC3C,eAAC4M,KAAKE,KAAI,CAACC,QAASA,KAtCxBjN,EAAMkN,iBAAiB,IAAKlN,EAAMmN,cAAe1I,MAAO,kBAsCZ,EAAA5B,SAAC,UACzC+B,gBAACkI,KAAKE,KAAI,CAACC,QAASA,KAnCxBN,EAAc,qBACd3M,EAAMkN,iBAAiB,IAClBlN,EAAMmN,cACT1I,MAAO,kCAgC2C5B,SAAA,CAC7C,IAAI,0BAGP3C,eAAC4M,KAAKE,KAAI,CAACC,QAASA,KA/BxBN,EAAc,gBACd3M,EAAMkN,iBAAiB,IAClBlN,EAAMmN,cACT1I,MAAO,qBA4BsC5B,SAAC,cAC3C+J,GAAc,GACb1M,eAAC4M,KAAKE,KAAI,CAACC,QA1BG5J,IACpBsJ,EAAc,SACd3M,EAAMkN,iBAAiB,IAClBlN,EAAMmN,cACT1I,MAAO,iBACP,EAqBqC5B,SAAC,eAEpC3C,eAAC4M,KAAKE,KAAI,CAACC,QAASA,KAnBxBN,EAAc,gBACd3M,EAAMkN,iBAAiB,IAClBlN,EAAMmN,cACT1I,MAAO,yBAgB+D5B,SAAC,gBAM7E,E,sLCnDA,IAAIuK,GAAQ,GACZ,MAAMC,GAAYC,cAAWvE,IAAK,CAC9BwE,KAAM,CACFC,OAAQzE,EAAMmB,QAAQ,IACtB9F,QAAS,OACTqJ,cAAe,SACf9D,WAAY,UAEhB+D,KAAM,CACFxI,MAAO,OACP0C,UAAWmB,EAAMmB,QAAQ,IAE7ByD,OAAQ,CACJH,OAAQzE,EAAMmB,QAAQ,EAAG,EAAG,IAEhC0D,WAAY,CACR/F,aAAc,IAElBgG,OAAQ,CACJ5I,OAAQ,GACRC,MAAO,KAEX4I,OAAQ,CACJN,OAAQzE,EAAMmB,QAAQ,IAG1BlB,KAAM,CACF,QAAS,CACLwE,OAAQzE,EAAMmB,QAAQ,KAG9B6D,MAAO,CACH3J,QAAS,QAEb4J,MAAM,CACF3I,MAAO,UACPE,SAAU,cAgWH0I,OA5VMjO,IACjB,MAAOkO,EAAQC,GAAarM,mBAAS,CAAC,GAChC6C,EAAa3E,EAAM2E,WACnB6F,EAAU6C,KAChB,IAAIe,EAAO,IAAKF,GAChB,MAAOG,EAAaC,GAAkBxM,mBAAS,KACxCyM,EAASC,GAAc1M,mBAAS,KAChC2M,EAAWC,GAAgB5M,mBAC9B,CACI6M,cAAe,GACfC,YAAa,GACbC,WAAY,GACZ5R,SAAU,GACV6R,UAAWnK,EAAWkB,GACtBkJ,oBAAqB,GACrBR,QAAS,GACTS,YAAa,MAEdC,EAAQC,GAAapN,oBAAS,GAErC2I,qBAAU,KACN0E,IACAC,IACGpP,EAAMmG,SAA2B,OAAhBnG,EAAMmG,SACtBuI,EAAa1O,EAAMmG,QACvB,GACD,CAACnG,EAAMmG,UAEV,MAAMgJ,EAAUA,KACZ1R,KACCN,IAAI,GAADO,OAAIC,GAAO,kCACX,CAAEC,QAAS,CAAE,cAAgB,UAADF,OAAYZ,OAE3CuS,MAAMjI,IAEHoH,EAAWpH,EAAStJ,KAAK,IAE5BwR,OAAOtB,OAEN,EAGAoB,EAAuBA,KACzB3R,KACCN,IAAI,GAADO,OAAIC,GAAO,gDACX,CAAEC,QAAS,CAAE,cAAgB,UAADF,OAAYZ,OAE3CuS,MAAMjI,IAEHkH,EAAelH,EAAStJ,KAAK,IAEhCwR,OAAOtB,OAEN,EAGAuB,EAAoBrN,IACtBiM,EAAU,IAAID,EAAQ,CAAChM,EAAEC,OAAOyD,MAAO,KACvC8I,EAAc,IAAID,EAAY,CAACvM,EAAEC,OAAOyD,MAAO1D,EAAEC,OAAO+B,QACrC,aAAhBhC,EAAEC,OAAOyD,MAA0C,aAArB6I,EAAUxR,WACvCwR,EAAUM,oBAAoB,GAC9BL,EAAc,IAAID,EAAY,oBAAyB,KACvDC,EAAc,IAAID,EAAY,CAACvM,EAAEC,OAAOyD,MAAO1D,EAAEC,OAAO+B,QAC5D,EAiBJkJ,GAfsBpP,KAClB,IAAIE,EAAQ,IAAIC,KACZoN,EAAYvN,EAAIwN,MAAM,KACtBC,EAAa,IAAItN,MAAMoN,EAAU,GAAIA,EAAU,GAAK,GAAIA,EAAU,IAClEnN,EAAY,IAAID,KAAKsN,GACrBpN,EAAUH,EAAMI,cAAgBF,EAAUE,cAC1CC,EAAIL,EAAMM,WAAaJ,EAAUI,WAIjC,OAHID,EAAI,GAAY,IAANA,GAAWL,EAAMO,UAAYL,EAAUK,YAC7CJ,IAEQ,IAAZA,EACWE,EAAI,YAERF,CAAO,EAEnBqN,CAAcC,IAAO3L,EAAM2E,WAAW3G,KAAK4N,OAAO,eA+D3D,OACI1L,eAAA,OAAA2C,SAEQ3C,eAACsP,KAAK,CAACC,OAAQzP,EAAM0P,UAAWC,OAAQ3P,EAAM2P,OAAQhK,UAAW3F,EAAM2F,UAAWR,KAAK,KAAItC,SAC3F+B,gBAACgL,KAAI,CAAA/M,SAAA,CACL3C,eAAC2P,KAAW,CAAE9K,MAAO,CAACC,gBAAgB,WAAWnC,SAAC,iBAChD3C,eAAC4P,KAAS,CAAAjN,SACF3C,eAACkI,KAAI,CAAAvF,SACD+B,gBAACmL,KAAQ,CAAAlN,SAAA,CACT3C,eAAC+H,KAAG,CAAApF,SACHuK,IAAQ,EAGTxI,gBAAAoL,YAAA,CAAAnN,SAAA,CAEA3C,eAAA,OAAKyF,UAAU,2BAA0B9C,SACrC+B,gBAACqL,KAAS,CAAApN,SAAA,CACV+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAE,WAAQ3C,eAAA,QAAM6E,MAAO,CAAEM,MAAM,OAAOxC,SAAC,UAC7C+B,gBAACsL,KAAK,CACFlM,KAAK,SACL4B,KAAK,UACLC,GAAG,UACHC,SAAUyJ,EACVrL,MAAOuK,EAAUF,QAAQ1L,SAAA,CAEzB3C,eAAA,UAAQgE,MAAM,GAAErB,SAAE,WACjB0L,EAAQ4B,KAAKjM,GACdhE,eAAA,UAAuBgE,MAAOA,EAAM2B,GAAGhD,SAClCqB,EAAM0B,MADE1B,EAAM2B,SAOJ,KAAlBqI,EAAOK,QACArO,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAAEqL,EAAOK,UAC5C,QAGNrO,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACV+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAE,gBAAa3C,eAAA,QAAM6E,MAAO,CAAEM,MAAM,OAAOxC,SAAC,UAClD3C,eAACkQ,KAAU,CAAAvN,SACP3C,eAACgQ,KAAK,CACFlM,KAAK,OACL4B,KAAK,cACLC,GAAG,cACHC,SAAUyJ,EACVrL,MAAOuK,EAAUG,gBAIF,KAAtBV,EAAOU,YACA1O,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAAEqL,EAAOU,cAC5C,QAGN1O,eAAA,OAAKyF,UAAU,2BAA0B9C,SACjC+B,gBAACqL,KAAS,CAAApN,SAAA,CACV+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAE,oBAAiB3C,eAAA,QAAM6E,MAAO,CAAEM,MAAM,OAAOxC,SAAC,UACtD3C,eAACkQ,KAAU,CAAAvN,SACP3C,eAACgQ,KAAK,CACFlM,KAAK,OACL4B,KAAK,cACLC,GAAG,cACHC,SAAUyJ,EACVrL,MAAOuK,EAAUO,YACjBqB,IAAM1E,IAAO,IAAIxN,MAAQyN,OAAO,kBAIjB,KAAtBsC,EAAOc,YACA9O,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAAEqL,EAAOc,cAC5C,QAGZ9O,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACV+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAE,sBAAmB3C,eAAA,QAAM6E,MAAO,CAAEM,MAAM,OAAOxC,SAAC,UACxD3C,eAACkQ,KAAU,CAAAvN,SACP3C,eAACgQ,KAAK,CACFlM,KAAK,SACL4B,KAAK,aACLC,GAAG,aACHC,SAAUyJ,EACVrL,MAAOuK,EAAUI,eAIH,KAArBX,EAAOW,WACA3O,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAAEqL,EAAOW,aAC5C,QAGN3O,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACV+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAE,YAAS3C,eAAA,QAAM6E,MAAO,CAAEM,MAAM,OAAOxC,SAAC,UAC9C3C,eAACkQ,KAAU,CAAAvN,SACP+B,gBAACsL,KAAK,CACFlM,KAAK,SACL4B,KAAK,WACLC,GAAG,WACHC,SAAUyJ,EACVrL,MAAOuK,EAAUxR,SAAS4F,SAAA,CAE1B3C,eAAA,UAAQgE,MAAM,GAAErB,SAAE,WAClB3C,eAAA,UAAQgE,MAAM,WAAUrB,SAAE,aAC1B3C,eAAA,UAAQgE,MAAM,YAAWrB,SAAE,mBAGf,KAAnBqL,EAAOjR,SACAiD,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAAEqL,EAAOjR,WAC5C,QAGgB,aAArBwR,EAAUxR,UACXiD,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACV+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAE,iBAAc3C,eAAA,QAAM6E,MAAO,CAAEM,MAAM,OAAOxC,SAAC,UACnD3C,eAACkQ,KAAU,CAAAvN,SACP3C,eAACgQ,KAAK,CACFlM,KAAK,OACL4B,KAAK,sBACLC,GAAG,sBACHC,SAAUyJ,EACVrL,MAAOuK,EAAUM,wBAIM,KAA9Bb,EAAOa,oBACA7O,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAAEqL,EAAOa,sBAC5C,QAKN7O,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACV3C,eAACoH,KAAK,CAAAzE,SAAE,oBACR3C,eAACkQ,KAAU,CAAAvN,SACP+B,gBAACsL,KAAK,CACFlM,KAAK,SACL4B,KAAK,gBACLC,GAAG,gBACHC,SAAUyJ,EACVrL,MAAOuK,EAAUE,cAAc9L,SAAA,CAE/B3C,eAAA,UAAQgE,MAAM,GAAErB,SAAE,WACbwL,EAAY8B,KAAKjM,GAClBhE,eAAA,UAAuBgE,MAAOA,EAAME,QAAQvB,SACvCqB,EAAME,SADEF,EAAM2B,WAON,KAAxBqI,EAAOS,cACAzO,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAAEqL,EAAOS,gBAC5C,WAOJzO,eAAA8P,YAAA,CAAAnN,SACI3C,eAAA,KAAA2C,SAAG3C,eAAA,MAAA2C,SAAI,iCAKX3C,eAAA,SACAA,eAAA,SACJA,eAACoQ,KAAS,CACVtM,KAAK,SACLc,QAAQ,YACRO,MAAM,UACNM,UAAW6E,EAAQsD,OACnBhG,UAAW5H,eAACqQ,KAAQ,IACpBtD,QAnOF/K,IAClBA,EAAEsO,iBACFtB,GAAU,GAbNd,EAAKG,QAAUE,EAAUF,QAAU,GAAK,yBACxCH,EAAKY,YAAcP,EAAUO,YAAc,GAAK,yBAChDZ,EAAKS,WAAaJ,EAAUI,WAAa,GAAK,yBAC9CT,EAAKnR,SAAWwR,EAAUxR,SAAW,GAAK,yBAC1CmR,EAAKQ,YAAcH,EAAUG,YAAc,GAAK,yBAChDR,EAAKO,cAAgBF,EAAUE,cAAgB,GAAK,yBAEhDR,EAAU,IAAKC,IAChBqC,OAAOC,OAAOtC,GAAMuC,OAAMC,GAAU,IAALA,KAOlCnT,KAAMoT,KAAK,GAADnT,OAAIC,GAAO,sBAAqB8Q,EAC3C,CAAE7Q,QAAS,CAAC,cAAe,UAAAF,OAAaZ,OAGtCuS,MAAKjI,IACF8H,GAAU,GAEVR,EAAa,CACTC,cAAe,GACfC,YAAa,GACbC,WAAY,GACZ5R,SAAU,GACV6R,UAAWnK,EAAWkB,GACtBkJ,oBAAqB,GACrBR,QAAS,GACTS,YAAa,KAEjB8B,IAAMC,QAAQ,kCACd/Q,EAAM2P,SACN3P,EAAMgR,cAAc,IAIvB1B,OAAMtB,IACHkB,GAAU,GACV4B,IAAM9C,MAAM,uBAAuB,GAE3C,EAqMoBiD,SAAU7D,GAAO,GAAK6B,EAAQ,OAAO,GACrClK,MAAO,CAACC,gBAAgB,UAAUQ,WAAW,UAAU3C,SAEtDoM,EAAO,SAAW,SAEnB/O,eAACoQ,KAAS,CACVxL,QAAQ,YACRO,MAAM,UACN4H,QAASA,KAzM7ByB,EAAa,CACTC,cAAe,GACfC,YAAa,GACbC,WAAY,GACZ5R,SAAU,GACV6R,UAAWnK,EAAWkB,GACtBkJ,oBAAqB,GACrBR,QAAS,GACTS,YAAa,UAEjBhP,EAAM2P,UAgMc5K,MAAO,CAACC,gBAAgB,UAAWK,MAAM,QACzCM,UAAW6E,EAAQsD,OACnBhG,UAAW5H,eAACgR,KAAU,IAAIrO,SACzB,wBASnB,EC7WVnD,IAAOC,OAAO,MACdC,MAEA,MAAMC,GAAa,CACjBC,IAAKC,sBAAW,CAACC,EAAOC,IAAQC,eAACC,IAAM,IAAKH,EAAOC,IAAKA,MACxDG,MAAOL,sBAAW,CAACC,EAAOC,IAAQC,eAACE,IAAK,IAAKJ,EAAOC,IAAKA,MACzDI,MAAON,sBAAW,CAACC,EAAOC,IAAQC,eAACG,IAAK,IAAKL,EAAOC,IAAKA,MACzDK,OAAQP,sBAAW,CAACC,EAAOC,IAAQC,eAACK,IAAa,IAAKP,EAAOC,IAAKA,MAClEO,YAAaT,sBAAW,CAACC,EAAOC,IAC9BC,eAACO,IAAY,IAAKT,EAAOC,IAAKA,MAEhCS,KAAMX,sBAAW,CAACC,EAAOC,IAAQC,eAACQ,IAAI,IAAKV,EAAOC,IAAKA,MACvDU,OAAQZ,sBAAW,CAACC,EAAOC,IAAQC,eAACU,IAAO,IAAKZ,EAAOC,IAAKA,MAC5DY,OAAQd,sBAAW,CAACC,EAAOC,IAAQC,eAACY,IAAU,IAAKd,EAAOC,IAAKA,MAC/Dc,UAAWhB,sBAAW,CAACC,EAAOC,IAAQC,eAACa,IAAS,IAAKf,EAAOC,IAAKA,MACjEe,SAAUjB,sBAAW,CAACC,EAAOC,IAAQC,eAACc,IAAQ,IAAKhB,EAAOC,IAAKA,MAC/DgB,SAAUlB,sBAAW,CAACC,EAAOC,IAAQC,eAACO,IAAY,IAAKT,EAAOC,IAAKA,MACnEiB,aAAcnB,sBAAW,CAACC,EAAOC,IAC/BC,eAACiB,IAAW,IAAKnB,EAAOC,IAAKA,MAE/BmB,YAAarB,sBAAW,CAACC,EAAOC,IAAQC,eAACG,IAAK,IAAKL,EAAOC,IAAKA,MAC/DoB,OAAQtB,sBAAW,CAACC,EAAOC,IAAQC,eAACmB,IAAM,IAAKrB,EAAOC,IAAKA,MAC3DqB,UAAWvB,sBAAW,CAACC,EAAOC,IAAQC,eAACqB,IAAW,IAAKvB,EAAOC,IAAKA,MACnEuB,gBAAiBzB,sBAAW,CAACC,EAAOC,IAAQC,eAACuB,IAAM,IAAKzB,EAAOC,IAAKA,MACpEyB,WAAY3B,sBAAW,CAACC,EAAOC,IAAQC,eAACwB,IAAU,IAAK1B,EAAOC,IAAKA,OAsMtDkR,OAnMoBnR,IACjC,MAAOoR,EAAgBC,GAAsBvP,mBAAS,IAChD6C,EAAa3E,GAASA,EAAM2E,WAAa3E,EAAM2E,WAAa,IAC3D2M,EAAOC,GAAYzP,oBAAS,GAC7B6N,EAASA,IAAM4B,GAAUD,IACxBE,EAAiBC,GAAsBC,IAAM5P,UAAS,GACvD6P,EAAoBA,IAAMF,GAAoBD,IAC7CI,EAAQC,GAAa/P,mBAAS,OAC9BmN,EAAQC,GAAapN,oBAAS,GACrC2I,qBAAU,KACRqH,GAAU,IAIZ,MAAMA,EAAWC,uBAAY1U,UAC3B,IACE,MAAM+J,QAAiB3J,KAAMN,IAAI,GAADO,OAC3BC,GAAO,gCAAAD,OAA+BiH,EAAWkB,IACpD,CAAEjI,QAAS,CAAEC,cAAc,UAADH,OAAYZ,OAExCuU,EAAmBjK,EAAStJ,KAC9B,CAAE,MAAOkQ,GACP,IAED,CAACrJ,EAAWkB,GAAIwL,IAUnBW,QAAQC,IAAIL,GA4BZ,OACEhN,gBAAA,OAAA/B,SAAA,CACE3C,eAACkI,KAAI,CAAAvF,SACH3C,eAAC6P,KAAQ,CAAAlN,SACP3C,eAAC4C,IAAa,CACZC,MAAOlD,GACPmD,MAAM,+BACNC,QAAS,CACP,CAAED,MAAO,UAAWE,MAAO,UAAWO,WAAW,GACjD,CACET,MAAO,eACPE,MAAO,eAGT,CAAEF,MAAO,cAAeE,MAAO,aAAcO,WAAW,GACxD,CAAET,MAAO,WAAYE,MAAO,WAAYO,WAAW,GACnD,CAAET,MAAO,eAAgBE,MAAO,cAAeO,WAAW,GAC1D,CACET,MAAO,kBACPE,MAAO,gBACPO,WAAW,GAEb,CACET,MAAO,uBACPE,MAAO,sBACPO,WAAW,GAEb,CAAET,MAAO,UAAWE,MAAO,UAAWO,WAAW,IAEnD3F,KAAMsT,EAAejB,KAAK9M,IAAG,CAC3BkL,QAASlL,EAAI6O,YACblD,YAAa3L,EAAI2L,YACjBJ,YAAavL,EAAIuL,YACjBC,WAAYxL,EAAIwL,WAChB5R,SAAUoG,EAAIpG,SACd8R,oBAAqB1L,EAAI0L,oBACzBJ,cAAetL,EAAIsL,cACnBwD,QACEjS,eAAA,OAAA2C,SACE3C,eAAC4M,KAAKA,KAAI,CAACsF,SAAS,QAAOvP,SACzB3C,eAAC4M,KAAKE,KAAI,CAAAnK,SACR3C,eAACkF,KAAM,CACLL,MAAO,CACLC,gBAAiB,iBACjBK,MAAO,QAETgF,SAAO,EAAAxH,SAEP3C,eAACmS,KAAQ,CAACC,MAAI,EAAChJ,KAAK,SAAQzG,SAC1B+B,gBAACyN,KAASvF,KAAI,CAAC/H,MAAO,CAAE6C,UAAW,QAAS/E,SAAA,CAC1C+B,gBAACyN,KAASrF,KAAI,CAACC,QAASA,IAtF3B5J,KACrBwO,EAAUxO,GACVsM,GAAQ,EAoF8C4C,CAAclP,GAAKR,SAAA,CAC/C3C,eAACsS,KAAQ,CAAC5M,KAAK,SAAS,UAG1BhB,gBAACyN,KAASrF,KAAI,CAACC,QAASA,IAtFzB5J,KACvBsO,IACAE,EAAUxO,EAAI,EAoFwCoP,CAAgBpP,GAAKR,SAAA,CAChD,IACD3C,eAACsS,KAAQ,CAAC5M,KAAK,UAAU,8BAU3CW,QAAS,CACPC,YAAa,CACXxB,gBAAiB,UACjBK,MAAO,QAEToB,iBAAkB,CAChBvB,MAAO,OACPwB,YAAa,SAEfjD,WAAW,EACXmD,cAAc,EACdC,qBAAsB,OACtBC,gBAAiB,CAAC,GAAI,GAAI,KAC1BvJ,SAAU,GACVwJ,iBAAkB,WAK1B7G,eAAC+N,GAAW,CACV0B,OAAQA,EACRD,UAAW4B,EACX3M,WAAY3E,EAAM2E,WAClBqM,aAAcc,EACd3L,QAASyL,IAEXhN,gBAAC4K,KAAK,CACJkD,KAAMlB,EACN7B,OAAQgC,EACRhM,UAAU,OACVR,KAAK,KACL,kBAAgB,gCAChBwN,UAAQ,EACRC,SAAS,SAAQ/P,SAAA,CAEjB3C,eAACsP,KAAMqD,OAAM,CAAAhQ,SACX3C,eAACsP,KAAMsD,MAAK,CAACjN,GAAG,gCAA+BhD,SAAC,oBAIlD3C,eAACsP,KAAMnH,KAAI,CAAAxF,SACT+B,gBAAA,MAAA/B,SAAA,CAAI,oCACgC,IAClC3C,eAAA,KAAA2C,SAAI+O,GAAUA,EAAOhD,mBAGzBhK,gBAAC4K,KAAMuD,OAAM,CAAAlQ,SAAA,CACX3C,eAACkF,KAAM,CACL6H,QAASA,KA5IjBiC,GAAU,QACVzR,KACGuV,OAAO,GAADtV,OAAIC,GAAO,uBAAAD,OAAsBkU,EAAO/L,IAAM,CACnDjI,QAAS,CAAEC,cAAc,UAADH,OAAYZ,OAErCuS,MAAMjI,IACL0J,IAAMC,QAAQ,+BACde,IACAH,IACAzC,GAAU,EAAM,IAEjBI,OAAOtB,IAEN,GADAkB,GAAU,GACNlB,EAAM5G,UAAY4G,EAAM5G,SAAStJ,KAAM,CACzC,IAAImV,EACFjF,EAAM5G,SAAStJ,KAAKoV,UACqB,KAAzClF,EAAM5G,SAAStJ,KAAKoV,SAASC,QACzBnF,EAAM5G,SAAStJ,KAAKoV,SAASC,QAC7B,yCACNrC,IAAM9C,MAAMiF,EACd,MACEnC,IAAM9C,MAAM,4CACd,KAuHIjJ,MAAO,CAAEC,gBAAiB,MAAOK,MAAO,QACxC4L,SAAUhC,EAAOpM,UAEL,IAAXoM,EAAmB,MAAQ,gBAE9B/O,eAACkF,KAAM,CACL6H,QAAS0E,EACT5M,MAAO,CAAEC,gBAAiB,UAAWK,MAAO,QAC5C4L,SAAUhC,EAAOpM,SAClB,eAKD,E,6CC3PH,MCCMuQ,GAAkC/V,UAC7C,MAAM+J,QAAiB3J,KAAMN,IAAI,GAADO,OAC3BC,GAAO,4BAAAD,OAA2B2V,GACrC,CAAEzV,QAAS,CAAEC,cAAc,UAADH,OAAYZ,OAGxC,OAAe,OAARsK,QAAQ,IAARA,OAAQ,EAARA,EAAUtJ,IAAI,E,qCCgBvBwV,KAAQC,IAAIC,KAAeC,KAAUC,KAAQC,MAE7C,MAAMtG,GAAYC,cAAYvE,IAAK,CACjCwE,KAAM,CACJC,OAAQzE,EAAMmB,QAAQ,IACtB9F,QAAS,OACTqJ,cAAe,SACf9D,WAAY,UAEd+D,KAAM,CACJxI,MAAO,OACP0C,UAAWmB,EAAMmB,QAAQ,IAE3ByD,OAAQ,CACNH,OAAQzE,EAAMmB,QAAQ,EAAG,EAAG,IAE9B0D,WAAY,CACV/F,aAAc,IAEhBgG,OAAQ,CACN5I,OAAQ,GACRC,MAAO,KAET4I,OAAQ,CACNN,OAAQzE,EAAMmB,QAAQ,IAExBlB,KAAM,CACJ,QAAS,CACPwE,OAAQzE,EAAMmB,QAAQ,IAExB,gBAAiB,CACf7E,MAAO,OACPG,WAAY,QAEd,kBAAmB,CACjBQ,aAAc,UACdf,OAAQ,QAEV,6BAA8B,CAC5Be,aAAc,+CAEhB,4BAA6B,CAC3B5B,QAAS,qBAEX,WAAY,CACV,qBAAsB,sBAExB,MAAO,CACLiB,MAAO,OAET,UAAW,CACTE,SAAU,OACVF,MAAO,UACPG,WAAY,SAGhBoO,KAAM,CACJ5O,gBAAiB+D,EAAMM,QAAQwK,WAAWC,SAE5CC,OAAQ,CACN3P,QAAS,UAEX4J,MAAO,CACL3I,MAAO,UACPE,SAAU,UAEZwL,QAAS,CACP1L,MAAO,WACPE,SAAU,YAkLCyO,OA9KOhU,IAAW,IAADiU,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC9B,MAAM/J,EAAU6C,KACVmH,GACC,OAALxU,QAAK,IAALA,GAAiB,QAAZiU,EAALjU,EAAO2E,kBAAU,IAAAsP,OAAZ,EAALA,EAAmB5P,eAAoB,OAALrE,QAAK,IAALA,GAAiB,QAAZkU,EAALlU,EAAO2E,kBAAU,IAAAuP,OAAZ,EAALA,EAAmBlW,MAEhD0E,GAAYZ,mBFpGuBuC,KAC1C,MAAMoQ,EAAY9I,EAAOtH,GACnBqQ,EAAU/I,IACVgJ,EAAmBD,EAAQE,KAAKH,EAAW,SAC3CI,EAAoBH,EAAQE,KAAKH,EAAW,UAC5CK,EAAmBJ,EAAQE,KAAKH,EAAW,SAEjD,OAAIE,EAAmB,EAEd,gCACEA,GAAoB,GAAKA,EAAmB,GAE9C,kCACEA,GAAoB,IAAMA,EAAmB,GAE/C,mCACEA,GAAoB,IAAME,EAAoB,EAEhD,mCACEA,GAAqB,GAAKA,EAAoB,EAEhD,mCACEA,GAAqB,GAAKA,EAAoB,GAEhD,mCACEA,GAAqB,IAAMC,EAAmB,EAEhD,oCACEA,GAAoB,EAEtB,kCAEF,mCAAmC,EEoEdC,CAA4BP,KAEhD1W,KAAMkX,EAAQ,UAAE3S,GAAcE,YAAS,CAACG,IAAW,IACzD0Q,GAAgC1Q,MAG1B5E,KAAMmX,EAAe5S,UAAW6S,GAA2B3S,YACjE,CAAC,sCACD,IAAM6Q,GAAgC,wCAElC,OAAE+B,GC7G0CC,KAClD,MAOMC,EAAgCC,KAAW,CAC/CC,YAAaD,OAAaE,SAAS,0BACnCC,cAAeH,OAAaE,SAAS,0BACrCP,cAAeK,OAAaE,SAAS,0BACrCE,kBAAmBJ,OAAaK,KAAK,gBAAiB,CACpDC,GAAKC,GAA6D,SAApB,OAAlBA,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBC,eAChDzG,KAAMiG,OAAaE,SAAS,0BAC5BO,UAAWT,WASf,MAAO,CAAEH,OALMa,aAAU,CACvBC,cAnBmC,CACnCV,YAAa,GACbE,cAAe,GACfR,cAAe,GACfS,kBAAmB,IAgBnBN,WACAc,iBAAkBb,IAEH,EDqFEc,GAEbC,EAAUC,wBAChB,OACEnW,eAACkI,KAAI,CAACzC,UAAW6E,EAAQxB,KAAMjE,MAAO,CAAE6C,UAAW,IAAK/E,SACtD3C,eAACoW,KAAW,CAAAzT,SACV3C,eAAA,OAAKyF,UAAU,sBAAqB9C,SAClC+B,gBAACgL,KAAI,CAAA/M,SAAA,CACH+B,gBAAA,OAAKe,UAAU,OAAM9C,SAAA,CACnB3C,eAAA,OACEyF,UAAU,cACVZ,MAAO,CACLC,gBAAiB,UACjBK,MAAO,QACPxC,SAEF+B,gBAAA,MAAIe,UAAU,aAAaZ,MAAO,CAAEM,MAAO,QAASxC,SAAA,CACjD,IAAI,4BAKT3C,eAAA,OAAKyF,UAAU,YAAW9C,SACxB+B,gBAAA,OAAKe,UAAU,MAAK9C,SAAA,CAClB+B,gBAAA,OAAKe,UAAU,4BAA2B9C,SAAA,CACxC+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,mBACYR,GAAa,yBAEhCuC,gBAAA,UACEe,UAAU,eACVC,KAAK,cACLC,GAAG,cACHd,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UAEhBF,SAAUqP,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfvS,MAAa,OAANiR,QAAM,IAANA,GAAc,QAARhB,EAANgB,EAAQzE,cAAM,IAAAyD,OAAR,EAANA,EAAgBoB,YAAY1S,SAAA,CAEnC3C,eAAA,UAAA2C,SAAQ,wBACC,OAARmS,QAAQ,IAARA,OAAQ,EAARA,EAAU7E,KAAKuG,GACdxW,eAAA,UAAuBgE,MAAW,OAAJwS,QAAI,IAAJA,OAAI,EAAJA,EAAM7Q,GAAGhD,SAChC,OAAJ6T,QAAI,IAAJA,OAAI,EAAJA,EAAMtS,SADQ,OAAJsS,QAAI,IAAJA,OAAI,EAAJA,EAAM7Q,YAOzBjB,gBAAA,OAAKe,UAAU,4BAA2B9C,SAAA,CACxC3C,eAACoH,KAAK,CAAAzE,SAAC,sBACP3C,eAAA,YACEyF,UAAU,eACVC,KAAK,gBACLC,GAAG,gBACHd,MAAO,CACLE,OAAQ,IACRc,OAAQ,oBACRC,aAAc,UAEhBF,SAAUqP,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfvS,MAAa,OAANiR,QAAM,IAANA,GAAc,QAARf,EAANe,EAAQzE,cAAM,IAAA0D,OAAR,EAANA,EAAgBqB,mBAI3B7Q,gBAAA,OAAKe,UAAU,4BAA2B9C,SAAA,CACxC3C,eAACoH,KAAK,CAAAzE,SAAC,6BACP+B,gBAAA,UACEe,UAAU,eACVC,KAAK,gBACLC,GAAG,gBACHd,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UAEhBF,SAAW5D,IACTiT,EAAOwB,cAAc,oBAAqB,MAC1CxB,EAAOwB,cAAc,gBAAiBzU,EAAEC,OAAO+B,MAAM,EAEvDsS,OAAQrB,EAAOsB,WACfvS,MAAa,OAANiR,QAAM,IAANA,GAAc,QAARd,EAANc,EAAQzE,cAAM,IAAA2D,OAAR,EAANA,EAAgBY,cAAcpS,SAAA,CAErC3C,eAAA,UAAA2C,SAAQ,kBAER3C,eAAA,UAAQgE,MAAO,MAAMrB,SAAC,QACtB3C,eAAA,UAAQgE,MAAO,KAAKrB,SAAC,aAIU,SAA5B,OAANsS,QAAM,IAANA,GAAc,QAARb,EAANa,EAAQzE,cAAM,IAAA4D,OAAR,EAANA,EAAgBW,gBACfrQ,gBAAA,OAAKe,UAAU,4BAA2B9C,SAAA,CACxC+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,uBACgB,IACpBqS,GAA0B,yBAE7BtQ,gBAAA,UACEe,UAAU,eACVC,KAAK,oBACLC,GAAG,oBACHd,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UAEhBF,SAAUqP,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfvS,MAAa,OAANiR,QAAM,IAANA,GAAc,QAARZ,EAANY,EAAQzE,cAAM,IAAA6D,OAAR,EAANA,EAAgBmB,kBAAkB7S,SAAA,CAEzC3C,eAAA,UAAA2C,SAAQ,wBACM,OAAboS,QAAa,IAAbA,OAAa,EAAbA,EAAe9E,KAAKuG,GACnBxW,eAAA,UAAuBgE,MAAW,OAAJwS,QAAI,IAAJA,OAAI,EAAJA,EAAM7Q,GAAGhD,SAChC,OAAJ6T,QAAI,IAAJA,OAAI,EAAJA,EAAMtS,SADQ,OAAJsS,QAAI,IAAJA,OAAI,EAAJA,EAAM7Q,oBAWjC3F,eAACoQ,KAAS,CACRtM,KAAK,SACLc,QAAQ,YACRO,MAAM,UACNM,UAAW6E,EAAQsD,OACnBhG,UAAW5H,eAACqQ,KAAQ,IACpBxL,MAAO,CAAEC,gBAAiB,UAAWQ,WAAY,UAAW3C,SAE1DR,EAGAnC,eAAA,QAAM6E,MAAO,CAAEiD,cAAe,cAAenF,SAAC,cAF9C3C,eAAA,QAAM6E,MAAO,CAAEiD,cAAe,cAAenF,SAAC,WAMlD3C,eAACoQ,KAAS,CACRxL,QAAQ,YACRa,UAAW6E,EAAQsD,OACnBhG,UAAW5H,eAACgR,KAAU,IACtBnM,MAAO,CAAEC,gBAAiB,WAC1BiI,QAASA,IACPmJ,EAAQQ,KAAK,CACXpS,SAAU,IACVE,MAAO,CAAEC,WAAiB,OAAL3E,QAAK,IAALA,OAAK,EAALA,EAAO2E,cAE/B9B,SAED3C,eAAA,QAAM6E,MAAO,CAAEiD,cAAe,aAAc3C,MAAO,QAASxC,SAAC,qBAOhE,EEpPXyQ,KAAQC,IAAIC,KAAeC,KAAUC,KAAQC,MAE7C,MAAMtG,GAAYC,cAAYvE,IAAK,CACjCwE,KAAM,CACJC,OAAQzE,EAAMmB,QAAQ,IACtB9F,QAAS,OACTqJ,cAAe,SACf9D,WAAY,UAEd+D,KAAM,CACJxI,MAAO,OACP0C,UAAWmB,EAAMmB,QAAQ,IAE3ByD,OAAQ,CACNH,OAAQzE,EAAMmB,QAAQ,EAAG,EAAG,IAE9B0D,WAAY,CACV/F,aAAc,IAEhBgG,OAAQ,CACN5I,OAAQ,GACRC,MAAO,KAET4I,OAAQ,CACNN,OAAQzE,EAAMmB,QAAQ,IAExBlB,KAAM,CACJ,QAAS,CACPwE,OAAQzE,EAAMmB,QAAQ,IAExB,gBAAiB,CACf7E,MAAO,OACPG,WAAY,QAEd,kBAAmB,CACjBQ,aAAc,UACdf,OAAQ,QAEV,6BAA8B,CAC5Be,aAAc,+CAEhB,4BAA6B,CAC3B5B,QAAS,qBAEX,WAAY,CACV,qBAAsB,sBAExB,MAAO,CACLiB,MAAO,OAET,UAAW,CACTE,SAAU,OACVF,MAAO,UACPG,WAAY,SAGhBoO,KAAM,CACJ5O,gBAAiB+D,EAAMM,QAAQwK,WAAWC,SAE5CC,OAAQ,CACN3P,QAAS,UAEX4J,MAAO,CACL3I,MAAO,UACPE,SAAU,UAEZwL,QAAS,CACP1L,MAAO,WACPE,SAAU,YA+ICsR,OA3IE7W,IAAW,IAADmU,EAAA2C,EAAA1C,EAAAC,EAAA0C,EACzB,MAAMX,EAAUC,uBAEV7L,EAAU6C,MACRvP,KAAMkZ,EAAe,UAAE3U,GAAcE,YAC3C,CAAC,oBACD,IAAM6Q,GAAgC,qBAGlC6D,EAAe5Z,UACnBoT,OAAOyG,KAAW,OAAN/B,QAAM,IAANA,OAAM,EAANA,EAAQc,eAAekB,SAASC,IACpC,OAANjC,QAAM,IAANA,KAAQkC,gBAAgBD,GAAW,EAAK,IAE1C,MAAME,QAAiBnC,EAAOoC,eACxBC,EAA2C,IAAjC/G,OAAOyG,KAAKI,GAAUG,OACtCzF,QAAQC,IAAIuF,EAASrC,EAAOjH,OAAO,GAG/B,OAAEiH,GC9GqCC,KAC7C,MAKMsC,EAA8BpC,KAAW,CAC7CC,YAAaD,OAAaE,SAAS,0BAEnCmC,cAAerC,OAAaK,KAAK,cAAe,CAC9CC,GAAKL,GAAgC,KAAhBA,EACrBlG,KAAMiG,OAAaE,SAAS,0BAC5BO,UAAWT,WASf,MAAO,CAAEH,OALMa,aAAU,CACvBC,cAhB0B,CAC1BV,YAAa,GACboC,cAAe,IAefvC,WACAc,iBAAkBwB,IAEH,EDyFEE,CAA+BX,GAElD,OACE/W,eAACkI,KAAI,CAACzC,UAAW6E,EAAQxB,KAAKnG,SAC5B3C,eAACoW,KAAW,CAAAzT,SACV3C,eAAA,OAAKyF,UAAU,sBAAqB9C,SAClC+B,gBAACgL,KAAI,CAAA/M,SAAA,CACH3C,eAAA,OAAKyF,UAAU,OAAM9C,SACnB3C,eAAA,OACEyF,UAAU,cACVZ,MAAO,CACLC,gBAAiB,UACjBK,MAAO,OACPG,WAAY,SACZQ,aAAc,UACdnD,SAEF3C,eAAA,MAAIyF,UAAU,aAAaZ,MAAO,CAAEM,MAAO,QAASxC,SAAC,gBAMzD3C,eAAA,OAAKyF,UAAU,YAAW9C,SACxB+B,gBAAA,OAAKe,UAAU,MAAK9C,SAAA,CAClB3C,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,mBACYR,GAAa,sBAC9BnC,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAEjC+B,gBAACsL,KAAK,CACJlM,KAAK,SACL4B,KAAK,cACLC,GAAG,cACHC,SAAUqP,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfvS,MAAoB,QAAfiQ,EAAEgB,EAAOzE,cAAM,IAAAyD,OAAA,EAAbA,EAAeoB,YACtBsC,QAASxV,EAAUQ,SAAA,CAEnB3C,eAAA,UAAA2C,SAAQ,YACNR,IACe,OAAf2U,QAAe,IAAfA,OAAe,EAAfA,EAAiB7G,KAAKuG,GACpBxW,eAAA,UAAQgE,MAAOwS,EAAK7Q,GAAGhD,UAChB,OAAJ6T,QAAI,IAAJA,OAAI,EAAJA,EAAM9Q,QAAY,OAAJ8Q,QAAI,IAAJA,OAAI,EAAJA,EAAMtS,UADU,OAAJsS,QAAI,IAAJA,OAAI,EAAJA,EAAM7Q,WAMlC,OAANsP,QAAM,IAANA,GAAe,QAAT2B,EAAN3B,EAAQ2C,eAAO,IAAAhB,OAAT,EAANA,EAAiBvB,eACV,OAANJ,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOqH,cACbrV,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SACtB,OAANsS,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOqH,mBAMO,MAA1B,OAANJ,QAAM,IAANA,GAAc,QAARf,EAANe,EAAQzE,cAAM,IAAA0D,OAAR,EAANA,EAAgBmB,cACfrV,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,kBAEL3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAEjC3C,eAACgQ,KAAK,CACJlM,KAAK,OACL4B,KAAK,gBACLC,GAAG,gBACHC,SAAUqP,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfvS,MAAoB,QAAfmQ,EAAEc,EAAOzE,cAAM,IAAA2D,OAAA,EAAbA,EAAesD,iBAGjB,OAANxC,QAAM,IAANA,GAAe,QAAT4B,EAAN5B,EAAQ2C,eAAO,IAAAf,OAAT,EAANA,EAAiBY,iBACV,OAANxC,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOyJ,gBACbzX,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SACtB,OAANsS,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOyJ,0BAShCzX,eAAA,SACAA,eAACoQ,KAAS,CACRtM,KAAK,SACLc,QAAQ,YACRO,MAAM,UACNM,UAAW6E,EAAQsD,OACnBhG,UAAW5H,eAACqQ,KAAQ,IACpBtD,QAASgK,EACTlS,MAAO,CAAEC,gBAAiB,UAAWQ,WAAY,UAAW3C,SAG1D3C,eAAA,QAAM6E,MAAO,CAAEiD,cAAe,cAAenF,SAAC,WAMlD3C,eAACoQ,KAAS,CACRxL,QAAQ,YACRa,UAAW6E,EAAQsD,OACnBhG,UAAW5H,eAACgR,KAAU,IACtBnM,MAAO,CAAEC,gBAAiB,WAC1BiI,QAASA,IAAMmJ,EAAQQ,KAAK,CAAEpS,SAAU,MAAO3B,SAE/C3C,eAAA,QAAM6E,MAAO,CAAEiD,cAAe,aAAc3C,MAAO,QAASxC,SAAC,qBAOhE,EE7MXyQ,KAAQC,IAAIC,KAAeC,KAAUC,KAAQC,MAE7C,MAAMtG,GAAYC,cAAYvE,IAAK,CACjCwE,KAAM,CACJC,OAAQzE,EAAMmB,QAAQ,IACtB9F,QAAS,OACTqJ,cAAe,SACf9D,WAAY,UAEd+D,KAAM,CACJxI,MAAO,OACP0C,UAAWmB,EAAMmB,QAAQ,IAE3ByD,OAAQ,CACNH,OAAQzE,EAAMmB,QAAQ,EAAG,EAAG,IAE9B0D,WAAY,CACV/F,aAAc,IAEhBgG,OAAQ,CACN5I,OAAQ,GACRC,MAAO,KAET4I,OAAQ,CACNN,OAAQzE,EAAMmB,QAAQ,IAExBlB,KAAM,CACJ,QAAS,CACPwE,OAAQzE,EAAMmB,QAAQ,IAExB,gBAAiB,CACf7E,MAAO,OACPG,WAAY,QAEd,kBAAmB,CACjBQ,aAAc,UACdf,OAAQ,QAEV,6BAA8B,CAC5Be,aAAc,+CAEhB,4BAA6B,CAC3B5B,QAAS,qBAEX,WAAY,CACV,qBAAsB,sBAExB,MAAO,CACLiB,MAAO,OAET,UAAW,CACTE,SAAU,OACVF,MAAO,UACPG,WAAY,SAGhBoO,KAAM,CACJ5O,gBAAiB+D,EAAMM,QAAQwK,WAAWC,SAE5CC,OAAQ,CACN3P,QAAS,UAEX4J,MAAO,CACL3I,MAAO,UACPE,SAAU,UAEZwL,QAAS,CACP1L,MAAO,WACPE,SAAU,YAyXCwS,OArXeA,KAAO,IAAD5D,EAAA2C,EAAA1C,EAAA2C,EAAA1C,EAAAC,EAAA0D,EAAAzD,EAAA0D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAClC,MAAMvO,EAAU6C,MAERvP,KAAMkb,GAAwBzW,YACpC,CAAC,eAAgB,yBACjB,ICnGyBlF,iBACJI,KAAMN,IAAI,GAADO,OAC3BC,GAAO,4BAAAD,OAA2B2V,GACrC,CACEzV,QAAS,CAAEC,cAAc,UAADH,OAAYZ,QAGxBgB,KD4FRmb,CAAc,2BAGdnb,KAAMkX,GAAazS,YAAS,CAAC,mBAAmB,IEtGxBlF,iBACTI,KAAMN,IAAI,GAADO,OAAIC,GAAO,kCAAkC,CAC3EC,QAAS,CAAEC,cAAc,UAADH,OAAYZ,QAEtBgB,KFmGdob,KAEI9C,EAAUC,yBACV,OAAElB,GG1GmDC,KAC3D,MAaM+D,EAAiC7D,KAAW,CAChD8D,mBAAoB9D,OAAaE,SAAS,0BAE1C6D,sBAAuB/D,OAAaE,SAAS,0BAE7C8D,iBAAkBhE,OAAaK,KAAK,wBAAyB,CAC3DC,GAAKyD,GACsC,SAApB,OAArBA,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBvD,eACzBzG,KAAMiG,OAAaE,SAAS,0BAC5BO,UAAWT,SAGb3G,cAAe2G,OAAaE,SAAS,0BAErC+D,oBAAqBjE,OAAaK,KAAK,gBAAiB,CACtDC,GAAKjH,GAAmD,SAApB,OAAbA,QAAa,IAAbA,OAAa,EAAbA,EAAemH,eACtCzG,KAAMiG,OAAaE,SAAS,0BAC5BO,UAAWT,SAGbC,YAAaD,OAAaE,SAAS,0BAEnCgE,kBAAmBlE,OAAaE,SAAS,0BAEzCvY,SAAUqY,OAAaE,SAAS,0BAEhCzG,oBAAqBuG,OAAaK,KAAK,WAAY,CACjDC,GAAK3Y,GAAyC,cAApB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAU6Y,eAC5BzG,KAAMiG,OAAaE,SAAS,0BAC5BO,UAAWT,SAGb1G,YAAa0G,OAAaE,SAAS,4BAQrC,MAAO,CAAEL,OALMa,aAAU,CACvBC,cAjDwC,CACxCmD,mBAAoB,GACpBC,sBAAuB,GACvBC,iBAAkB,GAClB3K,cAAe,GACf4K,oBAAqB,GACrBhE,YAAa,GACbiE,kBAAmB,GACnBvc,SAAU,GACV8R,oBAAqB,GACrBH,YAAa,IAwCbwG,WACAc,iBAAkBiD,IAEH,EHoDEM,GAWnB,OACEvZ,eAAA,OAAA2C,SACE3C,eAACkI,KAAI,CAACzC,UAAW6E,EAAQxB,KAAKnG,SAC5B3C,eAACoW,KAAW,CAAAzT,SACV3C,eAAA,OAAKyF,UAAU,sBAAqB9C,SAClC+B,gBAACgL,KAAI,CAAA/M,SAAA,CACH+B,gBAAA,OAAKe,UAAU,OAAM9C,SAAA,CACnB3C,eAAA,OACEyF,UAAU,cACVZ,MAAO,CACLC,gBAAiB,UACjBK,MAAO,OACPG,WAAY,SACZQ,aAAc,UACdnD,SAEF3C,eAAA,MAAIyF,UAAU,aAAaZ,MAAO,CAAEM,MAAO,QAASxC,SAAC,4BAKvD3C,eAAA,OAAKyF,UAAU,YAAW9C,SACxB+B,gBAAA,OAAKe,UAAU,MAAK9C,SAAA,CAClB3C,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,qCAEL3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAGjC+B,gBAACsL,KAAK,CACJlM,KAAK,SACL4B,KAAK,qBACLC,GAAG,qBACHC,SAAUqP,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfvS,MAAoB,QAAfiQ,EAAEgB,EAAOzE,cAAM,IAAAyD,OAAA,EAAbA,EAAeiF,mBAAmBvW,SAAA,CAEzC3C,eAAA,UAAQgE,MAAM,GAAErB,SAAC,WACjB3C,eAAA,UAAQgE,MAAM,MAAKrB,SAAC,QACpB3C,eAAA,UAAQgE,MAAM,KAAIrB,SAAC,WAGd,OAANsS,QAAM,IAANA,GAAe,QAAT2B,EAAN3B,EAAQ2C,eAAO,IAAAhB,OAAT,EAANA,EAAiBsC,sBACV,OAANjE,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOkL,qBACblZ,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SACtB,OAANsS,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOkL,0BAM1BlZ,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,gCACyB,IAC9B3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAEjC+B,gBAACsL,KAAK,CACJlM,KAAK,SACL4B,KAAK,wBACLC,GAAG,wBACHC,SAAUqP,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfvS,MAAoB,QAAfkQ,EAAEe,EAAOzE,cAAM,IAAA0D,OAAA,EAAbA,EAAeiF,sBAAsBxW,SAAA,CAE5C3C,eAAA,UAAQgE,MAAM,GAAErB,SAAC,WACjB3C,eAAA,UAAQgE,MAAM,MAAKrB,SAAC,QACpB3C,eAAA,UAAQgE,MAAM,KAAIrB,SAAC,WAGd,OAANsS,QAAM,IAANA,GAAe,QAAT4B,EAAN5B,EAAQ2C,eAAO,IAAAf,OAAT,EAANA,EAAiBsC,yBACV,OAANlE,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOmL,wBACbnZ,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SACtB,OAANsS,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOmL,6BAMiB,SAApC,OAANlE,QAAM,IAANA,GAAc,QAARd,EAANc,EAAQzE,cAAM,IAAA2D,OAAR,EAANA,EAAgBgF,wBACfnZ,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAACoS,IAAI,mBAAkB7W,SAAA,CAAC,qBACT,IACnB3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAEjC3C,eAACgQ,KAAK,CACJvK,UAAU,eACV3B,KAAK,OACL4B,KAAK,mBACLC,GAAG,mBACHC,SAAUqP,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfvS,MAAoB,QAAfoQ,EAAEa,EAAOzE,cAAM,IAAA4D,OAAA,EAAbA,EAAegF,iBACtBvU,MAAO,CACLgB,OAAQ,oBACRC,aAAc,aAGX,OAANmP,QAAM,IAANA,GAAe,QAAT6C,EAAN7C,EAAQ2C,eAAO,IAAAE,OAAT,EAANA,EAAiBsB,oBACV,OAANnE,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOoL,mBACbpZ,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SACtB,OAANsS,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOoL,wBAO5BpZ,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAACoS,IAAI,gBAAe7W,SAAA,CAAC,iBACV,IACf3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAGjC+B,gBAACsL,KAAK,CACJlM,KAAK,SACL4B,KAAK,gBACLC,GAAG,gBACHC,SAAUqP,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfvS,MAAoB,QAAfqQ,EAAEY,EAAOzE,cAAM,IAAA6D,OAAA,EAAbA,EAAe5F,cAAc9L,SAAA,CAEpC3C,eAAA,UAAQgE,MAAM,GAAErB,SAAC,WACjB3C,eAAA,UAAQgE,MAAM,MAAKrB,SAAC,QACpB3C,eAAA,UAAQgE,MAAM,KAAIrB,SAAC,WAGd,OAANsS,QAAM,IAANA,GAAe,QAAT8C,EAAN9C,EAAQ2C,eAAO,IAAAG,OAAT,EAANA,EAAiBtJ,iBACV,OAANwG,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOS,gBACbzO,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SACtB,OAANsS,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOS,qBAMS,SAA5B,OAANwG,QAAM,IAANA,GAAc,QAAR+C,EAAN/C,EAAQzE,cAAM,IAAAwH,OAAR,EAANA,EAAgBvJ,gBACfzO,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAACoS,IAAI,sBAAqB7W,SAAA,CAAC,iCACA,IAC/B3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAGjC+B,gBAACsL,KAAK,CACJlM,KAAK,SACL4B,KAAK,sBACLC,GAAG,sBACHC,SAAUqP,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfvS,MAAoB,QAAfiU,EAAEhD,EAAOzE,cAAM,IAAAyH,OAAA,EAAbA,EAAeoB,oBAAoB1W,SAAA,CAE1C3C,eAAA,UAAQgE,MAAM,GAAErB,SAAC,WAEG,OAAnBmW,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqB7I,KAAKwJ,GACzBzZ,eAAA,UACEgE,MAAqB,OAAdyV,QAAc,IAAdA,OAAc,EAAdA,EAAgB9T,GAAGhD,SAGX,OAAd8W,QAAc,IAAdA,OAAc,EAAdA,EAAgBvV,SAFE,OAAduV,QAAc,IAAdA,OAAc,EAAdA,EAAgB9T,UAOpB,OAANsP,QAAM,IAANA,GAAe,QAATiD,EAANjD,EAAQ2C,eAAO,IAAAM,OAAT,EAANA,EAAiBmB,uBACV,OAANpE,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOqL,sBACbrZ,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SACtB,OAANsS,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOqL,2BAO5BrZ,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAACoS,IAAI,cAAa7W,SAAA,CAAC,WACf3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAEzC+B,gBAACsL,KAAK,CACJlM,KAAK,SACL4B,KAAK,cACLC,GAAG,cACHC,SAAUqP,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfvS,MAAoB,QAAfmU,EAAElD,EAAOzE,cAAM,IAAA2H,OAAA,EAAbA,EAAe9C,YAAY1S,SAAA,CAElC3C,eAAA,UAAQgE,MAAM,GAAErB,SAAC,WACR,OAARmS,QAAQ,IAARA,OAAQ,EAARA,EAAU7E,KAAK5B,GACdrO,eAAA,UAAQgE,MAAc,OAAPqK,QAAO,IAAPA,OAAO,EAAPA,EAAS1I,GAAGhD,SACjB,OAAP0L,QAAO,IAAPA,OAAO,EAAPA,EAAS3I,MAD4B,OAAP2I,QAAO,IAAPA,OAAO,EAAPA,EAAS1I,UAMvC,OAANsP,QAAM,IAANA,GAAe,QAATmD,EAANnD,EAAQ2C,eAAO,IAAAQ,OAAT,EAANA,EAAiB/C,eACV,OAANJ,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOqH,cACbrV,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SACtB,OAANsS,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOqH,mBAK1BrV,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAACoS,IAAI,oBAAmB7W,SAAA,CAAC,uBACR,IACrB3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAGjC3C,eAACgQ,KAAK,CACJlM,KAAK,OACL4B,KAAK,oBACLC,GAAG,oBACHwK,IAAK1E,EAAO,IAAIxN,MAAQyN,OAAO,cAC/B9F,SAAUqP,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfvS,MAAoB,QAAfqU,EAAEpD,EAAOzE,cAAM,IAAA6H,OAAA,EAAbA,EAAeiB,qBAEjB,OAANrE,QAAM,IAANA,GAAe,QAATqD,EAANrD,EAAQ2C,eAAO,IAAAU,OAAT,EAANA,EAAiBgB,qBACV,OAANrE,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOsL,oBACbtZ,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SACtB,OAANsS,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOsL,yBAM1BtZ,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,YACI3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAG1C+B,gBAACsL,KAAK,CACJlM,KAAK,SACL4B,KAAK,WACLC,GAAG,WACHC,SAAUqP,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfvS,MAAoB,QAAfuU,EAAEtD,EAAOzE,cAAM,IAAA+H,OAAA,EAAbA,EAAexb,SAAS4F,SAAA,CAE/B3C,eAAA,UAAQgE,MAAM,GAAErB,SAAC,WACjB3C,eAAA,UAAQgE,MAAM,WAAUrB,SAAC,aACzB3C,eAAA,UAAQgE,MAAM,YAAWrB,SAAC,kBAGrB,OAANsS,QAAM,IAANA,GAAe,QAATuD,EAANvD,EAAQ2C,eAAO,IAAAY,OAAT,EAANA,EAAiBzb,YACV,OAANkY,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOjR,WACbiD,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SACtB,OAANsS,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOjR,gBAMI,cAAvB,OAANkY,QAAM,IAANA,GAAc,QAARwD,EAANxD,EAAQzE,cAAM,IAAAiI,OAAR,EAANA,EAAgB1b,WACfiD,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAACoS,IAAI,sBAAqB7W,SAAA,CAAC,gBAE/B3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAGjC3C,eAACgQ,KAAK,CACJlM,KAAK,OACL4B,KAAK,sBACLC,GAAG,sBACHC,SAAUqP,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfvS,MAAoB,QAAf0U,EAAEzD,EAAOzE,cAAM,IAAAkI,OAAA,EAAbA,EAAe7J,uBAGjB,OAANoG,QAAM,IAANA,GAAe,QAAT0D,EAAN1D,EAAQ2C,eAAO,IAAAe,OAAT,EAANA,EAAiB9J,uBACV,OAANoG,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOa,sBACb7O,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SACtB,OAANsS,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOa,2BAO5B7O,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAACoS,IAAI,cAAa7W,SAAA,CAAC,gBACV3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAG9C3C,eAACgQ,KAAK,CACJlM,KAAK,OACL4B,KAAK,cACLC,GAAG,cACHC,SAAUqP,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfvS,MAAoB,QAAf4U,EAAE3D,EAAOzE,cAAM,IAAAoI,OAAA,EAAbA,EAAelK,eAEjB,OAANuG,QAAM,IAANA,GAAe,QAAT4D,EAAN5D,EAAQ2C,eAAO,IAAAiB,OAAT,EAANA,EAAiBnK,eACV,OAANuG,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOU,cACb1O,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SACtB,OAANsS,QAAM,IAANA,OAAM,EAANA,EAAQjH,OAAOU,2BAST,GAEvB1O,eAAA,SACAA,eAACoQ,KAAS,CACRtM,KAAK,SACLc,QAAQ,YACRO,MAAM,UACNM,UAAW6E,EAAQsD,OACnBhG,UAAW5H,eAACqQ,KAAQ,IACpBtD,QA1UO5P,UACnBoT,OAAOyG,KAAW,OAAN/B,QAAM,IAANA,OAAM,EAANA,EAAQc,eAAekB,SAASC,IACpC,OAANjC,QAAM,IAANA,KAAQkC,gBAAgBD,GAAW,EAAK,IAE1C,MAAME,QAAiBnC,EAAOoC,eACxBC,EAA2C,IAAjC/G,OAAOyG,KAAKI,GAAUG,OACtCzF,QAAQC,IAAIuF,EAAQ,EAqURzS,MAAO,CAAEC,gBAAiB,UAAWQ,WAAY,UAAW3C,SAG1D3C,eAAA,QAAM6E,MAAO,CAAEiD,cAAe,cAAenF,SAAC,WAMlD3C,eAACoQ,KAAS,CACRxL,QAAQ,YACRa,UAAW6E,EAAQsD,OACnBhG,UAAW5H,eAACgR,KAAU,IACtBnM,MAAO,CAAEC,gBAAiB,WAC1BiI,QAASA,IAAMmJ,EAAQQ,KAAK,CAAEpS,SAAU,MAAO3B,SAE/C3C,eAAA,QAAM6E,MAAO,CAAEiD,cAAe,aAAc3C,MAAO,QAASxC,SAAC,uBAQnE,EI/bVyQ,KAAQC,IAAIC,KAAeC,KAAUC,KAAQC,MAoF9BiG,OAlFe5Z,IAC5B,MAAO6Z,EAAeC,GAAoBhY,mBAAS,IAE7CiY,EAAe,CACnBC,MAAO9Z,eAAC+Z,GAAyB,KAUnC,OACErV,gBAAA,OAAA/B,SAAA,CACE3C,eAACga,IAAc,CAACC,UAAW,IAAMC,iBAAe,IAEhDla,eAAA,OAAK6E,MAAO,CAAE6C,UAAW,GAAIC,aAAc,IAAKhF,SAC9C3C,eAACoE,KAAI,CACHC,GAAI,CACFC,SAAU,IACVE,MAAO,SACP7B,SAEF3C,eAACkF,KAAM,CACLN,QAAQ,YACRO,MAAM,UACNM,UAAU,yBACVZ,MAAO,CACLC,gBAAiB,UACjBQ,WAAY,SACZ6U,aAAc,SAEhBvS,UAAW5H,eAAC6K,KAAW,IAAIlI,SAE3B+B,gBAAA,QAAMG,MAAO,CAAEiD,cAAe,aAAc3C,MAAO,QAASxC,SAAA,CAAC,OACtD,aAMb3C,eAAA,SACAA,eAAA,SAEAA,eAAA,OAAA2C,SACE3C,eAAA,OAAKyF,UAAU,sBAAqB9C,SAClC3C,eAAA,OAAKyF,UAAU,OAAM9C,SACnB3C,eAAA,OAAKyF,UAAU,YAAW9C,SACxB3C,eAAA,OAAKyF,UAAU,MAAK9C,SAClB3C,eAAA,OAAKyF,UAAU,4BAA2B9C,SACxC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,iBAEL3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAEjC+B,gBAACsL,KAAK,CACJlM,KAAK,SACL4B,KAAK,gBACLC,GAAG,gBACH3B,MAAO2V,EACP/T,SAAW5D,GAAM4X,EAAiB5X,EAAEC,OAAO+B,OAAOrB,SAAA,CAElD3C,eAAA,UAAQgE,MAAM,GAAErB,SAAC,kBACjB3C,eAAA,UAAQgE,MAAM,QAAOrB,SAAC,UACtB3C,eAAA,UAAQgE,MAAM,SAAQrB,SAAC,WACvB3C,eAAA,UAAQgE,MAAM,QAAOrB,SAAC,4BA3DnCgX,GAAmC,KAAlBA,EAGfE,EAAaF,GAFX,OAqEH,ECsCK/Q,qBA1HCC,IAAK,CACnBC,KAAM,CACJ9D,MAAO,QAET+D,QAAS,CACP1D,SAAUwD,EAAMG,WAAWC,QAAQ,KAErCC,iBAAkB,CAChB7D,SAAUwD,EAAMG,WAAWC,QAAQ,IACnC9D,MAAO0D,EAAMM,QAAQC,KAAKC,WAE5BC,KAAM,CACJC,cAAe,SACfxE,OAAQ,GACRC,MAAO,IAETwE,QAAS,CACPC,WAAY,UAEdC,OAAQ,CACNC,UAAW,UAEbC,OAAQ,CACNC,WAAW,aAADrM,OAAeqL,EAAMM,QAAQW,SACvCC,QAAQ,GAADvM,OAAKqL,EAAMmB,QAAQC,KAAI,OAAAzM,OAA2B,EAArBqL,EAAMmB,QAAQC,KAAQ,OAE5DC,KAAM,CACJ/E,MAAO0D,EAAMM,QAAQgB,QAAQC,KAC7BC,eAAgB,OAChB,UAAW,CACTA,eAAgB,iBA4FPzB,EAvFf,SAAqB9I,GACnB,IAAIoW,EAAUC,uBACd,MAAOiE,EAAKC,GAAUzY,oBAAS,IACxBqL,EAAeD,GAAoBpL,mBAAS,CACjD2C,MAAO,iBACPoB,GAAI,GACJ2U,UAAW,OACXC,WAAY,SACZ1W,IAAK,CAAC,KAEF,QAAEyG,GAAYxK,EACd2E,EAAa+V,mBAAQ,IAClBtE,EAAQnZ,UAAYmZ,EAAQnZ,SAASyH,MACxC0R,EAAQnZ,SAASyH,MAAMC,WACvB,CAAC,GACJ,CAACyR,EAAQnZ,WAEZ,OACE2H,gBAAA,OAAKe,UAAW6E,EAAQxB,KAAKnG,SAAA,CAC3B3C,eAAA,OACEyF,UAAU,uBACVZ,MAAO,CAAE6C,UAAW,MAAOC,aAAc,SAAUhF,SAEnD3C,eAAA,MAAIyF,UAAU,aAAY9C,SACxB3C,eAAA,MAAIyF,UAAU,yBAAwB9C,SACpC+B,gBAAA,MAAA/B,SAAA,CACG,IACD3C,eAACoE,KAAI,CAACC,GAAI,IAAI1B,SAAC,mBAAqB,8BAK5C3C,eAACkI,KAAI,CAAAvF,SACH+B,gBAAC0R,KAAW,CAAAzT,SAAA,CACV3C,eAACya,GAAiB,CAChBhW,WAAYA,EACZ4V,OAAQA,EACRrN,iBAAkBA,IAEpBhN,eAACsM,GAAO,CACN7H,WAAYA,EACZ2V,IAAKA,EACLpN,iBAAkBA,IAEpBtI,gBAAA,OAAA/B,SAAA,CAC2B,wBAAxBsK,EAAc1I,OACbvE,eAACiR,GAAyB,CACxBxM,WAAYA,EACZuI,iBAAkBA,EAClBC,cAAeA,IAIM,iCAAxBA,EAAc1I,OACbvE,eAAC0a,GAAgB,CACfjW,WAAYA,EACZuI,iBAAkBA,EAClBC,cAAeA,IAGM,oBAAxBA,EAAc1I,OACbvE,eAAC2W,GAAO,CACNlS,WAAYA,EACZuI,iBAAkBA,EAClBC,cAAeA,IAGM,kBAAxBA,EAAc1I,OACbvE,eAAC0Z,GAAoB,CACnBjV,WAAYA,EACZuI,iBAAkBA,EAClBC,cAAeA,cAU/B,I,qEChGAmG,KAAQC,IAAIC,KAAeC,KAAUC,KAAQC,MAE7C,MAAMtG,GAAYC,cAAYvE,IAAK,CACjCwE,KAAM,CACJC,OAAQzE,EAAMmB,QAAQ,IACtB9F,QAAS,OACTqJ,cAAe,SACf9D,WAAY,UAEd+D,KAAM,CACJxI,MAAO,OACP0C,UAAWmB,EAAMmB,QAAQ,IAE3ByD,OAAQ,CACNH,OAAQzE,EAAMmB,QAAQ,EAAG,EAAG,IAE9B0D,WAAY,CACV/F,aAAc,IAEhBgG,OAAQ,CACN5I,OAAQ,GACRC,MAAO,KAET4I,OAAQ,CACNN,OAAQzE,EAAMmB,QAAQ,IAExBlB,KAAM,CACJ6R,SAAU,EAGV,gBAAiB,CACfxV,MAAO,OACPG,WAAY,QAEd,kBAAmB,CACjBQ,aAAc,UACdf,OAAQ,QAEV,6BAA8B,CAC5Be,aAAc,+CAEhB,4BAA6B,CAC3B5B,QAAS,qBAEX,WAAY,CACV,qBAAsB,sBAExB,MAAO,CACLiB,MAAO,OAET,UAAW,CACTE,SAAU,OACVF,MAAO,UACPG,WAAY,SAGhBoO,KAAM,CACJ5O,gBAAiB+D,EAAMM,QAAQwK,WAAWC,SAE5CC,OAAQ,CACN3P,QAAS,UAEX4J,MAAO,CACL3I,MAAO,UACPE,SAAU,UAEZwL,QAAS,CACP1L,MAAO,WACPE,SAAU,YAqvDCuV,OAjvDU9a,IAAW,IAAD+a,EAAAC,EACjC,MAAOC,EAAWC,GAAgBpZ,mBAAS,CACzCqZ,QAAQ,EACRC,cAAe,GACfnP,QAAS,GACToP,QAAS,GACTvP,aAAc,GACdzH,YAAa,GACbiX,UAAU,EACVC,iBAAkB,KAClBjY,UAAW,GACXkY,SAAU,GACV3X,WAAY,GACZL,UAAW,GACXiY,gBAAiB,GACjBC,YAAa,GACbC,mBAAoB,GACpBC,mBAAoB,GACpBC,uBAAwB,KACxBC,IAAK,GACLjQ,YAAa,GACbkQ,eAAgB,GAChB/d,IAAK,GACLge,UAAW,EACXC,QAAS,GACTC,SAAU,GACVC,MAAO,GACPC,UAAW,MAENC,EAAWC,GAAgBxa,mBAAS,CACzCmK,QAAS,GACTsQ,MAAO,GACPjZ,UAAW,GACXkZ,MAAO,GACPC,eAAgB,GAChBpV,SAAU,GACVqV,WAAY,KAGd,IAAIC,EAAe,GACnB,MAAOC,EAAaC,GAAkB/a,mBAAS,KACxCmN,EAAQC,GAAapN,oBAAS,IAC9Bgb,GAAwBhb,oBAAS,IACjCib,EAAaC,GAAkBlb,oBAAS,IACxCmb,EAAcC,GAAmBpb,oBAAS,IAC1Cqb,EAAmBC,GAAwBtb,mBAAS,OACpDub,EAASC,GAAcxb,mBAAS,KAChCyb,EAAsBC,GAA2B1b,mBAAS,KAC1D2b,EAAkBC,GAAuB5b,mBAAS,KAClD6b,EAAmBC,GAAwB9b,mBAAS,KACpD+b,EAAqBC,GAA0Bhc,mBAAS,KACxDic,EAAWC,GAAgBlc,mBAAS,KACpCmc,EAAQC,GAAapc,mBAAS,KAC9Bqc,EAAWC,GAAgBtc,mBAAS,KACpCoM,EAAQC,GAAarM,mBAAS,CAAC,IAC/Buc,EAA4BC,GAAiCxc,mBAClE,KAEKyc,EAAYC,GAAiB1c,mBAAS,CAC3C2c,OAAQ,GACRC,cAAe,KAEXC,EACJ3e,EAAM/C,UAAY+C,EAAM/C,SAASyH,MAAQ1E,EAAM/C,SAASyH,MAAMka,KAAO,KACjEpU,EAAU6C,KACV+I,EAAUC,uBACVpZ,EAAW4hB,yBAEVC,EAAmBC,GAAwBjd,oBAAS,IACpDkd,EAAoBC,GAAyBnd,oBAAS,IACtDod,GAAMC,IAAWzN,IAAM5P,UAAS,GACjC6N,GAASA,IAAMwP,IAASD,IACxBE,GAAgBniB,EAASyH,MAC/B,IAAIoK,GAAY,KAChBA,GAAYsQ,GAAgBA,GAActQ,UAAY,KAEtD,MAcMuQ,GAAatN,uBAAY1U,UAC7B,GAAIyR,GAAW,CAAC,IAADwQ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACb,MAAM1Y,QAAiB3J,KAAMN,IAAI,GAADO,OAAIC,GAAO,YAAAD,OAAWoR,IAAa,CACjElR,QAAS,CAAEC,cAAc,UAADH,OAAYZ,OAEhCijB,QAAmBtiB,KAAMN,IAAI,GAADO,OAC7BC,GAAO,+BACV,CAAEC,QAAS,CAAEC,cAAc,UAADH,OAAYZ,OAElCkjB,EAAU5Y,EAAStJ,KAEzBkU,QAAQC,IAAI,cAAsB,OAAP+N,QAAO,IAAPA,GAAgB,QAATV,EAAPU,EAAS3E,eAAO,IAAAiE,OAAT,EAAPA,EAAkBjE,SAE7CwB,EAAsB,OAAPmD,QAAO,IAAPA,GAAgB,QAATT,EAAPS,EAAS3E,eAAO,IAAAkE,OAAT,EAAPA,EAAkBlE,SACjC+B,EAAqB4C,EAAQC,YAC7B,MAAM7U,EAAc4U,EAAQnc,WACtBoI,EAAU+T,EAAQ/T,QAClBH,EAAsB,OAAPkU,QAAO,IAAPA,OAAO,EAAPA,EAASlU,aACxBoU,EAA4B,OAAX9U,QAAW,IAAXA,GAAuB,QAAZoU,EAAXpU,EAAavH,kBAAU,IAAA2b,OAAZ,EAAXA,EAAyBzT,MAC7ChI,GAAqB,mBAAbA,EAAIC,OAGTmc,EAAMC,KAAErU,KAAKgU,EAAWjiB,KAAM,CAClCsG,QAASgc,KAAEC,WAAWD,KAAEE,UAAUN,EAAQG,QACzCta,GAEG0W,EAAQgE,GACA,OAAZzU,QAAY,IAAZA,GAA0B,QAAd2T,EAAZ3T,EAAcA,oBAAY,IAAA2T,OAAd,EAAZA,EAA4B1T,MAAMhI,GAAqB,UAAbA,EAAIC,QAG1CwY,EAAoB,OAAZ1Q,QAAY,IAAZA,GAA0B,QAAd4T,EAAZ5T,EAAcA,oBAAY,IAAA4T,OAAd,EAAZA,EAA4B3T,MACvChI,GAAqB,UAAbA,EAAIC,OAETwc,EAAWD,GACH,OAAZzU,QAAY,IAAZA,GAA0B,QAAd6T,EAAZ7T,EAAcA,oBAAY,IAAA6T,OAAd,EAAZA,EAA4B5T,MAAMhI,GAAqB,aAAbA,EAAIC,QAG1Cyc,EACJxU,GAAkB,OAAPA,QAAO,IAAPA,KAASA,UAAkB,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAASA,QAAQwL,QAAS,EACrDxL,EAAQA,QAAQ,GAChB,KAEFwU,EAAQxE,UAxDGA,EAyDHwE,EAAQxE,QAxDtBxe,KACGN,IAAI,GAADO,OACCC,GAAO,iDAAAD,OAAgDue,GAC1D,CAAEre,QAAS,CAAEC,cAAc,UAADH,OAAYZ,OAEvCuS,MAAMjI,IACLgX,EAAahX,EAAStJ,KAAK4iB,OAAO,IAEnCpR,OAAOtB,SAmDRkN,EAAa,CACXC,QAAQ,EACRC,cAAeqF,EAAQvU,KACvBD,QAAS,GACToP,QAAS,GACTvP,aAAc,GACdzH,YAAa,GACbiX,UAAU,EACVC,iBAAkB,KAClB2E,eAAgBA,EAAehc,MAC/BZ,UAAW0c,EAAQ1c,UACnB+D,SAAU2Y,EAAQzc,QAClBiY,SAAU,GACV3X,WAAY,GACZL,UAAW,GACXiY,gBAAsC,QAAvBmE,EAAEI,EAAQW,qBAAa,IAAAf,OAAA,EAArBA,EAAuB/Z,GACxC6V,YAA8B,QAAnBmE,EAAEG,EAAQY,iBAAS,IAAAf,OAAA,EAAjBA,EAAmBha,GAChC8V,mBAA4C,QAA1BmE,EAAEE,EAAQa,wBAAgB,IAAAf,OAAA,EAAxBA,EAA0Bja,GAC9C+V,mBAAoBoE,EAAQpE,mBAC5BC,uBAAgD,WAAxBmE,EAAQ3b,YAChCyX,IAAKpQ,GAAcsU,EAAQ3b,aAC3BwH,YAAkB,OAAL0Q,QAAK,IAALA,OAAK,EAALA,EAAOrY,MACpB6X,eAAwB,OAARyE,QAAQ,IAARA,OAAQ,EAARA,EAAUtc,MAC1BlG,IAAKgiB,EAAQ3b,YACb2X,UAAW,EACXC,QAASwE,EAAQxE,QACjBC,SAAU4E,SAASL,EAAQvE,UAC3B6E,SAAUN,EAAQrU,KAAK,GACvB+P,MAAOgE,EACP/D,UAAW,GACXI,MAAY,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOtY,OAElB,CA5FiB+X,KA4FjB,GACC,CAACnN,KAEJrE,qBAAU,KACRuW,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAlC,KACIpE,EAAUW,mBAAqBX,EAAUjd,KAC3C8S,IAAM9C,MAAM,6DACd,GACC,CAACqR,KAEJ,MAAM2B,GAAcjP,uBAAY1U,UAC9B,IACE,MAAM+J,QAAiB3J,KAAMN,IAAI,GAADO,OAC3BC,GAAO,+BACV,CAAEC,QAAS,CAAEC,cAAc,UAADH,OAAYZ,OAExCwgB,EAAWlW,EAAStJ,KAAK4iB,OAC3B,CAAE,MAAOxe,GAAI,IACZ,IACG+e,GAAoBlP,uBAAY1U,UACpC,IACE,MAAM+J,QAAiB3J,KAAMN,IAAI,GAADO,OAC3BC,GAAO,0CACV,CAAEC,QAAS,CAAEC,cAAc,UAADH,OAAYZ,OAExC0gB,EAAwBpW,EAAStJ,KAAK4iB,OACxC,CAAE,MAAOxe,GAAI,IACZ,IACGgf,GAAgBnP,uBAAY1U,UAChC,IACE,MAAM+J,QAAiB3J,KAAMN,IAAI,GAADO,OAC3BC,GAAO,qCACV,CAAEC,QAAS,CAAEC,cAAc,UAADH,OAAYZ,OAExC4gB,EAAoBtW,EAAStJ,KAAK4iB,OACpC,CAAE,MAAOxe,GAAI,IACZ,IACGif,GAAiBpP,uBAAY1U,UACjC,IACE,MAAM+J,QAAiB3J,KAAMN,IAAI,GAADO,OAC3BC,GAAO,sCACV,CAAEC,QAAS,CAAEC,cAAc,UAADH,OAAYZ,OAExC8gB,EAAqBxW,EAAStJ,KAAK4iB,OACrC,CAAE,MAAOxe,GAAI,IACZ,IACGkf,GAAoBrP,uBAAY1U,UACpC,IACE,MAAM+J,QAAiB3J,KAAMN,IAAI,GAADO,OAC3BC,GAAO,wCACV,CAAEC,QAAS,CAAEC,cAAc,UAADH,OAAYZ,OAExCghB,EAAuB1W,EAAStJ,KAAK4iB,OACvC,CAAE,MAAOxe,GAAI,IACZ,IACGmf,GAAsBtP,uBAAY1U,UACtC,MAAM+J,QAAiB3J,KAAMN,IAAI,GAADO,OAC3BC,GAAO,kDACV,CAAEC,QAAS,CAAEC,cAAc,UAADH,OAAYZ,OAExCwhB,EAA8BlX,EAAStJ,KAAK4iB,OAAO,GAClD,IAQGhV,GAAiB1N,IACrB,MAAME,EAAQ,IAAIC,KAEZC,GADYJ,EAAIwN,MAAM,KACV,IAAIrN,KAAKH,IAG3B,OAFcE,EAAMI,cAAgBF,EAAUE,aAEhC,EAEViiB,GAA0BhE,IAAW,IAADiF,EAUxC,YAPYC,IAAVlF,GACwB,cAAZ,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOrY,QACU,qBAAZ,OAALqY,QAAK,IAALA,OAAK,EAALA,EAAOrY,QACc,OAAvB,OAALqY,QAAK,IAALA,GAAY,QAAPiF,EAALjF,EAAOrY,aAAK,IAAAsd,OAAP,EAALA,EAAcE,OAAO,MAErBnF,EAAMrY,MAAQqY,EAAMrY,MAAMyd,QAAQ,IAAK,QAElCpF,CAAK,EAGR+E,GAAaA,KACjB7jB,KACGN,IAAI,GAADO,OAAIC,GAAO,kDAAkD,CAC/DC,QAAS,CAAEC,cAAc,UAADH,OAAYZ,OAErCuS,MAAMjI,IACL4W,EAAa5W,EAAStJ,KAAK,IAE5BwR,OAAOtB,OAEN,EASN,SAASuT,KACP9jB,KACGN,IAAI,GAADO,OAAIC,GAAO,kDAAkD,CAC/DC,QAAS,CAAEC,cAAc,UAADH,OAAYZ,OAErCuS,MAAMjI,IAEL8W,EAAU9W,EAAStJ,KAAK4iB,OAAO,IAEhCpR,OAAOtB,OAGZ,CAEA,MAmCM4T,GAA2B1f,IACR,WAAnBA,EAAEC,OAAO+B,MACX8Y,GAAe,GACa,cAAnB9a,EAAEC,OAAO+B,OAClB8Y,GAAe,EACjB,EAmBI6E,GAA0B3f,IAG9B,GAFAgZ,EAAa,IAAKD,EAAW,CAAC/Y,EAAEC,OAAOyD,MAAO1D,EAAEC,OAAO+B,QAEjC,cAAlBhC,EAAEC,OAAOyD,MAA2C,KAAnB1D,EAAEC,OAAO+B,MAAc,CAC1D,MAAM0B,EAAOkc,GAAa5f,EAAEC,OAAO+B,OACnCgX,EAAa,IAAKD,EAAW,CAAC/Y,EAAEC,OAAOyD,MAAOA,GAChD,CACA,GAAsB,aAAlB1D,EAAEC,OAAOyD,MAA0C,KAAnB1D,EAAEC,OAAO+B,MAAc,CACzD,MAAM0B,EAAOkc,GAAa5f,EAAEC,OAAO+B,OACnCgX,EAAa,IAAKD,EAAW,CAAC/Y,EAAEC,OAAOyD,MAAOA,GAChD,CACA,GAAsB,eAAlB1D,EAAEC,OAAOyD,MAA4C,KAAnB1D,EAAEC,OAAO+B,MAAc,CAC3D,MAAM0B,EAAOkc,GAAa5f,EAAEC,OAAO+B,OACnCgX,EAAa,IAAKD,EAAW,CAAC/Y,EAAEC,OAAOyD,MAAOA,GAChD,CACA,GAAsB,cAAlB1D,EAAEC,OAAOyD,MAA2C,KAAnB1D,EAAEC,OAAO+B,MAAc,CAC1D,MAAM6d,EAAiBC,GACrB9f,EAAEC,OAAO+B,MAAMyd,QAAQ,MAAO,KAEhCzG,EAAa,IAAKD,EAAW,CAAC/Y,EAAEC,OAAOyD,MAAOmc,GAChD,CACA,GAAsB,mBAAlB7f,EAAEC,OAAOyD,MAAgD,KAAnB1D,EAAEC,OAAO+B,MAAc,CAC/D7G,eAAe4kB,IACb,MAAMC,EAAiBhgB,EAAEC,OAAO+B,OAWV,WAVCzG,KAAMoT,KAAK,GAADnT,OAC5BC,GAAO,iCACVukB,EACA,CACEtkB,QAAS,CACPC,cAAc,UAADH,OAAYZ,IACzB,eAAgB,iBAITgB,MACXihB,GAAqB,GACrB7Q,EAAOgS,eAAiB,GAExBjB,GAAsB,KAEtB/Q,EAAOgS,eAAiB,GACxBpP,IAAM9C,MAAM,wCACZ+Q,GAAqB,GACrBE,GAAsB,GAE1B,CACAgD,GACF,GAyEIE,GAAmB1F,IACvB,MAAM2F,EAAevE,EAAoB9R,MACtChI,GAAQA,EAAI8B,KAAO4W,IAEtB,OAAO2F,EAAeA,EAAahe,QAAU,EAAE,EAE3Cie,GAA8BngB,IAClCoa,EAAa,IAAKD,EAAW,CAACna,EAAEC,OAAOyD,MAAO1D,EAAEC,OAAO+B,OAAQ,EA8J3D4d,GAAgB5d,GACLA,EAAMyd,QAAQ,WAAY,IASrCK,GAAoB9f,GAEDA,EAAEogB,MAAM,EADjB,IAIVC,GAA+BA,CAACrgB,EAAGsgB,KACvC,MACMC,EAAcT,GAAiB9f,EAAEC,OAAO+B,MAAMyd,QAAQ,MAAO,KACnEzG,EAAa,IAAKD,EAAW,CAACuH,GAAYC,GAAc,EAO1D,OACE7d,gBAAAoL,YAAA,CAAAnN,SAAA,CACE3C,eAACga,IAAc,CAACC,UAAW,IAAMC,iBAAe,IAChDla,eAAA,OACEyF,UAAU,uBACVZ,MAAO,CAAE6C,UAAW,MAAOC,aAAc,SAAUhF,SAEnD3C,eAAA,MAAIyF,UAAU,aAAY9C,SACxB3C,eAAA,MAAIyF,UAAU,yBAAwB9C,SACpC+B,gBAAA,MAAA/B,SAAA,CACG,IACD3C,eAACoE,KAAI,CAACC,GAAI,IAAI1B,SAAC,cAAgB,iCAKvC3C,eAACoE,KAAI,CACHC,GAAI,CACFC,SAAU,IACVE,MAAO,SACP7B,SAEF3C,eAACkF,KAAM,CACLN,QAAQ,YACRO,MAAM,UACNM,UAAU,yBACVZ,MAAO,CACLC,gBAAiB,UACjBQ,WAAY,SACZ6U,aAAc,SAEhBvS,UAAW5H,eAAC6K,KAAW,IAAIlI,SAE3B+B,gBAAA,QAAMG,MAAO,CAAEiD,cAAe,aAAc3C,MAAO,QAASxC,SAAA,CAAC,OACtD,WAIX3C,eAAA,SACAA,eAAA,SAEAA,eAACkI,KAAI,CAACzC,UAAW6E,EAAQxB,KAAKnG,SAC5B3C,eAACoW,KAAW,CAAAzT,SACV3C,eAAA,OAAKyF,UAAU,sBAAqB9C,SAClC+B,gBAACgL,KAAI,CAAA/M,SAAA,CACH+B,gBAAA,OAAKe,UAAU,OAAM9C,SAAA,CACnB3C,eAAA,OACEyF,UAAU,cACVZ,MAAO,CACLC,gBAAiB,UACjBK,MAAO,OACPG,WAAY,SACZQ,aAAc,UACdnD,SAEF3C,eAAA,MAAIyF,UAAU,aAAaZ,MAAO,CAAEM,MAAO,QAASxC,SAClC,OAAf8b,EACG,oBACA,4BAIRze,eAAA,OAAKyF,UAAU,YAAW9C,SACxB+B,gBAAA,OAAKe,UAAU,aAAY9C,SAAA,CACzB+B,gBAAA,OAAKe,UAAU,MAAK9C,SAAA,CAClB3C,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAACoS,IAAI,qBAAoB7W,SAAA,CAAC,uBACT,IACrB3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,OAAU,OAE3C3C,eAACgQ,KAAK,CACJvK,UAAU,eACV3B,KAAK,OACL4B,KAAK,qBACLC,GAAG,qBACH6c,IAAI,aACJrS,IAAK1E,EAAO,IAAIxN,MAAQyN,OAAO,cAC/B1H,MAAO+W,EAAUW,mBAEjB9V,SAAU+b,GACV9c,MAAO,CACLgB,OAAQ,oBACRC,aAAc,YAGa,KAA9BkI,EAAO0N,mBACN1b,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAC5BqL,EAAO0N,qBAGV,QAKN1b,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAACoS,IAAI,YAAW7W,SAAA,CAAC,kBACL,IAChB3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAEjC3C,eAAA,SACEyF,UAAU,eACV3B,KAAK,OACL4B,KAAK,iBACLC,GAAG,iBACH3B,MAAO+W,EAAUiF,eACjBpa,SAAU+b,GACV9c,MAAO,CACLgB,OAAQ,oBACRC,aAAc,YAGS,KAA1BkI,EAAOgS,eACNhgB,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAC5BqL,EAAOgS,iBAGV,IAEqB,IAAtBpB,EACC5e,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAC5B,kCAGH,QAON3C,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAACoS,IAAI,YAAW7W,SAAA,CAAC,iCACU,OAEjC3C,eAAA,SACEyF,UAAU,eACV3B,KAAK,OACL4B,KAAK,YACL1B,MAAO+W,EAAUmB,UACjBvW,GAAG,YACHC,SAAU+b,GACV9c,MAAO,CACLgB,OAAQ,oBACRC,aAAc,oBAwBxBpB,gBAAA,OAAKe,UAAU,MAAK9C,SAAA,CAClB3C,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAACoS,IAAI,YAAW7W,SAAA,CAAC,eACT3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAE7C3C,eAACgQ,KAAK,CACJvK,UAAU,eACV3B,KAAK,OACL4B,KAAK,YACLC,GAAG,YACH3B,MAAO+W,EAAU3X,UACjBwC,SAAU+b,GACV9c,MAAO,CACLgB,OAAQ,oBACRC,aAAc,YAGI,KAArBkI,EAAO5K,UACNpD,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAC5BqL,EAAO5K,YAGV,QAKNpD,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR3C,eAACoH,KAAK,CAAAzE,SAAC,gBACP3C,eAACgQ,KAAK,CACJvK,UAAU,eACV3B,KAAK,OACL4B,KAAK,aACLC,GAAG,aACH3B,MAAO+W,EAAUyB,WACjB5W,SAAU+b,GACV9c,MAAO,CACLgB,OAAQ,oBACRC,aAAc,iBAMtB9F,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,aACK3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAE3C3C,eAAA,SACEyF,UAAU,eACV3B,KAAK,OACL4B,KAAK,WACLC,GAAG,WACH3B,MAAO+W,EAAU5T,SACjBvB,SAAU+b,GACV9c,MAAO,CACLgB,OAAQ,oBACRC,aAAc,YAGG,KAApBkI,EAAO7G,SACNnH,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAC5BqL,EAAO7G,WAGV,WAMRzC,gBAAA,OAAKe,UAAU,MAAK9C,SAAA,CAClB3C,eAAA,OAAKyF,UAAU,uBAAsB9C,SACnC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,OACD3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAErC+B,gBAAA,UACEe,UAAU,eACVC,KAAK,QACLC,GAAG,QACHC,SAAU+b,GACV3d,MAAO+W,EAAUkB,MACjBpX,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UACdnD,SAAA,CAEF3C,eAAA,UAAQgE,MAAO,GAAGrB,SAAC,WAClBwa,EAAQlN,KAAI,CAAChM,EAAQwe,IACpBziB,eAAA,UAAwBgE,MAAOC,EAAO0B,GAAGhD,SACtCsB,EAAOC,SADGD,EAAO0B,SAKN,KAAjBqI,EAAOiO,MACNjc,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAC5BqL,EAAOiO,QAGV,QAINjc,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR3C,eAACoH,KAAK,CAAAzE,SAAC,kBACP3C,eAAA,OAAKyF,UAAU,QAAO9C,SACpB+B,gBAAA,SAAA/B,SAAA,CACE3C,eAAA,SACE8D,KAAK,QACLE,MAAM,SACN0B,KAAK,cACLgd,gBAAc,EACd9c,SAAW5D,GAAM0f,GAAwB1f,GACzC6C,MAAO,CACLgB,OAAQ,oBACRC,aAAc,YAEf,IAAI,cAIX9F,eAAA,OAAKyF,UAAU,QAAO9C,SACpB+B,gBAAA,SAAA/B,SAAA,CACE3C,eAAA,SACE8D,KAAK,QACLE,MAAM,YACN0B,KAAK,cACLE,SAAW5D,GAAM0f,GAAwB1f,GACzC6C,MAAO,CACLgB,OAAQ,oBACRC,aAAc,YAEf,IAAI,sBAOf9F,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR3C,eAACoH,KAAK,CAAAzE,SAAC,UACP3C,eAAA,SACEyF,UAAU,eACV3B,KAAK,OACL4B,KAAK,MACL8c,IAAI,aACJ7c,GAAG,MACHwK,IAAK4K,EAAUW,mBACf1X,MAAO+W,EAAUjd,IACjB8H,SAvqBD5D,IACvB,GAAIA,EAAEC,OAAO+B,MAAO,CAClB,MAAMhG,EAAQ,IAAIC,KACZC,EAAY,IAAID,KAAK+D,EAAEC,OAAO+B,OACpC,IAAI7F,EAAUH,EAAMI,cAAgBF,EAAUE,cAK9C2c,EAAUa,IAAMzd,CAElB,MACE6c,EAAa,IAAKD,EAAWa,IAAK,KAEpCZ,EAAa,IAAKD,EAAWjd,IAAKkE,EAAEC,OAAO+B,QACrB,KAAlB+W,EAAUa,KAAcb,EAAUa,KAAO,IAC3CnM,IACF,EAupBwB5K,MAAO,CACLgB,OAAQ,oBACRC,aAAc,iBAMtBpB,gBAAA,OAAKe,UAAU,2BAA0B9C,SAAA,CACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR3C,eAACoH,KAAK,CAAAzE,SAAC,QACP3C,eAAA,SACE8D,KAAK,OACL4B,KAAK,MACLD,UAAU,eACVE,GAAG,MACH6c,IAAI,IACJxe,MAAO+W,EAAUa,IACjB7K,SAAU8L,EACVjX,SAjqBD5D,IACvB,MAAM2gB,EAAY3gB,EAAEC,OAAO+B,MAAMyd,QAAQ,MAAO,IAChD,IAAK5E,GAAe8F,EAAW,CAC7B,MAAMC,EAAc,IAAI3kB,KACxB2kB,EAAYC,QAAQ,IACpBD,EAAYE,SAAS,GACrB,MACMC,EADStX,EAAOmX,EAAYI,eACZ3P,KAAiB,EAAbsP,EAAgB,SAE1C5H,EAAUjd,IAAM2N,EAAOsX,GAAQrX,OAAO,cACpB,KAAdiX,GAAoBA,GAAa,IACnClT,IAEJ,CACAuL,EAAa,IAAKD,EAAWa,IAAK+G,GAAY,EAopBtB9d,MAAO,CACLgB,OAAQ,oBACRC,aAAc,eAID,KAAlBiV,EAAUa,KAAcb,EAAUa,KAAO,GACxC5b,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAAC,4BAIhC,SAKN+B,gBAAA,OAAKe,UAAW,MAAM9C,SAAA,CAGpB3C,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR3C,eAACoH,KAAK,CAAAzE,SAAC,mBACP+B,gBAAA,UACEe,UAAU,eACVC,KAAK,kBACLC,GAAG,kBACHC,SAAU+b,GACV3d,MAAO+W,EAAUQ,gBACjB1W,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UACdnD,SAAA,CAEF3C,eAAA,UAAQgE,MAAO,GAAGrB,SAAC,WAClB0a,EAAqBpN,KACpB,CAACgT,EAAqBR,IACpBziB,eAAA,UAEEgE,MAAOif,EAAoBtd,GAAGhD,SAE7BsgB,EAAoB/e,SAHhB+e,EAAoBtd,cAWrC3F,eAAA,OAAKyF,UAAU,uBAAsB9C,SACnC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,oBACa,IAClB3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAEjC+B,gBAAA,UACEe,UAAU,eACVC,KAAK,qBACLC,GAAG,qBACHC,SAAU+b,GACV3d,MAAO+W,EAAUU,mBACjB5W,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UACdnD,SAAA,CAEF3C,eAAA,UAAQgE,MAAO,GAAGrB,SAAC,WAClB8a,EAAkBxN,KACjB,CAACiT,EAAkBT,IACjBziB,eAAA,UAEEgE,MAAOkf,EAAiBvd,GAAGhD,SAE1BugB,EAAiBhf,SAHbgf,EAAiBvd,SAQC,KAA9BqI,EAAOyN,mBACNzb,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAC5BqL,EAAOyN,qBAGV,QAKNzb,eAAA,OAAKyF,UAAU,uBAAsB9C,SACnC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,kBACW,IAChB3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAEjC+B,gBAAA,UACEe,UAAU,eACVC,KAAK,cACLC,GAAG,cACHC,SAAU+b,GACV3d,MAAO+W,EAAUS,YACjB3W,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UACdnD,SAAA,CAEF3C,eAAA,UAAQgE,MAAO,GAAGrB,SAAC,WAClB4a,EAAiBtN,KAAI,CAACkT,EAAiBV,IACtCziB,eAAA,UAEEgE,MAAOmf,EAAgBxd,GAAGhD,SAEzBwgB,EAAgBjf,SAHZif,EAAgBxd,SAOH,KAAvBqI,EAAOwN,YACNxb,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAC5BqL,EAAOwN,cAGV,mBASd9W,gBAAA,OAAKe,UAAU,OAAM9C,SAAA,CACnB3C,eAAA,OACEyF,UAAU,cACVZ,MAAO,CACLC,gBAAiB,UACjBK,MAAO,OACPG,WAAY,SACZQ,aAAc,UACdnD,SAEF3C,eAAA,MAAIyF,UAAU,aAAaZ,MAAO,CAAEM,MAAO,QAASxC,SAAC,sBAKvD+B,gBAAA,OAAKe,UAAU,YAAW9C,SAAA,CACxB+B,gBAAA,OAAKe,UAAW,MAAM9C,SAAA,CACpB3C,eAAA,OAAKyF,UAAU,uBAAsB9C,SACnC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,gBACQ3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAgB9C3C,eAACgQ,KAAK,CACJlM,KAAK,OACL4B,KAAK,cACLC,GAAG,cACHC,SAAW5D,IACTqgB,GAA6BrgB,EAAG,cAAc,EAEhDgC,MAAO+W,EAAUpP,YACjB9G,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UAEhBwP,UAAQ,IAEc,KAAvBtH,EAAOrC,YACN3L,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAC5BqL,EAAOrC,cAGV,QAQN3L,eAAA,OAAKyF,UAAU,sBAAqB9C,SAClC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR3C,eAACoH,KAAK,CAAAzE,SAAC,sBAWP3C,eAACgQ,KAAK,CACJlM,KAAK,OACL4B,KAAK,iBACLC,GAAG,iBACHC,SAAW5D,IACTqgB,GAA6BrgB,EAAG,iBAAiB,EAEnDgC,MAAO+W,EAAUc,eACjBhX,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UAEhBwP,UAAQ,SAKdtV,eAAA,OAAKyF,UAAU,sBAAqB9C,SAClC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR3C,eAACoH,KAAK,CAAAzE,SAAC,UACP3C,eAAA,SACEyF,UAAU,eACV3B,KAAK,QACL4B,KAAK,QACLC,GAAG,QACHC,SAAU+b,GACV3d,MAAO+W,EAAUuB,MACjBzX,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UAEhBwP,UAAQ,YAMhB5Q,gBAAA,OAAKe,UAAU,MAAK9C,SAAA,CAClB3C,eAAA,OAAKyF,UAAU,uBAAsB9C,SACnC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,WACG3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAEzC+B,gBAAA,UACEe,UAAU,eACV3B,KAAK,OACL4B,KAAK,YACLC,GAAG,YACHd,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UAEhB9B,MAAO+W,EAAUe,UACjBlW,SAj+BL5D,IACjB,MAAMohB,EAAephB,EAAEC,OAAO+B,MAC9Bqd,KACArG,EAAa,IAAKD,EAAWe,UAAWsH,GAAe,EA+9BjCrS,UAAQ,EAAApO,SAAA,CAER3C,eAAA,UAAQgE,MAAO,GAAGrB,SAAC,WAClBkb,EAAU5N,KAAI,CAACjM,EAAOye,IACrBziB,eAAA,UAAoBgE,MAAOA,EAAM2B,GAAGhD,SACjCqB,EAAM0B,MADI+c,QAKK,KAArBzU,EAAO8N,UACN9b,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAC5BqL,EAAO8N,YAGV,QAKN9b,eAAA,OAAKyF,UAAU,uBAAsB9C,SACnC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,SACC3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAEvC+B,gBAAA,UACEe,UAAU,eACV3B,KAAK,OACL4B,KAAK,UACLC,GAAG,UACH3B,MAAO+W,EAAUgB,QACjBlX,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UAEhBF,SAh/BF5D,IACpB,MAAM+Z,EAAU/Z,EAAEC,OAAO+B,MACzBgX,EAAa,IAAKD,EAAWgB,QAAS/Z,EAAEC,OAAO+B,QAC/CzG,KACGN,IAAI,GAADO,OACCC,GAAO,iDAAAD,OAAgDue,GAC1D,CAAEre,QAAS,CAAEC,cAAc,UAADH,OAAYZ,OAEvCuS,MAAMjI,IACLgX,EAAahX,EAAStJ,KAAK4iB,OAAO,IAEnCpR,OAAOtB,OAEN,EAm+ByCnL,SAAA,CAEvB3C,eAAA,UAAQgE,MAAM,GAAErB,SAAC,WAChBob,EAAO9N,KAAI,CAACjM,EAAOye,IAClBziB,eAAA,UAAoBgE,MAAOA,EAAM2B,GAAGhD,SACjCqB,EAAM0B,MADI+c,QAKG,KAAnBzU,EAAO+N,QACN/b,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAC5BqL,EAAO+N,UAGV,QAKN/b,eAAA,OAAKyF,UAAU,uBAAsB9C,SACnC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,wBACiB,IACtB3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAEjC+B,gBAAA,UACEe,UAAU,eACV3B,KAAK,OACL4B,KAAK,WACLC,GAAG,WACH3B,MAAO+W,EAAUiB,SACjBnX,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UAEhBF,SAAU+b,GAAuBhf,SAAA,CAEjC3C,eAAA,UAAQgE,MAAM,GAAErB,SAAC,WAChBsb,EAAUhO,KAAI,CAACjM,EAAOye,IACrBziB,eAAA,UAAoBgE,MAAOA,EAAM2B,GAAGhD,SACjCqB,EAAM0B,MADI+c,QAKI,KAApBzU,EAAOgO,SACNhc,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAC5BqL,EAAOgO,WAGV,WAMRtX,gBAAA,OAAKe,UAAW,MAAM9C,SAAA,CACpB3C,eAAA,OAAKyF,UAAU,uBAAsB9C,SACnC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAAAzE,SAAA,CAAC,iBACU,IACf3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAEjC3C,eAAA,SACEyF,UAAU,eACV3B,KAAK,OACL4B,KAAK,gBACLC,GAAG,gBACH3B,MAAO+W,EAAUG,cACjBtV,SAAU+b,GACV9c,MAAO,CACLgB,OAAQ,oBACRC,aAAc,YAGQ,KAAzBkI,EAAOkN,cACNlb,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAC5BqL,EAAOkN,gBAGV,QAKNlb,eAAA,OAAKyF,UAAU,uBAAsB9C,SACnC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR3C,eAACoH,KAAK,CAAAzE,SAAC,aACP3C,eAAA,SACEyF,UAAU,eACV3B,KAAK,OACL4B,KAAK,WACLC,GAAG,WACH3B,MAAO+W,EAAU8F,SACjBjb,SAAU+b,GACV9c,MAAO,CACLgB,OAAQ,oBACRC,aAAc,0BAS5BpB,gBAAA,OAAKe,UAAU,OAAM9C,SAAA,CACnB3C,eAAA,OACEyF,UAAU,cACVZ,MAAO,CACLC,gBAAiB,UACjBK,MAAO,OACPG,WAAY,SACZQ,aAAc,UACdnD,SAEF3C,eAAA,MAAIyF,UAAU,aAAaZ,MAAO,CAAEM,MAAO,QAASxC,SAAC,iCAIvD+B,gBAAA,OAAKe,UAAU,YAAW9C,SAAA,CACxB+B,gBAAA,OAAKe,UAAU,MAAK9C,SAAA,CACjB+Z,GAAeA,EAAYnF,OAAS,GACnCvX,eAAA,OAAKyF,UAAU,sBAAqB9C,SAClC+B,gBAAA,SAAOG,MAAO,CAAEG,MAAO,QAAUS,UAAU,OAAM9C,SAAA,CAC/C3C,eAAA,SAAOyF,UAAU,OAAM9C,SACrB+B,gBAAA,MAAA/B,SAAA,CACE3C,eAAA,MAAA2C,SAAI,sBACJ3C,eAAA,MAAA2C,SAAI,SACJ3C,eAAA,MAAA2C,SAAI,UACJ3C,eAAA,MAAA2C,SAAI,YACJ3C,eAAA,MAAA2C,SAAI,iBAGR3C,eAAA,SAAOyF,UAAU,OAAM9C,SACpB+Z,EAAYzM,KAAI,CAACmC,EAAMqQ,KAAW,IAADY,EAChC,OACE3e,gBAAA,MAAqBe,UAAU,OAAM9C,SAAA,CACnC3C,eAAA,MAAA2C,SACGsf,GAAgB7P,EAAKmK,kBAExBvc,eAAA,MAAA2C,UACO,OAAJyP,QAAI,IAAJA,OAAI,EAAJA,EAAMhP,WACL,KACI,OAAJgP,QAAI,IAAJA,OAAI,EAAJA,EAAM9O,WACN,KACI,OAAJ8O,QAAI,IAAJA,OAAI,EAAJA,EAAM/O,WAEVrD,eAAA,MAAA2C,SAAKyP,EAAKxG,aAAa5H,QACvBhE,eAAA,MAAA2C,SAAiB,QAAjB0gB,EAAKjR,EAAKrG,eAAO,IAAAsX,OAAA,EAAZA,EAAcnX,KAAK,KACxBxH,gBAAA,MAAA/B,SAAA,CASe,WAEb3C,eAAA,UACE8D,KAAK,SACL2B,UAAU,kCACVsH,QAAU/K,GA1+BhBygB,KAC5B/F,EAAY4G,OAAOb,EAAO,GAC1B9F,EAAe,IAAID,GAAa,EAy+BI6G,CAAqBd,GACtB9f,SAED3C,eAACwjB,KAAe,CAACla,KAAK,iBA/BnB8I,EAAKqQ,MAkCT,WAOjBziB,eAAA,OAAKyF,UAAU,sBAAqB9C,SACjCoa,GACC/c,eAAA,OAAKyF,UAAU,OAAM9C,SACnB+B,gBAAA,OAAKe,UAAU,YAAW9C,SAAA,CACxB+B,gBAAA,OAAKe,UAAU,MAAK9C,SAAA,CAClB3C,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAACoS,IAAI,mBAAkB7W,SAAA,CAAC,oBACV,IAClB3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAEjC+B,gBAAA,UACEe,UAAU,eACVC,KAAK,iBACLC,GAAG,iBACH3B,MAAOmY,EAAUI,eACjB1X,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UAEhBF,SAAUuc,GAA2Bxf,SAAA,CAErC3C,eAAA,UAAQgE,MAAO,GAAGrB,SAAC,WAClBgb,EAAoB1N,KACnB,CAACwT,EAAUhB,IACTziB,eAAA,UAEEgE,MAAOyf,EAAS9d,GAAGhD,SAElB8gB,EAASvf,SAHLuf,EAAS9d,SAQK,KAA1BqI,EAAOuO,eACNvc,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAC5BqL,EAAOuO,iBAGV,QAKNvc,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR+B,gBAAC0C,KAAK,CAACoS,IAAI,aAAY7W,SAAA,CAAC,aACX,IACX3C,eAAA,QAAM6E,MAAO,CAAEM,MAAO,OAAQxC,SAAC,UAEjC3C,eAAA,SACEyF,UAAU,eACV3B,KAAK,OACL4B,KAAK,YACL1B,MAAOmY,EAAU/Y,UACjBuC,GAAG,YACHd,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UAEhBF,SAAUuc,KAEU,KAArBnU,EAAO5K,UACNpD,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAC5BqL,EAAO5K,YAGV,QAKNpD,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR3C,eAACoH,KAAK,CAAAzE,SAAC,gBACP3C,eAAA,SACEyF,UAAU,eACV3B,KAAK,OACL4B,KAAK,aACLC,GAAG,aACH3B,MAAOmY,EAAUK,WACjB3X,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UAEhBF,SAAUuc,UAMhBniB,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR3C,eAACoH,KAAK,CAAAzE,SAAC,eACP3C,eAAA,SACEyF,UAAU,eACV3B,KAAK,OACL4B,KAAK,WACLC,GAAG,WACH3B,MAAOmY,EAAUhV,SACjBtC,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UAEhBF,SAAUuc,aAMlBzd,gBAAA,OAAKe,UAAU,MAAK9C,SAAA,CAClB3C,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR3C,eAACoH,KAAK,CAACoS,IAAI,qBAAoB7W,SAAC,iBAGhC3C,eAACgQ,KAAK,CACJlM,KAAK,OACL4B,KAAK,QACLC,GAAG,QACHC,SAAW5D,IA57BpB0hB,EAAC1hB,EAAGsgB,KAC3B,MAAMC,EAAcT,GAAiB9f,EAAEC,OAAO+B,MAAMyd,QAAQ,MAAO,KACnErF,EAAa,IAAKD,EAAW,CAACmG,GAAYC,GAAc,EA27BtBmB,CAAiB1hB,EAAG,QAAQ,EAE9BgC,MAAsB,QAAjB6W,EAAEsB,EAAUE,aAAK,IAAAxB,OAAA,EAAfA,EAAiB7W,MACxBa,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UAEhBwP,UAAQ,IAEQ,KAAjBtH,EAAOqO,MACNrc,eAAA,QAAMyF,UAAW6E,EAAQwD,MAAMnL,SAC5BqL,EAAOqO,QAGV,QAKNrc,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR3C,eAACoH,KAAK,CAACoS,IAAI,eAAc7W,SAAC,UAC1B3C,eAAA,SACEyF,UAAU,eACV3B,KAAK,QACL4B,KAAK,QACLC,GAAG,QACH3B,MAAOmY,EAAUG,MACjBzX,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UAEhBF,SAAUuc,GACV7M,UAAQ,SAMdtV,eAAA,OAAKyF,UAAU,2BAA0B9C,SACvC+B,gBAACqL,KAAS,CAAApN,SAAA,CACR3C,eAACoH,KAAK,CAACoS,IAAI,iBAAgB7W,SAAC,YAC5B3C,eAAA,SACEyF,UAAU,eACV3B,KAAK,OACL4B,KAAK,UACLC,GAAG,UACH3B,MAAwB,QAAnB8W,EAAEqB,EAAUpQ,eAAO,IAAA+O,OAAA,EAAjBA,EAAmB9O,KAC1BnH,MAAO,CACLgB,OAAQ,oBACRC,aAAc,UAEhBF,SAAUuc,aAOlBzd,gBAAA,OAAKe,UAAU,MAAK9C,SAAA,CAClB3C,eAAA,OAAKyF,UAAU,QAAO9C,SACpB3C,eAACoQ,KAAS,CACRtM,KAAK,SACLc,QAAQ,YACRO,MAAM,UACNM,UAAW6E,EAAQsD,OACnBb,QA1tCD4W,KAC7B,GAbwBC,MACxB,IAAI1V,EAAO,IAAKF,GAQhB,OAPAE,EAAK9K,UAAY+Y,EAAU/Y,UAAY,GAAK,yBAG5C8K,EAAKqO,eAAiBJ,EAAUI,eAC5B,GACA,iCACJtO,EAAU,IAAKC,IACRqC,OAAOC,OAAOtC,GAAMuC,OAAOC,GAAY,KAANA,GAAS,EAI7CkT,GAAqB,CACvB,MAAMzI,EAAU,CACdpP,QAAS,CACPG,KAAM,CAACiQ,EAAUpQ,UAEnBH,aAAc,CACZ9H,KAAM,QACNE,MAAOmY,EAAUE,OAEnBjZ,UAAW+Y,EAAU/Y,UACrBygB,SACE1H,EAAU/Y,UACV,IACA+Y,EAAUK,WACV,IACAL,EAAUhV,SACZoV,eAAgBJ,EAAUI,eAC1BlZ,QAAS8Y,EAAUhV,SACnB7D,UAAW6Y,EAAUK,iBAGH+E,IAAhB7E,GACFD,EAAa/F,KAAKyE,GAClBwB,EAAeF,IAEfE,EAAe,IAAID,EAAavB,IAElCiB,EAAa,CACXrQ,QAAS,GACTsQ,MAAO,GACPjZ,UAAW,GACXkZ,MAAO,GACPC,eAAgB,GAChBpV,SAAU,GACVqV,WAAY,IAEhB,GAqrC8D7Z,SACjC,UAKH3C,eAAA,OAAKyF,UAAU,QAAO9C,SACpB3C,eAACoQ,KAAS,CACRtM,KAAK,SACLc,QAAQ,YACRO,MAAM,YACNM,UAAW6E,EAAQsD,OACnBb,QAtvCK+W,KACnC9G,GAAgB,EAAM,EAqvC8Cra,SACvC,0BAWf3C,eAAA,OAAKyF,UAAU,QACfzF,eAACoQ,KAAS,CACRtM,KAAK,SACLc,QAAQ,YACRO,MAAM,UACNM,UAAW6E,EAAQsD,OACnBhG,UAAW5H,eAAC+jB,KAAO,IACnBhX,QA7wCQiX,KACxBhH,GAAgB,EAAK,EA6wCLnY,MAAO,CAAEC,gBAAiB,UAAWQ,WAAY,UAAW3C,SAC7D,qCAMJoM,EAAS/O,eAACikB,KAAO,IAAM,GAExBjkB,eAAA,SAEAA,eAACoQ,KAAS,CACRtM,KAAK,SACLc,QAAQ,YACRO,MAAM,UACNM,UAAW6E,EAAQsD,OACnBhG,UAAW5H,eAACqQ,KAAQ,IACpBtD,QAtrCO5P,UAGnB,GAFA6E,EAAEsO,iBA3Ba4T,MACf,IAAIhW,EAAO,IAAKF,GAsBhB,OArBAE,EAAK9K,UAAY2X,EAAU3X,UAAY,GAAK,yBAC5C8K,EAAK8R,eAAiBjF,EAAUiF,eAC5B,GACA,gCAGJ9R,EAAK/G,SAAW4T,EAAU5T,SAAW,GAAK,0BAC1C+G,EAAK+N,MAAQlB,EAAUkB,MAAQ,GAAK,sBACpC/N,EAAKwN,mBAAqBX,EAAUW,mBAChC,GACA,oCACJxN,EAAKsN,YAAcT,EAAUS,YAAc,GAAK,yBAChDtN,EAAKgN,cAAgBH,EAAUG,cAAgB,GAAK,uBAEpDhN,EAAK4N,UAAYf,EAAUe,UAAY,GAAK,uBAC5C5N,EAAK6N,QAAUhB,EAAUgB,QAAU,GAAK,qBACxC7N,EAAK8N,SAAWjB,EAAUiB,SAAW,GAAK,4BAC1C9N,EAAKuN,mBAAqBV,EAAUU,mBAChC,GACA,gCACJxN,EAAU,IAAKC,IACRqC,OAAOC,OAAOtC,GAAMuC,OAAOC,GAAY,KAANA,GAAS,EAM7CwT,GAAY,CACdlV,GAAU,GAGV,IACE,MAAMmV,EAAc,CAClBlJ,QAAQ,EACRlP,QAAS,CACP,CACEC,KAAM+O,EAAUG,cAChBY,UAAWf,EAAUe,UACrBE,SAAUjB,EAAUiB,SACpB9P,KAAM,CAAC6O,EAAU8F,UACjBuD,mBAAoB,EACpBC,WAAY,GACZtI,QAAShB,EAAUgB,UAGvBZ,QAASuB,EACT9Q,aAAc,GACdzH,YAAa4W,EAAUjd,IACvBsd,UAAU,EACVC,iBAAkB,KAClBjY,UAAW2X,EAAU3X,UACrBkY,SAAUP,EAAUkB,MACpBA,MAAOlB,EAAUkB,MACjBtY,WAAY,CACV,CACE2gB,WAAY,EACZxgB,KAAM,iBACNE,MAAO+W,EAAUiF,iBAGrB1c,UAAWyX,EAAUyB,WACrBjB,gBAAiBR,EAAUQ,gBAC3BlY,QAAS0X,EAAU5T,SACnBqU,YAAaT,EAAUS,YACvBC,mBAAoBV,EAAUU,mBAC9BC,mBAAoBX,EAAUW,mBAC9BC,uBAC4B,WAA1BZ,EAAU5W,YACZ+X,UAAWnB,EAAUmB,WAGjBG,EAAQ,CACZvY,KAAM,QACNE,MAAO+W,EAAUpP,aAEnB,GAAIoP,EAAUuB,MAAO,CACnB,MAAMA,EAAQ,CACZxY,KAAM,QACNE,MAAO+W,EAAUuB,OAEnB6H,EAAYvY,aAAa8K,KAAK4F,EAChC,CACA,GAAIvB,EAAUc,eAAgB,CAC5B,MAAMA,EAAiB,CACrB/X,KAAM,WACNE,MAAO+W,EAAUc,gBAEnBsI,EAAYvY,aAAa8K,KAAKmF,EAChC,CAKA,GAJAsI,EAAYvY,aAAa8K,KAAK2F,GAC9B8H,EAAYxe,GAAKiJ,GACjByP,EAAWE,OAAS4F,EAEhBvV,GAAW,CACbuV,EAAYxe,GAAK,KACjBwe,EAAYpE,WAAa9C,EACzB,MAAM/V,QAAiB3J,KAAMgnB,IAAI,GAAD/mB,OAC3BC,GAAO,YAAAD,OAAWoR,IACrBuV,EACA,CAAEzmB,QAAS,CAAEC,cAAc,UAADH,OAAYZ,aAElC0C,GAAYklB,iBAClB5T,IAAMC,QAAQ,gCACd7B,GAAU,GACVkH,EAAQQ,KAAK,+BAAgC,CAC3CjS,WAAYyC,EAAStJ,MAEzB,KAAO,CACL,MAAMsJ,QAAiB3J,KAAMoT,KAAK,GAADnT,OAAIC,GAAO,WAAW0mB,EAAa,CAClEzmB,QAAS,CAAEC,cAAc,UAADH,OAAYZ,aAEhC0C,GAAYklB,iBAClB5T,IAAMC,QAAQ,iCACd7B,GAAU,GACVkH,EAAQQ,KAAK,+BAAgC,CAC3CjS,WAAYyC,EAAStJ,MAEzB,CACF,CAAE,MAAOkQ,GAEP,GADAkB,GAAU,GACNlB,EAAM5G,UAAY4G,EAAM5G,SAAStJ,KAAM,CACzC,IAAImV,EACFjF,EAAM5G,SAAStJ,KAAKoV,UACqB,KAAzClF,EAAM5G,SAAStJ,KAAKoV,SAASC,QACzBnF,EAAM5G,SAAStJ,KAAKoV,SAASC,QAC7B,yCAEJnF,EAAM5G,SAAStJ,KAAKoV,UACqB,KAAzClF,EAAM5G,SAAStJ,KAAKoV,SAASC,SAC7BnF,EAAM5G,SAAStJ,KAAKoV,UACkC,KAAtDlF,EAAM5G,SAAStJ,KAAKoV,SAASyR,UAAU,GAAGxR,QAE1CrC,IAAM9C,MACJA,EAAM5G,SAAStJ,KAAKoV,SAASC,QAC3B,MACAnF,EAAM5G,SAAStJ,KAAKoV,SAASyR,UAAU,GAAGzhB,MAC1C,IACA8K,EAAM5G,SAAStJ,KAAKoV,SAASyR,UAAU,GAAGxR,QAC5C,CAAEf,SAAUtB,IAAM8T,SAASC,gBAG7B/T,IAAM9C,MAAMiF,EAAc,CACxBb,SAAUtB,IAAM8T,SAASC,eAG/B,MACE/T,IAAM9C,MAAM,4CAA6C,CACvDoE,SAAUtB,IAAM8T,SAASC,eAG/B,CACF,GAwjCY1hB,OAAQ2Z,EACR7L,SAAUhC,EACVlK,MAAO,CAAEC,gBAAiB,UAAWQ,WAAY,UAAW3C,SAE1DoM,EAGA/O,eAAA,QAAM6E,MAAO,CAAEiD,cAAe,cAAenF,SAAC,cAF9C3C,eAAA,QAAM6E,MAAO,CAAEiD,cAAe,cAAenF,SAAC,WAMlD3C,eAACoQ,KAAS,CACRxL,QAAQ,YACRa,UAAW6E,EAAQsD,OACnBhG,UAAW5H,eAACgR,KAAU,IACtBnM,MAAO,CAAEC,gBAAiB,WAC1BiI,QAjjCO6X,KACnB1O,EAAQQ,KAAK,CAAEpS,SAAU,KAAM,EAgjCG3B,SAEtB3C,eAAA,QAAM6E,MAAO,CAAEiD,cAAe,aAAc3C,MAAO,QAASxC,SAAC,sBAQvE+B,gBAAC4K,KAAK,CACJkD,KAAMwM,GACNvP,OAAQA,GACRhK,UAAU,OACVR,KAAK,KACL,kBAAgB,gCAChBwN,UAAQ,EACRC,SAAS,SAAQ/P,SAAA,CAEjB3C,eAACsP,KAAMqD,OAAM,CAAAhQ,SACX3C,eAACsP,KAAMsD,MAAK,CAACjN,GAAG,gCAA+BhD,SAAC,oBAIlD3C,eAACsP,KAAMnH,KAAI,CAAAxF,SACT3C,eAAA,MAAA2C,SAAI,uCAEN3C,eAACsP,KAAMuD,OAAM,CAAAlQ,SACX3C,eAACkF,KAAM,CACL6H,QAAS0C,GACT5K,MAAO,CAAEC,gBAAiB,UAAWK,MAAO,QAASxC,SACtD,eAKJ,E,oBCx0DQ,SAASkiB,KACtB,OACE7kB,eAAC8kB,eAAM,CAAAniB,SACL+B,gBAACqgB,KAAmB,CAACC,OAAQ1lB,GAAYqD,SAAA,CACvC+B,gBAAA,OAAA/B,SAAA,CACE3C,eAACga,IAAc,IACftV,gBAACugB,SAAM,CAAAtiB,SAAA,CACL3C,eAACklB,QAAK,CAACC,KAAK,mBAAkBxiB,SAC5B3C,eAAColB,GAAW,MAEdplB,eAACklB,QAAK,CAACC,KAAK,gCAA+BxiB,SACzC3C,eAAC0a,GAAgB,MAEnB1a,eAACklB,QAAK,CAACC,KAAK,+BAA8BxiB,SACxC3C,eAACqlB,GAAa,MAEhBrlB,eAACklB,QAAK,CAACC,KAAK,oBAAmBxiB,SAC7B3C,eAACslB,GAAmB,MAGtBtlB,eAACklB,QAAK,CAACC,KAAK,IAAGxiB,SACb3C,eAACuH,GAAI,YAIXvH,eAACulB,sBAAkB,CAACC,eAAe,QAI3C,CCjCeC,OAZSC,IAClBA,GAAeA,aAAuBC,UACxC,+BAAqBxW,MAAK7R,IAAkD,IAAjD,OAAEsoB,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS1oB,EACpEsoB,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAY,GAExB,E,UCTF,IAAIO,GAAY,MAET,MAAMC,GAAc,CAC1B,CACCld,WAAY,UACZmd,QAAS,QACTC,OAAQ,WACRC,SAAU,UACVC,YAAa,UACbC,UAAW,UACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBV,UAAWA,IAEZ,CACCjd,WAAY,UACZmd,QAAS,QACTC,OAAQ,WACRjc,QAAS,UACTkc,SAAU,UACVC,YAAa,UACbC,UAAW,UACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBV,UAAWA,IAEX,CACAjd,WAAY,UACZmd,QAAS,QACTC,OAAQ,WACRE,YAAa,WACbD,SAAU,UACVE,UAAW,WACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBxc,QAAS,WACT8b,UAAWA,IAEZ,CAECjd,WAAY,UACZmd,QAAS,OACTC,OAAQ,WACRC,SAAU,UACVC,YAAa,UACbC,UAAW,UACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBxc,QAAS,UACT8b,UAAWA,IAEZ,CAECjd,WAAY,UACZmd,QAAS,QACTC,OAAQ,WACRE,YAAa,WACbD,SAAU,UACVG,aAAc,OACdD,UAAW,UACXE,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBxc,QAAS,WACT8b,UAAWA,IAGZ,CAECjd,WAAY,UACZmd,QAAS,QACTC,OAAQ,aACRE,YAAa,UACbD,SAAU,UACVE,UAAW,UACXC,aAAc,SACdC,gBAAiB,SACjBC,eAAgB,QAChBC,gBAAiB,OACjBxc,QAAS,UACT8b,UAAWA,KCrFAW,GAAeC,0BA0RbC,OAxRehnB,IAC7B,MAAOinB,EAAcC,GAAmBplB,mBAAS,CAAEoC,MAAO,OAAQijB,MAAO,UAClEC,EAAiBC,GAAsBvlB,mBAAS,CAAEoC,MAAO,QAASijB,MAAO,WACtEG,EAAgBC,GAAqBzlB,mBAAS,CAAEoC,MAAO,QAASijB,MAAO,WACvEK,EAAeC,GAAoB3lB,mBAAS,CAAEoC,MAAO,WAAYijB,MAAO,cAC3EhB,EAAWuB,GAAgB5lB,mBAAS,CAAEoC,MAAO,MAAOijB,MAAO,SAC3DQ,EAAcC,GAAmB9lB,mBAAS,YAC1C+lB,EAAiBC,GAAsBhmB,mBAAS,YAChDimB,EAAYC,GAAiBlmB,mBAAS,YACtCmmB,EAAcC,GAAmBpmB,mBAAS,YAC1CqmB,EAAWC,GAAgBtmB,oBAAS,IACpCumB,EAAYC,GAAiBxmB,oBAAS,IACtC+R,EAAY0U,GAAiBzmB,mBAAS,CAAEoC,MAAO,QAASijB,MAAO,WAC/DqB,EAAoBC,GAAyB3mB,mBAAS,CAACoC,MAAO,aAAcijB,MAAO,eACjFuB,EAAOC,SAASC,cAAc,SAC7BC,EAAaC,GAAkBhnB,mBAAS,IACxCinB,EAAcC,GAAmBlnB,mBAAS,GA4D7CmnB,EAAsBrjB,IAC7BgiB,EAAgBhiB,GACb8iB,EAAKQ,aAAa,eAAgBtjB,EAAK,EAEnCujB,EAAyBvjB,IAC7BkiB,EAAmBliB,GACnB8iB,EAAKQ,aAAa,oBAAqBtjB,EAAK,EAExCwjB,EAAoBxjB,IACxBoiB,EAAcpiB,GACd8iB,EAAKQ,aAAa,gBAAiBtjB,EAAK,EAEpCyjB,EAAsBzjB,IAC1BsiB,EAAgBtiB,GAChB8iB,EAAKQ,aAAa,iBAAkBtjB,EAAK,EAErC0jB,EAAwB1jB,IAC5ByhB,EAAmBzhB,GACnB8iB,EAAKQ,aAAa,wBAAyBtjB,EAAK1B,MAAM,EAElDqlB,EAAyB3jB,IAC7B8hB,EAAa9hB,GACb8iB,EAAKQ,aAAa,YAAatjB,EAAK1B,OACpC,IAAIslB,EAAOb,SAASC,cAAc,QAClCY,EAAKN,aAAa,MAAOtjB,EAAK1B,OAC9BslB,EAAK7jB,UAAYC,EAAK1B,KAAK,EAEvBulB,EAAuB7jB,IACR,eAAfA,EAAK1B,OACoB,YAAvB+iB,EAAa/iB,OACfujB,EAAiB7hB,GACjB8iB,EAAKQ,aAAa,cAAetjB,EAAK1B,OACtCgjB,EAAgB,CAAEhjB,MAAO,OAAQijB,MAAO,SACxCuB,EAAKQ,aAAa,qBAAsB,UAM1CzB,EAAiB7hB,GACjB8iB,EAAKQ,aAAa,cAAetjB,EAAK1B,OACxC,EAEIwlB,EAAsB9jB,IACE,eAAxB4hB,EAActjB,OACG,YAAf0B,EAAK1B,MACPylB,MAAM,yDAORzC,EAAgBthB,GAChBwiB,EAA4B,eAAfxiB,EAAK1B,MAAyB,WAAa,IACxDwkB,EAAKQ,aAAa,qBAAsBtjB,EAAK1B,OAC/C,EAGI0lB,EAAuBhkB,IAC3B2hB,EAAkB3hB,GAClB8iB,EAAKQ,aAAa,uBAAwBtjB,EAAK1B,MAAM,EASjD2lB,EAAoBjkB,IACxB8iB,EAAKQ,aAAa,qBAAsBtjB,EAAK1B,OAC7CqkB,EAAc3iB,EAAK,EAGfkkB,EAA2BlkB,IAC/B6iB,EAAsB7iB,GACtB8iB,EAAKQ,aAAa,iBAAkBtjB,EAAK1B,OAC1B,UAAf0B,EAAK1B,OACHwlB,EAAmB,CAAExlB,MAAO,UAAWijB,MAAO,WAAY,EA6E9D,OA7BA1c,qBAAU,KACX,MAAMie,EAAOC,SAASC,cAAc,QACjCF,EAAKQ,aAAa,kBAAmB,WACrCR,EAAKQ,aAAa,qBAAsB,SACxCR,EAAKQ,aAAa,cAAe,YACjCR,EAAKQ,aAAa,eAAgB,WAClCR,EAAKQ,aAAa,oBAAqB,WACvCR,EAAKQ,aAAa,gBAAiB,WACnCR,EAAKQ,aAAa,qBAAsB,WACxCR,EAAKQ,aAAa,iBAAkB,WACpCR,EAAKQ,aAAa,eAAgB,WAClCR,EAAKQ,aAAa,wBAAyB,SAC3CR,EAAKQ,aAAa,uBAAwB,SAC1CR,EAAKQ,aAAa,iBAAkB,QACpCR,EAAKQ,aAAa,YAAa,OACjC,IAAIa,EAAeA,KAClBjB,EAAe9rB,OAAOgtB,YACtBhB,EAAgBhsB,OAAOitB,aACvBjtB,OAAOgtB,YAAc,KAAOhtB,OAAOgtB,WAAa,KAC9CtB,EAAKQ,aAAa,qBAAsB,QACxClsB,OAAOgtB,YAAc,IACrBtB,EAAKQ,aAAa,qBAAsB,WACxCR,EAAKQ,aAAa,qBAAsB,OAAO,EAIhD,OAFAa,IACA/sB,OAAOktB,iBAAiB,SAAUH,GAC3B,IAAM/sB,OAAOmtB,oBAAoB,SAAUJ,EAAa,GAC9D,IAGD7pB,eAAC4mB,GAAasD,SAAQ,CACpBlmB,MAAO,CACLwkB,OACA2B,cArNgB,CACpB,CAAEnmB,MAAO,UAAWijB,MAAO,WAC3B,CAAEjjB,MAAO,OAAQijB,MAAO,QACxB,CAAEjjB,MAAO,OAAQijB,MAAO,QACxB,CAAEjjB,MAAO,SAAUijB,MAAO,UAC1B,CAAEjjB,MAAO,UAAWijB,MAAO,WAC3B,CAAEjjB,MAAO,aAAcijB,MAAO,eAgN1BmD,aA1Ne,CACnB,CAAEpmB,MAAO,WAAYijB,MAAO,YAC5B,CAAEjjB,MAAO,aAAcijB,MAAO,eAyN1BoD,iBA/MmB,CACvB,CAAErmB,MAAO,QAASijB,MAAO,SACzB,CAAEjjB,MAAO,OAAQijB,MAAO,SA8MpBC,kBACAoD,gBAzMkB,CACtB,CAAEtmB,MAAO,QAASijB,MAAO,SACzB,CAAEjjB,MAAO,SAAUijB,MAAO,WAwMtBsD,kBAtMoB,CACxB,CAAEvmB,MAAO,aAAcijB,MAAO,cAC9B,CAAEjjB,MAAO,QAASijB,MAAO,SACzB,CAAEjjB,MAAO,OAAQijB,MAAO,SAoMpBuD,kBAjLoB,CACxB,CAAExmB,MAAO,MAAOijB,MAAO,OACvB,CAAEjjB,MAAO,MAAOijB,MAAO,QAgLnBwD,WA9Ka,CACjB,CAAEzmB,MAAO,UAAWijB,MAAO,WAC3B,CAAEjjB,MAAO,SAAUijB,MAAO,UAC1B,CAAEjjB,MAAO,QAASijB,MAAO,SACzB,CAAEjjB,MAAO,WAAYijB,MAAO,aAC5B,CAAEjjB,MAAO,gBAAiBijB,MAAO,kBA0KnCQ,eACME,kBACNgB,cACAE,eACME,qBACAE,wBACAO,qBACAzC,eACAqC,uBACAsB,iBA1NmB,CACvB,CAAE1mB,MAAO,QAASijB,MAAO,SACzB,CAAEjjB,MAAO,SAAUijB,MAAO,WAyNtByC,sBACAtC,iBACAmC,sBACAjC,gBACA+B,wBACAO,0BACA3D,YACA0E,OArNS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,YAuMI9C,aACAqB,mBACAC,qBACApB,eACAE,YACAE,aACAyC,eAhIiBA,KACE,WAAvB7D,EAAa/iB,MACTokB,GAAc,GACdA,GAAc,EAAM,EA8HpBuB,mBACAhW,aACA2U,qBACNuC,aAlHqBA,CAAChiB,EAAMod,KAE7B,IAAI6E,EAAU,CAAC,EAGXC,EAAgB7E,GAAYrd,GAEhC2f,EAAKQ,aAAa,kBAAmB+B,EAAc/hB,YAEnD8hB,EAAQ9mB,MAAQ+mB,EAAc5E,QAC9BwD,EAAiBmB,GAEjBA,EAAQ9mB,MAAQ+mB,EAAc3E,OAC9BmD,EAAoBuB,GAGpB/B,EAAmBgC,EAAc5gB,SAGjC8e,EAAsB8B,EAAczE,aAGpC4C,EAAiB6B,EAAc1E,UAE/ByE,EAAQ9mB,MAAQ+mB,EAAcvE,aAC9BgD,EAAmBsB,GAGnB3B,EAAmB4B,EAAcxE,WAEjCuE,EAAQ9mB,MAAQ+mB,EAActE,gBAC9B2C,EAAqB0B,GAErBA,EAAQ9mB,MAAQ+mB,EAAcrE,eAC9BgD,EAAoBoB,GAEpBA,EAAQ9mB,MAAQ+mB,EAAcpE,gBAC9BiD,EAAwBkB,GAGxBA,EAAQ9mB,MAAQiiB,EAChBoD,EAAsByB,EAAQ,GA0E5BnoB,SAEI7C,EAAM6C,UACe,EChR5BqoB,IAAS9nB,OACRlD,eAACwR,IAAMyZ,WAAU,CAAAtoB,SAEN3C,eAACkrB,KAAmB,CAAAvoB,SAChB3C,eAACmrB,KAAa,CAACC,SAAS,IAAGzoB,SACvB3C,eAAC4mB,GAAY,CAAAjkB,SACT3C,eAAC6kB,GAAG,YAM1B4D,SAAS4C,eAAe,SAE1B5F,I","file":"static/js/main.51a7ea34.chunk.js","sourcesContent":["export const getPatientDataKey = \"GET_PATIENT_DATA\"\r\nexport const getVaccinatedPatientDataKey = \"GET_VACCINATED_PATIENT_DATA\"","export const url = process.env.NODE_ENV === \"development\"\r\n  ? \"http://localhost:8383/api/v1/\"\r\n  : \"/api/v1/\";\r\nexport const token = process.env.NODE_ENV === \"development\"\r\n  ? \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzA3MjQxMTYxfQ.9tYBvRbVBZZ24WETDZjNH_mcTP0gkQIV9y_bKIOyCeQdjy3UTym9QhGzyIYBgn5b27sQ1OIVBuaO-N1Aisjmdw\"\r\n  : new URLSearchParams(window.location.search).get(\"jwt\");\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"./../../api\";\r\n\r\nexport const fetchAllPatients = async ({ page, pageSize, search }) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}patient?pageSize=${pageSize}&pageNo=${page}&searchParam=${search}`,\r\n    { headers: { Authorization: `Bearer ${token}` } }\r\n  );\r\n  return response.data;\r\n};\r\n","export const calculateAge = (dob, noText) => {\r\n    const today = new Date();\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n\r\n    if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n      age_now--;\r\n    }\r\n\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  export const calculateAgeNoText = (dob) => {\r\n    const today = new Date();\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n\r\n    if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n      age_now--;\r\n    }\r\n\r\n    if (age_now === 0) {\r\n      return m;\r\n    }\r\n    return age_now;\r\n  };","import { QueryClient } from \"react-query\";\r\n\r\n\r\nconst queryClientSettings = {\r\n    defaultOptions: {\r\n      queries: {\r\n        retry: 2,\r\n        refetchOnMount: true,\r\n        refetchOnWindowFocus: true,\r\n        refetchOnReconnect: true,\r\n        cacheTime: Infinity,\r\n        refetchInterval: 3.6e6, //1 hour\r\n        refetchIntervalInBackground: true,\r\n        suspense: false,\r\n        staleTime: Infinity,\r\n      },\r\n      mutations: {\r\n        retry: 2,\r\n      },\r\n    },\r\n  };\r\n  \r\n  export const queryClient = new QueryClient(queryClientSettings);","import React, { useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getPatientDataKey } from \"../../utils/queryKeys\";\r\nimport { fetchAllPatients } from \"../../services/fetchAllPatients\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport { calculateAge } from \"../../utils/calculateAge\";\r\nimport { queryClient } from \"../../utils/queryClient\";\r\n\r\n//Date Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst Patients = (props) => {\r\n  const [showPPI, setShowPPI] = useState(true);\r\n  const [query, setQueryParams] = useState({\r\n    page: 0,\r\n    pageSize: 10,\r\n    search: \"\",\r\n  });\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  const prefetchNextPage = async () => {\r\n    const nextPage = query.page + 1;\r\n    // Use the same query key as in the useQuery hook\r\n    const queryKey = [getPatientDataKey, { ...query, page: nextPage }];\r\n    await queryClient.prefetchQuery(queryKey, () =>\r\n      fetchAllPatients({ ...query, page: nextPage })\r\n    );\r\n  };\r\n\r\n  const { data, isLoading, refetch } = useQuery(\r\n    [getPatientDataKey, query],\r\n    () => fetchAllPatients(query),\r\n    {\r\n      onSuccess: () => prefetchNextPage(),\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient\"\r\n        columns={[\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"firstName\",\r\n            hidden: showPPI,\r\n            render: (row) =>\r\n              row?.firstName + \" \" + row?.surname || row?.otherName || \"\",\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"participantId\",\r\n            filtering: false,\r\n            render: (row) => {\r\n              const identifiers = row?.identifier?.identifier?.filter((obj) => obj?.type === \"HospitalNumber\")\r\n              const currentIdentifier = identifiers.pop();\r\n              \r\n            return  (currentIdentifier?.value !== null ? currentIdentifier.value : \"\")\r\n            },\r\n          },\r\n          {\r\n            title: \"Sex\",\r\n            field: \"gender\",\r\n            filtering: false,\r\n            render: (row) => (row?.gender !== null ? row.gender.display : \"\"),\r\n          },\r\n          {\r\n            title: \"Age\",\r\n            field: \"dateOfBirth\",\r\n            filtering: false,\r\n            render: (row) => calculateAge(row?.dateOfBirth),\r\n          },\r\n\r\n          {\r\n            title: \"Actions\",\r\n            field: \"actions\",\r\n            filtering: false,\r\n            render: (row) => (\r\n              <div>\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/patient-vaccination-history\",\r\n                    route: \"patient-vaccination-history\",\r\n                    state: { patientObj: row },\r\n                  }}\r\n                >\r\n                  <ButtonGroup\r\n                    variant=\"contained\"\r\n                    aria-label=\"split button\"\r\n                    style={{\r\n                      backgroundColor: \"rgb(153, 46, 98)\",\r\n                      height: \"30px\",\r\n                      width: \"215px\",\r\n                    }}\r\n                    size=\"large\"\r\n                  >\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      aria-label=\"select merge strategy\"\r\n                      aria-haspopup=\"menu\"\r\n                      style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                    >\r\n                      <MdDashboard />\r\n                    </Button>\r\n                    <Button style={{ backgroundColor: \"rgb(153, 46, 98)\" }}>\r\n                      <span\r\n                        style={{\r\n                          fontSize: \"10px\",\r\n                          color: \"#fff\",\r\n                          fontWeight: \"bolder\",\r\n                        }}\r\n                      >\r\n                        Patient Dashboard\r\n                      </span>\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </Link>\r\n              </div>\r\n            ),\r\n          },\r\n        ]}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n        data={data?.records || []}\r\n        totalCount={data?.totalRecords}\r\n        isLoading={isLoading}\r\n        page={data?.currentPage}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          paging: true,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: query?.pageSize || 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        onChangePage={(newPage) => {\r\n          setQueryParams((prevFilters) => ({ ...prevFilters, page: newPage }));\r\n          refetch(query);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"./../../api\";\r\n\r\nexport const fetchAllCovidVaccinatedPatients = async ({ page, pageSize, search }) => {\r\n \r\n  const response = await axios.get(\r\n    `${baseUrl}covid/vaccinated-patients?pageSize=${pageSize}&pageNo=${page}&searchParam=${search}`,\r\n    { headers: { Authorization: `Bearer ${token}` } }\r\n  );\r\n\r\n  return response?.data;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport { getVaccinatedPatientDataKey } from \"../../utils/queryKeys\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchAllCovidVaccinatedPatients } from \"../../services/fetchAllCovidVaccinatedPatients\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport { calculateAge } from \"../../utils/calculateAge\";\r\nimport { queryClient } from \"../../utils/queryClient\";\r\n\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst Patients = (props) => {\r\n  const [showPPI, setShowPPI] = useState(true);\r\n  const [query, setQueryParams] = useState({\r\n    page: 0,\r\n    pageSize: 10,\r\n    search: \"\",\r\n  });\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  const prefetchNextPage = async () => {\r\n    const nextPage = query.page + 1;\r\n    // Use the same query key as in the useQuery hook\r\n    const queryKey = [\r\n      getVaccinatedPatientDataKey,\r\n      { ...query, page: nextPage },\r\n    ];\r\n    await queryClient.prefetchQuery(queryKey, () =>\r\n      fetchAllCovidVaccinatedPatients({ ...query, page: nextPage })\r\n    );\r\n  };\r\n\r\n  const { data, isLoading, refetch } = useQuery(\r\n    [getVaccinatedPatientDataKey, query],\r\n    () => fetchAllCovidVaccinatedPatients(query),\r\n    {\r\n      onSuccess: () => prefetchNextPage(),\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient\"\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n        columns={[\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"firstName\",\r\n            hidden: showPPI,\r\n            render: (row) =>{\r\n            const lastName = row?.lastName || row?.otherName || row?.surname || \"\";\r\n              return (row?.firstName + \" \" + lastName)\r\n            }\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"participantId\",\r\n            filtering: false,\r\n          },\r\n          {\r\n            title: \"Sex\",\r\n            field: \"gender\",\r\n            filtering: false,\r\n            render: (row) => (row?.gender !== null ? row.gender.display : \"\"),\r\n          },\r\n          {\r\n            title: \"Age\",\r\n            field: \"dob\",\r\n            filtering: false,\r\n            render: (row) => calculateAge(row?.dob),\r\n          },\r\n\r\n          {\r\n            title: \"Vaccination Status\",\r\n            field: \"vaccinationStatus\",\r\n            filtering: false,\r\n            render: (row) => (\r\n              <Label color=\"blue\" size=\"mini\">\r\n                {row?.vaccinationStatus || \"\"}\r\n              </Label>\r\n            ),\r\n          },\r\n          {\r\n            title: \"Actions\",\r\n            field: \"actions\",\r\n            filtering: false,\r\n            render: (row) => (\r\n              <div>\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/patient-vaccination-history\",\r\n                    state: { patientObj: row },\r\n                  }}\r\n                >\r\n                  <ButtonGroup\r\n                    variant=\"contained\"\r\n                    aria-label=\"split button\"\r\n                    style={{\r\n                      backgroundColor: \"rgb(153, 46, 98)\",\r\n                      height: \"30px\",\r\n                      width: \"215px\",\r\n                    }}\r\n                    size=\"large\"\r\n                  >\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      aria-label=\"select merge strategy\"\r\n                      aria-haspopup=\"menu\"\r\n                      style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                    >\r\n                      <MdDashboard />\r\n                    </Button>\r\n                    <Button style={{ backgroundColor: \"rgb(153, 46, 98)\" }}>\r\n                      <span\r\n                        style={{\r\n                          fontSize: \"10px\",\r\n                          color: \"#fff\",\r\n                          fontWeight: \"bolder\",\r\n                        }}\r\n                      >\r\n                        Patient Dashboard\r\n                      </span>\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </Link>\r\n              </div>\r\n            ),\r\n          },\r\n        ]}\r\n        data={data?.records || []}\r\n        totalCount={data?.totalRecords}\r\n        isLoading={isLoading}\r\n        page={data?.currentPage}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          paging: true,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: query?.pageSize || 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        onChangePage={(newPage) => {\r\n          setQueryParams((prevFilters) => ({ ...prevFilters, page: newPage }));\r\n          refetch(query);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport PatientList from \"./Patient/PatientList\";\r\nimport PatientVaccinatedList from \"./Patient/PatientVaccinatedList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n  const [key, setKey] = useState(\"home\");\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>Immunization</h4>\r\n          </li>\r\n        </ol>\r\n\r\n        <div>\r\n          <Link to={\"register-patient\"}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\" float-end mb-10\"\r\n              startIcon={<FaUserPlus size=\"10\" />}\r\n              style={{ backgroundColor: \"#014d88\" }}\r\n            >\r\n              <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <Row style={{ marginTop: \"20px\" }}>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">\r\n                    <PatientList />\r\n                  </Tab>\r\n                  <Tab eventKey=\"vaccinated\" title=\"All Vaccinated Patients\">\r\n                    <PatientVaccinatedList />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj;\r\n  \r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n  const getPhoneNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers.contactPoint.find(\r\n      (obj) => obj.type === \"phone\"\r\n    );\r\n    return phoneNumber ? phoneNumber.value : \"\";\r\n  };\r\n  const getAddress = (identifier) => {\r\n    const identifiers = identifier;\r\n    const address = identifiers.address.find((obj) => obj.city);\r\n    const houseAddress =\r\n      address && address.line[0] !== null ? address.line[0] : \"\";\r\n    const landMark =\r\n      address && address.city && address.city !== null ? address.city : \"\";\r\n    return address ? houseAddress + \" \" + landMark : \"\";\r\n  };\r\n\r\n  const getLastName = (obj) => {\r\n    if (obj && obj.lastName) {\r\n      return obj.lastName;\r\n    } else if (obj && obj.surname) {\r\n      return obj.surname;\r\n    } else if (obj && obj.otherName) {\r\n      return obj.otherName;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const getHospitalNumber = (obj) => {\r\n    if (obj && obj.participantId) {\r\n      return obj.participantId\r\n    }else {\r\n    \r\n      const identifiers = obj?.identifier?.identifier?.filter((obj) => obj?.type === \"HospitalNumber\") || []\r\n      const currentIdentifier = identifiers?.pop?.() || null;\r\n      \r\n    return  (currentIdentifier?.value !== null ? currentIdentifier.value : \"\")\r\n    }\r\n  \r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Row className={\"mt-1\"}>\r\n                <Col md={12} className={classes.root2}>\r\n                  <b style={{ fontSize: \"25px\", color: \"rgb(153, 46, 98)\" }}>\r\n                    {patientObj.firstName + \" \" + getLastName(patientObj)}\r\n                  </b>\r\n                  <Link to={\"/\"}>\r\n                    <ButtonMui\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className=\" float-end ms-2 mr-2 mt-2\"\r\n                      //startIcon={<FaUserPlus size=\"10\"/>}\r\n                      startIcon={<TiArrowBack />}\r\n                      style={{\r\n                        backgroundColor: \"rgb(153, 46, 98)\",\r\n                        color: \"#fff\",\r\n                        height: \"35px\",\r\n                      }}\r\n                    >\r\n                      <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                    </ButtonMui>\r\n                  </Link>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Patient ID :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getHospitalNumber(patientObj)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    Date Of Birth :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {patientObj?.dob || patientObj?.dateOfBirth}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Age :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {calculate_age(\r\n                        moment(\r\n                          patientObj.dob || patientObj?.dateOfBirth\r\n                        ).format(\"DD-MM-YYYY\")\r\n                      )}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Gender :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {patientObj.gender !== null\r\n                        ? patientObj.gender.display\r\n                        : \"\"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Phone Number :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getPhoneNumber(patientObj.contactPoint)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Address :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getAddress(patientObj.address)}{\" \"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </ExpansionPanelSummary>\r\n        <Divider />\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { calculateAgeNoText } from \"../../utils/calculateAge\";\r\n\r\nfunction SubMenu(props) {\r\n  const patientProp = props.patientObj ? props.patientObj : {};\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [activeItem, setActiveItem] = useState(\"recent-history\");\r\n  const [patientObj] = useState(patientProp);\r\n  const [patientAge] = useState(\r\n    calculateAgeNoText(patientObj?.dob || patientObj?.dateOfBirth) || 0\r\n  );\r\n\r\n  const onClickHome = (row) => {\r\n    props.setActiveContent({ ...props.activeContent, route: \"recent-history\" });\r\n  };\r\n\r\n  const onClickImmunization = (row) => {\r\n    setActiveItem(\"immunization\");\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: \"routine-immunization-patient\",\r\n    });\r\n  };\r\n\r\n  const onClickTetanus = (row) => {\r\n    setActiveItem(\"tetanus\");\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: \"tetanus-patient\",\r\n    });\r\n  };\r\n\r\n  const onClickCovid = (row) => {\r\n    setActiveItem(\"covid\");\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: \"covid-patient\",\r\n    });\r\n  };\r\n\r\n  const loadPatientVaccinationHistory = () => {\r\n    setActiveItem(\"history\");\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: \"vaccination-history\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"20px\" }}>\r\n      <Menu size=\"large\" color={\"black\"} inverted>\r\n        <Menu.Item onClick={() => onClickHome()}> Home</Menu.Item>\r\n        <Menu.Item onClick={() => onClickImmunization()}>\r\n          {\" \"}\r\n          Routine Immunization\r\n        </Menu.Item>\r\n        <Menu.Item onClick={() => onClickTetanus()}> Tetanus </Menu.Item>\r\n        {patientAge >= 5 && (\r\n          <Menu.Item onClick={onClickCovid}> COVID-19 </Menu.Item>\r\n        )}\r\n        <Menu.Item onClick={() => loadPatientVaccinationHistory(patientObj)}>\r\n          History\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        COVID_ADVERSE_EFFECT();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccination Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from \"semantic-ui-react\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Vaccination from \"./../Vaccination/AddViccination\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n  const [vacinationList, setVaccinationList] = useState([]);\r\n  const patientObj = props && props.patientObj ? props.patientObj : [];\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [openDeleteModal, setOpenDeleteModal] = React.useState(false);\r\n  const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n  const [record, setRecord] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n  useEffect(() => {\r\n    patients();\r\n  });\r\n\r\n  ///GET LIST OF Patient's Vaccinations\r\n  const patients = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}covid/vaccinations/patients/${patientObj.id}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setVaccinationList(response.data);\r\n    } catch (error) {\r\n      // Handle the error\r\n    }\r\n  }, [patientObj.id, setVaccinationList]);\r\n\r\n  const LoadEditModal = (row) => {\r\n    setRecord(row);\r\n    toggle();\r\n  };\r\n  const LoadDeleteModal = (row) => {\r\n    toggleDeleteModal();\r\n    setRecord(row);\r\n  };\r\n  console.log(record);\r\n  const LoadDeletePage = () => {\r\n    setSaving(true);\r\n    axios\r\n      .delete(`${baseUrl}covid/vaccinations/${record.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        patients();\r\n        toggleDeleteModal();\r\n        setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <MaterialTable\r\n            icons={tableIcons}\r\n            title=\"Patient Vaccination History \"\r\n            columns={[\r\n              { title: \"Vaccine\", field: \"vaccine\", filtering: false },\r\n              {\r\n                title: \"Vaccine Date\",\r\n                field: \"vaccineDate\",\r\n              },\r\n\r\n              { title: \"Dose Number\", field: \"doseNumber\", filtering: false },\r\n              { title: \"Location\", field: \"location\", filtering: false },\r\n              { title: \"Batch Number\", field: \"batchNumber\", filtering: false },\r\n              {\r\n                title: \"Adverse Effect \",\r\n                field: \"adverseEffect\",\r\n                filtering: false,\r\n              },\r\n              {\r\n                title: \"Vaccination Facility\",\r\n                field: \"vaccinationFacility\",\r\n                filtering: false,\r\n              },\r\n              { title: \"Actions\", field: \"actions\", filtering: false },\r\n            ]}\r\n            data={vacinationList.map((row) => ({\r\n              vaccine: row.vaccineName,\r\n              vaccineDate: row.vaccineDate,\r\n              batchNumber: row.batchNumber,\r\n              doseNumber: row.doseNumber,\r\n              location: row.location,\r\n              vaccinationFacility: row.vaccinationFacility,\r\n              adverseEffect: row.adverseEffect,\r\n              actions: (\r\n                <div>\r\n                  <Menu.Menu position=\"right\">\r\n                    <Menu.Item>\r\n                      <Button\r\n                        style={{\r\n                          backgroundColor: \"rgb(153,46,98)\",\r\n                          color: \"#fff\",\r\n                        }}\r\n                        primary\r\n                      >\r\n                        <Dropdown item text=\"Action\">\r\n                          <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                            <Dropdown.Item onClick={() => LoadEditModal(row)}>\r\n                              <IconMenu name=\"edit\" />\r\n                              Edit\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => LoadDeleteModal(row)}>\r\n                              {\" \"}\r\n                              <IconMenu name=\"trash\" /> Delete\r\n                            </Dropdown.Item>\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n                      </Button>\r\n                    </Menu.Item>\r\n                  </Menu.Menu>\r\n                </div>\r\n              ),\r\n            }))}\r\n            options={{\r\n              headerStyle: {\r\n                backgroundColor: \"#014d88\",\r\n                color: \"#fff\",\r\n              },\r\n              searchFieldStyle: {\r\n                width: \"200%\",\r\n                margingLeft: \"250px\",\r\n              },\r\n              filtering: false,\r\n              exportButton: false,\r\n              searchFieldAlignment: \"left\",\r\n              pageSizeOptions: [10, 20, 100],\r\n              pageSize: 10,\r\n              debounceInterval: 400,\r\n            }}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <Vaccination\r\n        toggle={toggle}\r\n        showModal={modal}\r\n        patientObj={props.patientObj}\r\n        loadPatients={patients}\r\n        records={record}\r\n      />\r\n      <Modal\r\n        show={openDeleteModal}\r\n        toggle={toggleDeleteModal}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete -{\" \"}\r\n            <b>{record && record.batchNumber}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? \"Yes\" : \"Deleting...\"}\r\n          </Button>\r\n          <Button\r\n            onClick={toggleDeleteModal}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientVaccinationHistory;\r\n","import * as moment from \"moment\";\r\n\r\nexport const determineClientImmunization = (dateOfBirth) => {\r\n  const startDate = moment(dateOfBirth);\r\n  const endDate = moment();\r\n  const clientAgeInWeeks = endDate.diff(startDate, \"weeks\");\r\n  const clientAgeInMonths = endDate.diff(startDate, \"months\");\r\n  const clientAgeInYears = endDate.diff(startDate, \"years\");\r\n\r\n  if (clientAgeInWeeks < 6) {\r\n    //if client is less than six weeks\r\n    return \"IMMUNIZATION_VACCINE_AT_BIRTH\";\r\n  } else if (clientAgeInWeeks >= 6 && clientAgeInWeeks < 10) {\r\n    // if client is 6 weeks or above but still less than 10 weeks\r\n    return \"IMMUNIZATION_VACCINE_AT_6 WEEKS\";\r\n  } else if (clientAgeInWeeks >= 10 && clientAgeInWeeks < 14) {\r\n    // if client is 10 weeks or above but still less than 14 weeks\r\n    return \"IMMUNIZATION_VACCINE_AT_10 WEEKS\";\r\n  } else if (clientAgeInWeeks >= 14 && clientAgeInMonths < 6) {\r\n    // if client is 14 weeks or above but still less than 6 months\r\n    return \"IMMUNIZATION_VACCINE_AT_14 WEEKS\";\r\n  } else if (clientAgeInMonths >= 6 && clientAgeInMonths < 9) {\r\n    // if client is 6 months or above but still less than 9 months\r\n    return \"IMMUNIZATION_VACCINE_AT_6 MONTHS\";\r\n  } else if (clientAgeInMonths >= 9 && clientAgeInMonths < 15) {\r\n    // if client is 9 months or above but still less than 15 months\r\n    return \"IMMUNIZATION_VACCINE_AT_9 MONTHS\";\r\n  } else if (clientAgeInMonths >= 15 && clientAgeInYears < 9) {\r\n    // if client is 15 months or above but still less than 9 years\r\n    return \"IMMUNIZATION_VACCINE_AT_15 MONTHS\";\r\n  } else if (clientAgeInYears >= 9) {\r\n    // if client is 9 years or above\r\n    return \"IMMUNIZATION_VACCINE_AT_9 YEARS\";\r\n  }\r\n  return \"ROUTINE_IMMUNIZATION_VACCINE_TYPE\";\r\n};\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const fetchRoutineImmunizationVaccine = async (code) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}application-codesets/v2/${code}`,\r\n    { headers: { Authorization: `Bearer ${token}` } }\r\n  );\r\n\r\n  return response?.data;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form, Label } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useQuery } from \"react-query\";\r\n// import { queryClient } from \"../../utils/queryClient\";\r\nimport { determineClientImmunization } from \"../../utils/determineClientRoutineImmunizationVaccine\";\r\nimport { fetchRoutineImmunizationVaccine } from \"../../services/fetchRoutineImmunizationVaccine\";\r\nimport { useImmunizationFormValidationSchema } from \"./useImmunizationFormSchema\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Immunization = (props) => {\r\n  const classes = useStyles();\r\n  const clientDateOfBirth =\r\n    props?.patientObj?.dateOfBirth || props?.patientObj?.dob;\r\n\r\n  const [queryKey] = useState(determineClientImmunization(clientDateOfBirth));\r\n\r\n  const { data: vaccines, isLoading } = useQuery([queryKey], () =>\r\n    fetchRoutineImmunizationVaccine(queryKey)\r\n  );\r\n\r\n  const { data: missedVaccine, isLoading: isLoadingMissedVaccine } = useQuery(\r\n    [\"ROUTINE_IMMUNIZATION_VACCINE_TYPE\"],\r\n    () => fetchRoutineImmunizationVaccine(\"ROUTINE_IMMUNIZATION_VACCINE_TYPE\")\r\n  );\r\n  const { formik } = useImmunizationFormValidationSchema();\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <Card className={classes.root} style={{ marginTop: 20 }}>\r\n      <CardContent>\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <Form>\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  {\" \"}\r\n                  Routine Immunization\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>\r\n                      Type of vaccine {isLoading && \"Loading vaccine ...\"}\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"vaccineType\"\r\n                      id=\"vaccineType\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.vaccineType}\r\n                    >\r\n                      <option>Select vaccine type</option>\r\n                      {vaccines?.map((vacc) => (\r\n                        <option key={vacc?.id} value={vacc?.id}>\r\n                          {vacc?.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>Detail of vaccine</Label>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      name=\"vaccineDetail\"\r\n                      id=\"vaccineDetail\"\r\n                      style={{\r\n                        height: 150,\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.vaccineDetail}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>Any missed vaccination ?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"missedVaccine\"\r\n                      id=\"missedVaccine\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      onChange={(e) => {\r\n                        formik.setFieldValue(\"missedVaccineType\", null);\r\n                        formik.setFieldValue(\"missedVaccine\", e.target.value);\r\n                      }}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.missedVaccine}\r\n                    >\r\n                      <option>Select option</option>\r\n\r\n                      <option value={\"yes\"}>Yes</option>\r\n                      <option value={\"no\"}>No</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  {formik?.values?.missedVaccine === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-12\">\r\n                      <Label>\r\n                        Enter missed vaccine{\" \"}\r\n                        {isLoadingMissedVaccine && \"Loading vaccine ...\"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"missedVaccineType\"\r\n                        id=\"missedVaccineType\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik?.values?.missedVaccineType}\r\n                      >\r\n                        <option>Select vaccine type</option>\r\n                        {missedVaccine?.map((vacc) => (\r\n                          <option key={vacc?.id} value={vacc?.id}>\r\n                            {vacc?.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n            >\r\n              {!isLoading ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              style={{ backgroundColor: \"#992E62\" }}\r\n              onClick={() =>\r\n                history.push({\r\n                  pathname: \"/\",\r\n                  state: { patientObj: props?.patientObj },\r\n                })\r\n              }\r\n            >\r\n              <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                Cancel\r\n              </span>\r\n            </MatButton>\r\n          </Form>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Immunization;\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const useImmunizationFormValidationSchema = (onSubmit) => {\r\n  const immunizationFormIntialValues = {\r\n    vaccineType: \"\",\r\n    vaccineDetail: \"\",\r\n    missedVaccine: \"\",\r\n    missedVaccineType: \"\",\r\n  };\r\n\r\n  const ImmunizationFormInitialSchema = yup.object({\r\n    vaccineType: yup.string().required(\"This field is required\"),\r\n    vaccineDetail: yup.string().required(\"This field is required\"),\r\n    missedVaccine: yup.string().required(\"This field is required\"),\r\n    missedVaccineType: yup.string().when(\"missedVaccine\", {\r\n      is: (missedVaccineValue) => missedVaccineValue?.toLowerCase() === \"yes\",\r\n      then: yup.string().required(\"This field is required\"),\r\n      otherwise: yup.string(),\r\n    }),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: immunizationFormIntialValues,\r\n    onSubmit,\r\n    validationSchema: ImmunizationFormInitialSchema,\r\n  });\r\n  return { formik };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { Card, Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useTetanusFormValidationSchema } from \"./useTetanusFormValidationSchema\";\r\nimport { fetchRoutineImmunizationVaccine } from \"../../services/fetchRoutineImmunizationVaccine\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Tetanus = (props) => {\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const { data: tetanusVaccines, isLoading } = useQuery(\r\n    [\"TETANUS_VACCINE\"],\r\n    () => fetchRoutineImmunizationVaccine(\"TETANUS_VACCINE\")\r\n  );\r\n\r\n  const handleSubmit = async () => {\r\n    Object.keys(formik?.initialValues).forEach((fieldName) => {\r\n      formik?.setFieldTouched(fieldName, true);\r\n    });\r\n    const errorObj = await formik.validateForm();\r\n    const isValid = Object.keys(errorObj).length === 0;\r\n    console.log(isValid, formik.errors);\r\n  };\r\n\r\n  const { formik } = useTetanusFormValidationSchema(handleSubmit);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <Form>\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Tetanus\r\n                </h5>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Type of vaccine {isLoading && \"Loading vaccine ...\"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"vaccineType\"\r\n                      id=\"vaccineType\"\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik.values?.vaccineType}\r\n                      disable={isLoading}\r\n                    >\r\n                      <option>Select</option>\r\n                      {!isLoading &&\r\n                        tetanusVaccines?.map((vacc) => (\r\n                          <option value={vacc.id} key={vacc?.id}>\r\n                            {vacc?.name || vacc?.display}\r\n                          </option>\r\n                        ))}\r\n                    </Input>\r\n\r\n                    {formik?.touched?.vaccineType &&\r\n                      formik?.errors.vaccineType && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccineType}\r\n                        </span>\r\n                      )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {formik?.values?.vaccineType !== \"\" && (\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Vaccine results\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"vaccineResult\"\r\n                        id=\"vaccineResult\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values?.vaccineResult}\r\n                      />\r\n\r\n                      {formik?.touched?.vaccineResult &&\r\n                        formik?.errors.vaccineResult && (\r\n                          <span className={classes.error}>\r\n                            {formik?.errors.vaccineResult}\r\n                          </span>\r\n                        )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <br />\r\n            <MatButton\r\n              type=\"button\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              onClick={handleSubmit}\r\n              style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n            >\r\n              {!false ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              style={{ backgroundColor: \"#992E62\" }}\r\n              onClick={() => history.push({ pathname: \"/\" })}\r\n            >\r\n              <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                Cancel\r\n              </span>\r\n            </MatButton>\r\n          </Form>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Tetanus;\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const useTetanusFormValidationSchema = (onSubmit) => {\r\n  const tetanusIntialValues = {\r\n    vaccineType: \"\",\r\n    vaccineResult: \"\",\r\n  };\r\n\r\n  const tetanusFormValidationSchema = yup.object({\r\n    vaccineType: yup.string().required(\"This field is required\"),\r\n    \r\n    vaccineResult: yup.string().when(\"vaccineType\", {\r\n      is: (vaccineType) => vaccineType !== \"\",\r\n      then: yup.string().required(\"This field is required\"),\r\n      otherwise: yup.string(),\r\n    }),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: tetanusIntialValues,\r\n    onSubmit,\r\n    validationSchema: tetanusFormValidationSchema,\r\n  });\r\n  return { formik };\r\n};\r\n","import MatButton from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\nimport { FormGroup, Label, Input, Form, Spinner } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { fetchCodesets } from \"../../services/fetchCodeset\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCovidVaccines } from \"../../services/fetchCovidVaccines\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { useCovidFirstVaccinationFormValidationSchema } from \"./covidFirstVaccinationValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst CovidFirstVaccination = () => {\r\n  const classes = useStyles();\r\n\r\n  const { data: covidAdverseEffects } = useQuery(\r\n    [\"GET_CODESETS\", \"COVID_ADVERSE_EFFECT\"],\r\n    () => fetchCodesets(\"COVID_ADVERSE_EFFECT\")\r\n  );\r\n\r\n  const { data: vaccines } = useQuery([\"COVID_VACCINES\"], () =>\r\n    fetchCovidVaccines()\r\n  );\r\n  const history = useHistory();\r\n  const { formik } = useCovidFirstVaccinationFormValidationSchema();\r\n\r\n  const handleSubmit = async () => {\r\n    Object.keys(formik?.initialValues).forEach((fieldName) => {\r\n      formik?.setFieldTouched(fieldName, true);\r\n    });\r\n    const errorObj = await formik.validateForm();\r\n    const isValid = Object.keys(errorObj).length === 0;\r\n    console.log(isValid);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    COVID-19 First Dosage\r\n                  </h5> \r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Do you work in the Health sector ?\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        \r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"workInHealthSector\"\r\n                          id=\"workInHealthSector\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.workInHealthSector}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"YES\">Yes</option>\r\n                          <option value=\"NO\">No</option>\r\n                        </Input>\r\n\r\n                        {formik?.touched?.workInHealthSector &&\r\n                          formik?.errors.workInHealthSector && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.workInHealthSector}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Any known medical condition ?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"knownMedicalCondition\"\r\n                          id=\"knownMedicalCondition\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.knownMedicalCondition}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"YES\">Yes</option>\r\n                          <option value=\"NO\">No</option>\r\n                        </Input>\r\n\r\n                        {formik?.touched?.knownMedicalCondition &&\r\n                          formik?.errors.knownMedicalCondition && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.knownMedicalCondition}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik?.values?.knownMedicalCondition === \"YES\" && (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label for=\"medicalCondition\">\r\n                            Medical conditions{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"medicalCondition\"\r\n                            id=\"medicalCondition\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values?.medicalCondition}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik?.touched?.medicalCondition &&\r\n                            formik?.errors.medicalCondition && (\r\n                              <span className={classes.error}>\r\n                                {formik?.errors.medicalCondition}\r\n                              </span>\r\n                            )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"adverseEffect\">\r\n                          Adverse Effect{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"adverseEffect\"\r\n                          id=\"adverseEffect\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.adverseEffect}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"YES\">Yes</option>\r\n                          <option value=\"NO\">No</option>\r\n                        </Input>\r\n\r\n                        {formik?.touched?.adverseEffect &&\r\n                          formik?.errors.adverseEffect && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.adverseEffect}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik?.values?.adverseEffect === \"YES\" && (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label for=\"adverseEffectOption\">\r\n                            Reaction Type (Adverse Effect){\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"adverseEffectOption\"\r\n                            id=\"adverseEffectOption\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values?.adverseEffectOption}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n\r\n                            {covidAdverseEffects?.map((adverseEffects) => (\r\n                              <option\r\n                                value={adverseEffects?.id}\r\n                                key={adverseEffects?.id}\r\n                              >\r\n                                {adverseEffects?.display}\r\n                              </option>\r\n                            ))}\r\n                          </Input>\r\n\r\n                          {formik?.touched?.adverseEffectOption &&\r\n                            formik?.errors.adverseEffectOption && (\r\n                              <span className={classes.error}>\r\n                                {formik?.errors.adverseEffectOption}\r\n                              </span>\r\n                            )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"vaccineType\">\r\n                          Vaccine <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"vaccineType\"\r\n                          id=\"vaccineType\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.vaccineType}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {vaccines?.map((vaccine) => (\r\n                            <option value={vaccine?.id} key={vaccine?.id}>\r\n                              {vaccine?.name}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n\r\n                        {formik?.touched?.vaccineType &&\r\n                          formik?.errors.vaccineType && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.vaccineType}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"dateOfFirstDosage\">\r\n                          Date of First Dosage{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"dateOfFirstDosage\"\r\n                          id=\"dateOfFirstDosage\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.dateOfFirstDosage}\r\n                        />\r\n                        {formik?.touched?.dateOfFirstDosage &&\r\n                          formik?.errors.dateOfFirstDosage && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.dateOfFirstDosage}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Location <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"location\"\r\n                          id=\"location\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.location}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Facility\">Facility</option>\r\n                          <option value=\"Community\">Community</option>\r\n                        </Input>\r\n\r\n                        {formik?.touched?.location &&\r\n                          formik?.errors.location && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.location}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik?.values?.location === \"Facility\" && (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label for=\"vaccinationFacility\">\r\n                            Facility Name\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"vaccinationFacility\"\r\n                            id=\"vaccinationFacility\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values?.vaccinationFacility}\r\n                          />\r\n\r\n                          {formik?.touched?.vaccinationFacility &&\r\n                            formik?.errors.vaccinationFacility && (\r\n                              <span className={classes.error}>\r\n                                {formik?.errors.vaccinationFacility}\r\n                              </span>\r\n                            )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"batchNumber\">\r\n                          Batch Number <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"batchNumber\"\r\n                          id=\"batchNumber\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.batchNumber}\r\n                        />\r\n                        {formik?.touched?.batchNumber &&\r\n                          formik?.errors.batchNumber && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.batchNumber}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              <MatButton\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                onClick={handleSubmit}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                {!false ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n              </MatButton>\r\n\r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                style={{ backgroundColor: \"#992E62\" }}\r\n                onClick={() => history.push({ pathname: \"/\" })}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                  Cancel\r\n                </span>\r\n              </MatButton>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CovidFirstVaccination;\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const fetchCodesets = async (code) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}application-codesets/v2/${code}`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const fetchCovidVaccines = async (code) => {\r\n  const response = await axios.get(`${baseUrl}covid/codeset?category=VACCINE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return response.data;\r\n};\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const useCovidFirstVaccinationFormValidationSchema = (onSubmit) => {\r\n  const covidFirstVaccinationInitialValue = {\r\n    workInHealthSector: \"\",\r\n    knownMedicalCondition: \"\",\r\n    medicalCondition: \"\",\r\n    adverseEffect: \"\",\r\n    adverseEffectOption: \"\",\r\n    vaccineType: \"\",\r\n    dateOfFirstDosage: \"\",\r\n    location: \"\",\r\n    vaccinationFacility: \"\",\r\n    batchNumber: \"\",\r\n  };\r\n\r\n  const covidFirstVaccValidationSchema = yup.object({\r\n    workInHealthSector: yup.string().required(\"This field is required\"),\r\n\r\n    knownMedicalCondition: yup.string().required(\"This field is required\"),\r\n\r\n    medicalCondition: yup.string().when(\"knownMedicalCondition\", {\r\n      is: (knownMedicalCondition) =>\r\n        knownMedicalCondition?.toLowerCase() === \"yes\",\r\n      then: yup.string().required(\"This field is required\"),\r\n      otherwise: yup.string(),\r\n    }),\r\n\r\n    adverseEffect: yup.string().required(\"This field is required\"),\r\n\r\n    adverseEffectOption: yup.string().when(\"adverseEffect\", {\r\n      is: (adverseEffect) => adverseEffect?.toLowerCase() === \"yes\",\r\n      then: yup.string().required(\"This field is required\"),\r\n      otherwise: yup.string(),\r\n    }),\r\n\r\n    vaccineType: yup.string().required(\"This field is required\"),\r\n\r\n    dateOfFirstDosage: yup.string().required(\"This field is required\"),\r\n\r\n    location: yup.string().required(\"This field is required\"),\r\n\r\n    vaccinationFacility: yup.string().when(\"location\", {\r\n      is: (location) => location?.toLowerCase() === \"facility\",\r\n      then: yup.string().required(\"This field is required\"),\r\n      otherwise: yup.string(),\r\n    }),\r\n\r\n    batchNumber: yup.string().required(\"This field is required\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: covidFirstVaccinationInitialValue,\r\n    onSubmit,\r\n    validationSchema: covidFirstVaccValidationSchema,\r\n  });\r\n  return { formik };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Input } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport CovidFirstVaccinationDose from \"./CovidFirstVaccination\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst CovidVaccinationHome = (props) => {\r\n  const [vaccineDosage, setVaccineDosage] = useState(\"\");\r\n\r\n  const covidFormMap = {\r\n    FIRST: <CovidFirstVaccinationDose />,\r\n  };\r\n\r\n  const RenderCovidForm = () => {\r\n    if (!vaccineDosage || vaccineDosage === \"\") {\r\n      return null;\r\n    }\r\n    return covidFormMap[vaccineDosage];\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n\r\n      <div style={{ marginTop: 10, marginBottom: 20 }}>\r\n        <Link\r\n          to={{\r\n            pathname: \"/\",\r\n            state: \"users\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-end mr-10 pr-10\"\r\n            style={{\r\n              backgroundColor: \"#014d88\",\r\n              fontWeight: \"bolder\",\r\n              margingRight: \"-40px\",\r\n            }}\r\n            startIcon={<TiArrowBack />}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n              Back{\" \"}\r\n            </span>\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <div>\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Vaccine Dosage\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"vaccineDosage\"\r\n                      id=\"vaccineDosage\"\r\n                      value={vaccineDosage}\r\n                      onChange={(e) => setVaccineDosage(e.target.value)}\r\n                    >\r\n                      <option value=\"\">Select option</option>\r\n                      <option value=\"FIRST\">First</option>\r\n                      <option value=\"SECOND\">Second</option>\r\n                      <option value=\"THIRD\">Third</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {RenderCovidForm()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CovidVaccinationHome;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport PatientCardDetail from \"./PatientCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport PatientVaccinationHistory from \"./../Vaccination/VaccinationHistory\";\r\nimport ImmunizationHome from \"../Immunization/ImmunizationHome\";\r\nimport Tetanus from \"../Tetanus/TetanusHome\";\r\nimport CovidVaccinationHome from \"../Covid/CovidVaccinationHome\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  let history = useHistory();\r\n  const [art, setArt] = useState(false);\r\n  const [activeContent, setActiveContent] = useState({\r\n    route: \"recent-history\",\r\n    id: \"\",\r\n    activeTab: \"home\",\r\n    actionType: \"create\",\r\n    obj: {},\r\n  });\r\n  const { classes } = props;\r\n  const patientObj = useMemo(() => {\r\n    return history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  }, [history.location]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>Immunization /</Link> Patient Dashboard\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <PatientCardDetail\r\n            patientObj={patientObj}\r\n            setArt={setArt}\r\n            setActiveContent={setActiveContent}\r\n          />\r\n          <SubMenu\r\n            patientObj={patientObj}\r\n            art={art}\r\n            setActiveContent={setActiveContent}\r\n          />\r\n          <div>\r\n            {activeContent.route === \"vaccination-history\" && (\r\n              <PatientVaccinationHistory\r\n                patientObj={patientObj}\r\n                setActiveContent={setActiveContent}\r\n                activeContent={activeContent}\r\n              />\r\n            )}\r\n            \r\n            {activeContent.route === \"routine-immunization-patient\" && (\r\n              <ImmunizationHome\r\n                patientObj={patientObj}\r\n                setActiveContent={setActiveContent}\r\n                activeContent={activeContent}\r\n              />\r\n            )}\r\n            {activeContent.route === \"tetanus-patient\" && (\r\n              <Tetanus\r\n                patientObj={patientObj}\r\n                setActiveContent={setActiveContent}\r\n                activeContent={activeContent}\r\n              />\r\n            )}\r\n            {activeContent.route === \"covid-patient\" && (\r\n              <CovidVaccinationHome\r\n                patientObj={patientObj}\r\n                setActiveContent={setActiveContent}\r\n                activeContent={activeContent}\r\n              />\r\n            )}\r\n\r\n\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","/* eslint-disable valid-typeof */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"./patient.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelSui } from \"semantic-ui-react\";\r\nimport { queryClient } from \"../../utils/queryClient\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    //maxWidth: 752,\r\n    //flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst RegisterPatient = (props) => {\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    active: true,\r\n    streetAddress: \"\",\r\n    address: [],\r\n    contact: [],\r\n    contactPoint: [],\r\n    dateOfBirth: \"\",\r\n    deceased: false,\r\n    deceasedDateTime: null,\r\n    firstName: \"\",\r\n    genderId: \"\",\r\n    identifier: \"\",\r\n    otherName: \"\",\r\n    maritalStatusId: \"\",\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    dateOfRegistration: \"\",\r\n    isDateOfBirthEstimated: null,\r\n    age: \"\",\r\n    phoneNumber: \"\",\r\n    altPhonenumber: \"\",\r\n    dob: \"\",\r\n    countryId: 1,\r\n    stateId: \"\",\r\n    district: \"\",\r\n    sexId: \"\",\r\n    ninNumber: \"\",\r\n  });\r\n  const [relatives, setRelatives] = useState({\r\n    address: \"\",\r\n    phone: \"\",\r\n    firstName: \"\",\r\n    email: \"\",\r\n    relationshipId: \"\",\r\n    lastName: \"\",\r\n    middleName: \"\",\r\n  });\r\n\r\n  let contactArray = [];\r\n  const [allContacts, setAllContacts] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [disabledAgeBaseOnAge] = useState(false);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [showRelative, setShowRelative] = useState(false);\r\n  const [patientFacilityId, setPatientFacilityId] = useState(null);\r\n  const [genders, setGenders] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions] = useState(\r\n    []\r\n  );\r\n  const [patientDTO, setPatientDTO] = useState({\r\n    person: \"\",\r\n    hivEnrollment: \"\",\r\n  });\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //status for hospital Number\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [hospitalNumStatus2, setHospitalNumStatus2] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const locationState = location.state;\r\n  let patientId = null;\r\n  patientId = locationState ? locationState.patientId : null;\r\n\r\n  const loadState = (stateId) => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data.sort());\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPatient = useCallback(async () => {\r\n    if (patientId) {\r\n      const response = await axios.get(`${baseUrl}patient/${patientId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const sexCodeset = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      const patient = response.data;\r\n\r\n      console.log(\"get patient\", patient?.contact?.contact);\r\n\r\n      setAllContacts(patient?.contact?.contact);\r\n      setPatientFacilityId(patient.facilityId);\r\n      const identifiers = patient.identifier;\r\n      const address = patient.address;\r\n      const contactPoint = patient?.contactPoint;\r\n      const hospitalNumber = identifiers?.identifier?.find(\r\n        (obj) => obj.type === \"HospitalNumber\"\r\n      );\r\n\r\n      const sex = _.find(sexCodeset.data, {\r\n        display: _.upperFirst(_.lowerCase(patient.sex)),\r\n      }).id;\r\n\r\n      const phone = phoneNumberFormatCheck(\r\n        contactPoint?.contactPoint?.find((obj) => obj.type === \"phone\")\r\n      );\r\n\r\n      const email = contactPoint?.contactPoint?.find(\r\n        (obj) => obj.type === \"email\"\r\n      );\r\n      const altphone = phoneNumberFormatCheck(\r\n        contactPoint?.contactPoint?.find((obj) => obj.type === \"altphone\")\r\n      );\r\n\r\n      const country =\r\n        address && address?.address && address?.address.length > 0\r\n          ? address.address[0]\r\n          : null;\r\n\r\n      if (country.stateId) {\r\n        loadState(country.stateId);\r\n      }\r\n\r\n      setBasicInfo({\r\n        active: true,\r\n        streetAddress: country.city,\r\n        address: [],\r\n        contact: [],\r\n        contactPoint: [],\r\n        dateOfBirth: \"\",\r\n        deceased: false,\r\n        deceasedDateTime: null,\r\n        hospitalNumber: hospitalNumber.value,\r\n        firstName: patient.firstName,\r\n        lastName: patient.surname,\r\n        genderId: \"\",\r\n        identifier: \"\",\r\n        otherName: \"\",\r\n        maritalStatusId: patient.maritalStatus?.id,\r\n        educationId: patient.education?.id,\r\n        employmentStatusId: patient.employmentStatus?.id,\r\n        dateOfRegistration: patient.dateOfRegistration,\r\n        isDateOfBirthEstimated: patient.dateOfBirth === \"Actual\" ? false : true,\r\n        age: calculate_age(patient.dateOfBirth),\r\n        phoneNumber: phone?.value,\r\n        altPhonenumber: altphone?.value,\r\n        dob: patient.dateOfBirth,\r\n        countryId: 1,\r\n        stateId: country.stateId,\r\n        district: parseInt(country.district),\r\n        landmark: country.line[0],\r\n        sexId: sex,\r\n        ninNumber: \"\",\r\n        email: email?.value,\r\n      });\r\n    }\r\n  }, [patientId]);\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    loadMaritalStatus();\r\n    loadEducation();\r\n    loadOccupation();\r\n    loadRelationships();\r\n    loadTopLevelCountry();\r\n    GetCountry();\r\n    setStateByCountryId();\r\n    getPatient();\r\n    if (basicInfo.dateOfRegistration < basicInfo.dob) {\r\n      toast.error(\"Date of registration can not be earlier than date of birth\");\r\n    }\r\n  }, [getPatient]);\r\n\r\n  const loadGenders = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setGenders(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadTopLevelCountry = useCallback(async () => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/0`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    settopLevelUnitCountryOptions(response.data.sort());\r\n  }, []);\r\n  const loadOrganisationUnitsByParentId = async (parentId) => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/${parentId}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data;\r\n  };\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n\r\n    return age_now;\r\n  };\r\n  const phoneNumberFormatCheck = (phone) => {\r\n    //console.log(\"err\", phone);\r\n    if (\r\n      phone !== undefined &&\r\n      typeof phone?.value !== null &&\r\n      typeof phone?.value !== \"undefined\" &&\r\n      phone?.value?.charAt(0) === \"0\"\r\n    ) {\r\n      phone.value = phone.value.replace(\"0\", \"234\");\r\n    }\r\n    return phone;\r\n  };\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get States from selected country\r\n  const getStates = (e) => {\r\n    const getCountryId = e.target.value;\r\n    setStateByCountryId(1);\r\n    setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId() {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/1`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setStates(response.data.sort());\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data.sort());\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      //   const m = today.getMonth() - birthDate.getMonth();\r\n      //   if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      //     age_now--;\r\n      //   }\r\n      basicInfo.age = age_now;\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, age: \"\" });\r\n    }\r\n    setBasicInfo({ ...basicInfo, dob: e.target.value });\r\n    if (basicInfo.age !== \"\" && basicInfo.age >= 60) {\r\n      toggle();\r\n    }\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value === \"Actual\") {\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value === \"Estimated\") {\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    const ageNumber = e.target.value.replace(/\\D/g, \"\");\r\n    if (!ageDisabled && ageNumber) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(ageNumber * -1, \"years\");\r\n      //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n      basicInfo.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n      if (ageNumber !== \"\" && ageNumber >= 60) {\r\n        toggle();\r\n      }\r\n    }\r\n    setBasicInfo({ ...basicInfo, age: ageNumber });\r\n  };\r\n\r\n  const handleInputChangeBasic = (e) => {\r\n    setBasicInfo({ ...basicInfo, [e.target.name]: e.target.value });\r\n\r\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"ninNumber\" && e.target.value !== \"\") {\r\n      const ninNumberValue = checkNumberLimit(\r\n        e.target.value.replace(/\\D/g, \"\")\r\n      );\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: ninNumberValue });\r\n    }\r\n    if (e.target.name === \"hospitalNumber\" && e.target.value !== \"\") {\r\n      async function getHosiptalNumber() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          errors.hospitalNumber = \"\";\r\n          //setObjValues({ ...objValues, uniqueId: e.target.value });\r\n          setHospitalNumStatus2(true);\r\n        } else {\r\n          errors.hospitalNumber = \"\";\r\n          toast.error(\"Error! Hosiptal Number already exist\");\r\n          setHospitalNumStatus(true);\r\n          setHospitalNumStatus2(false);\r\n        }\r\n      }\r\n      getHosiptalNumber();\r\n    }\r\n  };\r\n\r\n  //Function to show relatives\r\n  const handleAddRelative = () => {\r\n    setShowRelative(true);\r\n  };\r\n  //Function to cancel the relatives form\r\n  const handleCancelSaveRelationship = () => {\r\n    setShowRelative(false);\r\n  };\r\n  /*****  Validation  Relationship Input*/\r\n  const validateRelatives = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = relatives.firstName ? \"\" : \"First Name is required\";\r\n    //temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n    //temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n    temp.relationshipId = relatives.relationshipId\r\n      ? \"\"\r\n      : \"Relationship Type is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n  //Function to add relatives\r\n  const handleSaveRelationship = () => {\r\n    if (validateRelatives()) {\r\n      const contact = {\r\n        address: {\r\n          line: [relatives.address],\r\n        },\r\n        contactPoint: {\r\n          type: \"phone\",\r\n          value: relatives.phone,\r\n        },\r\n        firstName: relatives.firstName,\r\n        fullName:\r\n          relatives.firstName +\r\n          \" \" +\r\n          relatives.middleName +\r\n          \" \" +\r\n          relatives.lastName,\r\n        relationshipId: relatives.relationshipId,\r\n        surname: relatives.lastName,\r\n        otherName: relatives.middleName,\r\n      };\r\n\r\n      if (allContacts === undefined) {\r\n        contactArray.push(contact);\r\n        setAllContacts(contactArray);\r\n      } else {\r\n        setAllContacts([...allContacts, contact]);\r\n      }\r\n      setRelatives({\r\n        address: \"\",\r\n        phone: \"\",\r\n        firstName: \"\",\r\n        email: \"\",\r\n        relationshipId: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n      });\r\n    }\r\n  };\r\n  const handleDeleteRelative = (index) => {\r\n    allContacts.splice(index, 1);\r\n    setAllContacts([...allContacts]);\r\n  };\r\n  const handleEditRelative = (relative, index) => {\r\n    console.log(relative);\r\n    setRelatives(relative);\r\n    setShowRelative(true);\r\n    allContacts.splice(index, 1);\r\n  };\r\n  const getRelationship = (relationshipId) => {\r\n    const relationship = relationshipOptions.find(\r\n      (obj) => obj.id === relationshipId\r\n    );\r\n    return relationship ? relationship.display : \"\";\r\n  };\r\n  const handleInputChangeRelatives = (e) => {\r\n    setRelatives({ ...relatives, [e.target.name]: e.target.value });\r\n  };\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\";\r\n    temp.hospitalNumber = basicInfo.hospitalNumber\r\n      ? \"\"\r\n      : \"Hospital Number  is required.\";\r\n    //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n\r\n    temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\";\r\n    temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\";\r\n    temp.dateOfRegistration = basicInfo.dateOfRegistration\r\n      ? \"\"\r\n      : \"Date of Registration is required.\";\r\n    temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\";\r\n    temp.streetAddress = basicInfo.streetAddress ? \"\" : \"Address is required.\";\r\n    //temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n    temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\";\r\n    temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\";\r\n    temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\";\r\n    temp.employmentStatusId = basicInfo.employmentStatusId\r\n      ? \"\"\r\n      : \"Employee Status  is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validate()) {\r\n      setSaving(true);\r\n\r\n      //     });\r\n      try {\r\n        const patientForm = {\r\n          active: true,\r\n          address: [\r\n            {\r\n              city: basicInfo.streetAddress,\r\n              countryId: basicInfo.countryId,\r\n              district: basicInfo.district,\r\n              line: [basicInfo.landmark],\r\n              organisationUnitId: 0,\r\n              postalCode: \"\",\r\n              stateId: basicInfo.stateId,\r\n            },\r\n          ],\r\n          contact: allContacts,\r\n          contactPoint: [],\r\n          dateOfBirth: basicInfo.dob,\r\n          deceased: false,\r\n          deceasedDateTime: null,\r\n          firstName: basicInfo.firstName,\r\n          genderId: basicInfo.sexId,\r\n          sexId: basicInfo.sexId,\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: \"HospitalNumber\",\r\n              value: basicInfo.hospitalNumber,\r\n            },\r\n          ],\r\n          otherName: basicInfo.middleName,\r\n          maritalStatusId: basicInfo.maritalStatusId,\r\n          surname: basicInfo.lastName,\r\n          educationId: basicInfo.educationId,\r\n          employmentStatusId: basicInfo.employmentStatusId,\r\n          dateOfRegistration: basicInfo.dateOfRegistration,\r\n          isDateOfBirthEstimated:\r\n            basicInfo.dateOfBirth === \"Actual\" ? false : true,\r\n          ninNumber: basicInfo.ninNumber,\r\n        };\r\n\r\n        const phone = {\r\n          type: \"phone\",\r\n          value: basicInfo.phoneNumber,\r\n        };\r\n        if (basicInfo.email) {\r\n          const email = {\r\n            type: \"email\",\r\n            value: basicInfo.email,\r\n          };\r\n          patientForm.contactPoint.push(email);\r\n        }\r\n        if (basicInfo.altPhonenumber) {\r\n          const altPhonenumber = {\r\n            type: \"altphone\",\r\n            value: basicInfo.altPhonenumber,\r\n          };\r\n          patientForm.contactPoint.push(altPhonenumber);\r\n        }\r\n        patientForm.contactPoint.push(phone);\r\n        patientForm.id = patientId;\r\n        patientDTO.person = patientForm;\r\n\r\n        if (patientId) {\r\n          patientForm.id = null;\r\n          patientForm.facilityId = patientFacilityId;\r\n          const response = await axios.put(\r\n            `${baseUrl}patient/${patientId}`,\r\n            patientForm,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n          await queryClient.refetchQueries();\r\n          toast.success(\"Patient Updated successfully\");\r\n          setSaving(false);\r\n          history.push(\"/patient-vaccination-history\", {\r\n            patientObj: response.data,\r\n          });\r\n        } else {\r\n          const response = await axios.post(`${baseUrl}patient`, patientForm, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          await queryClient.refetchQueries();\r\n          toast.success(\"Patient Register successfully\");\r\n          setSaving(false);\r\n          history.push(\"/patient-vaccination-history\", {\r\n            patientObj: response.data,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          if (\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\" &&\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.subErrors[0].message !== \"\"\r\n          ) {\r\n            toast.error(\r\n              error.response.data.apierror.message +\r\n                \" : \" +\r\n                error.response.data.apierror.subErrors[0].field +\r\n                \" \" +\r\n                error.response.data.apierror.subErrors[0].message,\r\n              { position: toast.POSITION.BOTTOM_CENTER }\r\n            );\r\n          } else {\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n\r\n  const checkPhoneNumber = (e, inputName) => {\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setRelatives({ ...relatives, [inputName]: NumberValue });\r\n  };\r\n\r\n  const checkNumberLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  const handleInputChangePhoneNumber = (e, inputName) => {\r\n    const limit = 11;\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setBasicInfo({ ...basicInfo, [inputName]: NumberValue });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    history.push({ pathname: \"/\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>Patient /</Link> Patient Registration\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Link\r\n        to={{\r\n          pathname: \"/\",\r\n          state: \"users\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end mr-10 pr-10\"\r\n          style={{\r\n            backgroundColor: \"#014d88\",\r\n            fontWeight: \"bolder\",\r\n            margingRight: \"-40px\",\r\n          }}\r\n          startIcon={<TiArrowBack />}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n            Back{\" \"}\r\n          </span>\r\n        </Button>\r\n      </Link>\r\n      <br />\r\n      <br />\r\n\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    {userDetail === null\r\n                      ? \"Basic Information\"\r\n                      : \"Edit User Information\"}\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of Registration{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfRegistration\"\r\n                            id=\"dateOfRegistration\"\r\n                            min=\"1983-12-31\"\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            value={basicInfo.dateOfRegistration}\r\n                            //value={basicInfo.dateOfRegistration===\"\"? moment(new Date()).format(\"YYYY-MM-DD\") : basicInfo.dateOfRegistration}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.dateOfRegistration !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.dateOfRegistration}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">\r\n                            Hospital Number{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            value={basicInfo.hospitalNumber}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hospitalNumber !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {hospitalNumStatus === true ? (\r\n                            <span className={classes.error}>\r\n                              {\"Hospital number already exist\"}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"ninNumber\">\r\n                            National Identity Number (NIN){\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"ninNumber\"\r\n                            value={basicInfo.ninNumber}\r\n                            id=\"ninNumber\"\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                      {/* <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}HIV Enrollment\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div> */}\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">\r\n                            First Names <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            value={basicInfo.firstName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.firstName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.firstName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Middle Name</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"middleName\"\r\n                            id=\"middleName\"\r\n                            value={basicInfo.middleName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Last Name <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={basicInfo.lastName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.lastName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.lastName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Sex <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sexId\"\r\n                            id=\"sexId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.sexId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {genders.map((gender, index) => (\r\n                              <option key={gender.id} value={gender.id}>\r\n                                {gender.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.sexId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.sexId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-2 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>Date Of Birth</Label>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Actual\"\r\n                                name=\"dateOfBirth\"\r\n                                defaultChecked\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Actual\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Estimated\"\r\n                                name=\"dateOfBirth\"\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Estimated\r\n                            </label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Date </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dob\"\r\n                            min=\"1940-01-01\"\r\n                            id=\"dob\"\r\n                            max={basicInfo.dateOfRegistration}\r\n                            value={basicInfo.dob}\r\n                            onChange={handleDobChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Age</Label>\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"age\"\r\n                            className=\"form-control\"\r\n                            id=\"age\"\r\n                            min=\"1\"\r\n                            value={basicInfo.age}\r\n                            disabled={ageDisabled}\r\n                            onChange={handleAgeChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                        {basicInfo.age !== \"\" && basicInfo.age >= 80 ? (\r\n                          <span className={classes.error}>\r\n                            Are you sure of the age\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={\"row\"}>\r\n                      {/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Marital Status</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatusId\"\r\n                            id=\"maritalStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.maritalStatusId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {maritalStatusOptions.map(\r\n                              (maritalStatusOption, index) => (\r\n                                <option\r\n                                  key={maritalStatusOption.id}\r\n                                  value={maritalStatusOption.id}\r\n                                >\r\n                                  {maritalStatusOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Employment Status{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"employmentStatusId\"\r\n                            id=\"employmentStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.employmentStatusId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {occupationOptions.map(\r\n                              (occupationOption, index) => (\r\n                                <option\r\n                                  key={occupationOption.id}\r\n                                  value={occupationOption.id}\r\n                                >\r\n                                  {occupationOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                          {errors.employmentStatusId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.employmentStatusId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Education Level{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"educationId\"\r\n                            id=\"educationId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.educationId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {educationOptions.map((educationOption, index) => (\r\n                              <option\r\n                                key={educationOption.id}\r\n                                value={educationOption.id}\r\n                              >\r\n                                {educationOption.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.educationId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.educationId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Contact Details\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className={\"row\"}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Phone Number <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        {/* <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                   onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                   \r\n                                                   //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                /> */}\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"phoneNumber\"\r\n                          id=\"phoneNumber\"\r\n                          onChange={(e) => {\r\n                            handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                          }}\r\n                          value={basicInfo.phoneNumber}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          required\r\n                        />\r\n                        {errors.phoneNumber !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.phoneNumber}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                        {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Alt. Phone Number</Label>\r\n                        {/* <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    \r\n                                                /> */}\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"altPhonenumber\"\r\n                          id=\"altPhonenumber\"\r\n                          onChange={(e) => {\r\n                            handleInputChangePhoneNumber(e, \"altPhonenumber\");\r\n                          }}\r\n                          value={basicInfo.altPhonenumber}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          required\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Email</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          onChange={handleInputChangeBasic}\r\n                          value={basicInfo.email}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          required\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Country <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"countryId\"\r\n                          id=\"countryId\"\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          value={basicInfo.countryId}\r\n                          onChange={getStates}\r\n                          disabled\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          {countries.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.countryId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.countryId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          State <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"stateId\"\r\n                          id=\"stateId\"\r\n                          value={basicInfo.stateId}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          onChange={getProvinces}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {states.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.stateId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.stateId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Province/District/LGA{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"district\"\r\n                          id=\"district\"\r\n                          value={basicInfo.district}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          onChange={handleInputChangeBasic}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {provinces.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.district !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.district}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className={\"row\"}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Street Address{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"streetAddress\"\r\n                          id=\"streetAddress\"\r\n                          value={basicInfo.streetAddress}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {errors.streetAddress !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.streetAddress}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Landmark</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"landmark\"\r\n                          id=\"landmark\"\r\n                          value={basicInfo.landmark}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Relationship / Next Of Kin\r\n                  </h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    {allContacts && allContacts.length > 0 && (\r\n                      <div className=\"col-xl-12 col-lg-12\">\r\n                        <table style={{ width: \"100%\" }} className=\"mb-3\">\r\n                          <thead className=\"mb-3\">\r\n                            <tr>\r\n                              <th>Relationship Type</th>\r\n                              <th>Name</th>\r\n                              <th>Phone</th>\r\n                              <th>Address</th>\r\n                              <th>Actions</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"mb-3\">\r\n                            {allContacts.map((item, index) => {\r\n                              return (\r\n                                <tr key={item.index} className=\"mb-3\">\r\n                                  <td>\r\n                                    {getRelationship(item.relationshipId)}\r\n                                  </td>\r\n                                  <td>\r\n                                    {item?.firstName +\r\n                                      \" \" +\r\n                                      item?.otherName +\r\n                                      \" \" +\r\n                                      item?.surname}\r\n                                  </td>\r\n                                  <td>{item.contactPoint.value}</td>\r\n                                  <td>{item.address?.line[0]}</td>\r\n                                  <td>\r\n                                    {/* <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                      onClick={() =>\r\n                                        handleEditRelative(item, index)\r\n                                      }\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"edit\" />\r\n                                    </button> */}\r\n                                    &nbsp;&nbsp;\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-danger btn-sm removeRow\"\r\n                                      onClick={(e) =>\r\n                                        handleDeleteRelative(index)\r\n                                      }\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"trash\" />\r\n                                    </button>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                      {showRelative && (\r\n                        <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"relationshipType\">\r\n                                    Relationship Type{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                  </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"relationshipId\"\r\n                                    id=\"relationshipId\"\r\n                                    value={relatives.relationshipId}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  >\r\n                                    <option value={\"\"}>Select</option>\r\n                                    {relationshipOptions.map(\r\n                                      (relative, index) => (\r\n                                        <option\r\n                                          key={relative.id}\r\n                                          value={relative.id}\r\n                                        >\r\n                                          {relative.display}\r\n                                        </option>\r\n                                      )\r\n                                    )}\r\n                                  </select>\r\n                                  {errors.relationshipId !== \"\" ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.relationshipId}\r\n                                    </span>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"cfirstName\">\r\n                                    First Name{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                  </Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={relatives.firstName}\r\n                                    id=\"firstName\"\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                  {errors.firstName !== \"\" ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.firstName}\r\n                                    </span>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Middle Name</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"middleName\"\r\n                                    id=\"middleName\"\r\n                                    value={relatives.middleName}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                  {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Last Name </Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    value={relatives.lastName}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactPhoneNumber\">\r\n                                    Phone Number\r\n                                  </Label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"phone\"\r\n                                    id=\"phone\"\r\n                                    onChange={(e) => {\r\n                                      checkPhoneNumber(e, \"phone\");\r\n                                    }}\r\n                                    value={relatives.phone?.value}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                  {errors.phone !== \"\" ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.phone}\r\n                                    </span>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactEmail\">Email</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    value={relatives.email}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    required\r\n                                  />\r\n                                  {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactAddress\">Address</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    id=\"address\"\r\n                                    value={relatives.address?.city}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                  {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleSaveRelationship}\r\n                                >\r\n                                  Add\r\n                                </MatButton>\r\n                              </div>\r\n\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"secondary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleCancelSaveRelationship}\r\n                                >\r\n                                  Cancel\r\n                                </MatButton>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\"></div>\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<AddIcon />}\r\n                    onClick={handleAddRelative}\r\n                    style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                  >\r\n                    Add a Relative/Next Of Kin\r\n                  </MatButton>\r\n                  {/* </div> */}\r\n                </div>\r\n              </div>\r\n              {saving ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                onClick={handleSubmit}\r\n                hidden={disabledAgeBaseOnAge}\r\n                disabled={saving}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                {!saving ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n              </MatButton>\r\n\r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                style={{ backgroundColor: \"#992E62\" }}\r\n                onClick={handleCancel}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                  Cancel\r\n                </span>\r\n              </MatButton>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterPatient;\r\n","import React from \"react\";\r\nimport { MemoryRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Home from \"./main/webapp/jsx/components/Home\";\r\nimport PatientDetail from \"./main/webapp/jsx/components/Patient/PatientDetail\";\r\nimport RegisterPatientPage from \"./main/webapp/jsx/components/Patient/RegisterPatient\";\r\nimport ImmunizationHome from \"./main/webapp/jsx/components/Immunization/ImmunizationHome\";\r\nimport TetanusHome from \"./main/webapp/jsx/components/Tetanus/TetanusHome\";\r\nimport { QueryClientProvider } from \"react-query\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nimport { queryClient } from \"./main/webapp/jsx/utils/queryClient\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <QueryClientProvider client={queryClient}>\r\n        <div>\r\n          <ToastContainer />\r\n          <Switch>\r\n            <Route path=\"/tetanus-patient\">\r\n              <TetanusHome />\r\n            </Route>\r\n            <Route path=\"/routine-immunization-patient\">\r\n              <ImmunizationHome />\r\n            </Route>\r\n            <Route path=\"/patient-vaccination-history\">\r\n              <PatientDetail />\r\n            </Route>\r\n            <Route path=\"/register-patient\">\r\n              <RegisterPatientPage />\r\n            </Route>\r\n\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n        <ReactQueryDevtools initialIsOpen={false} />\r\n      </QueryClientProvider>\r\n    </Router>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}