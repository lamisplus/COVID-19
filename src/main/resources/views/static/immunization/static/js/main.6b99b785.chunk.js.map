{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Patient/PatientVaccinatedLIst.js","main/webapp/jsx/components/Immunization/ImmunizationPage.js","main/webapp/jsx/components/Tetanus/TetanusPage.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/Immunization/ImmunizationHome.js","main/webapp/jsx/components/Tetanus/TetanusHome.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","URLSearchParams","window","location","search","get","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","Patients","calculate_age","dob","today","Date","birthDate","getFullYear","showPPI","setShowPPI","useState","handleCheckBox","e","target","checked","query","pageSize","page","data","isLoading","useQuery","axios","concat","baseUrl","headers","Authorization","then","response","records","map","row","name","firstName","lastName","hospital_number","participantId","gender","age","count","Label","size","children","vaccinationStatus","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","Button","MdDashboard","fontWeight","MaterialTable","icons","title","columns","field","hidden","filtering","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","components","Toolbar","className","type","id","value","onChange","border","borderRadius","htmlFor","MTableToolbar","age_now","m","getMonth","getDate","Promise","resolve","reject","result","totalCount","totalRecords","divStyle","Home","key","setKey","Fragment","startIcon","FaUserPlus","textTransform","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","PatientVaccinatedLIst","ImmunizationPage","TetanusPage","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","classes","console","log","useEffect","ExpansionPanel","ExpansionPanelSummary","md","root2","ButtonMui","TiArrowBack","dateParts","split","dateObject","moment","format","identifier","phoneNumber","contactPoint","find","obj","getPhoneNumber","address","city","houseAddress","line","landMark","getAddress","Divider","useStyles","navItemText","SubMenu","patientObjs","activeItem","setActiveItem","setpatientObj","genderType","setGenderType","Observation","observation","filter","x","catch","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","getAge","Vaccination","errors","setErrors","temp","covidEffect","setCovidEffect","vaccine","setVaccine","objValues","setObjValues","adverseEffect","batchNumber","doseNumber","patientId","vaccinationFacility","vaccineDate","saving","setSaving","VACCINE","COVID_ADVERSE_EFFECT","handleInputChange","Modal","isOpen","showModal","toggle","Form","ModalHeader","ModalBody","CardBody","_Fragment","FormGroup","Input","InputGroup","max","MatButton","SaveIcon","preventDefault","Object","values","every","post","toast","loadPatients","disabled","CancelIcon","PatientVaccinationHistory","vacinationList","setVaccinationtList","modal","setModal","openDeleteModal","setOpenDeleteModal","React","toggleDeleteModal","record","setRecord","async","patients","vaccineName","position","Dropdown","item","LoadEditModal","IconMenu","LoadDeleteModal","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","message","RecentHistory","VaccinationHistory","PatientnHistory","recentActivities","setRecentActivities","loading","setLoading","useHistory","PatientHistory","personId","activities","LoadViewPage","action","path","actionType","date","viewable","Icon","LoadDeletePage","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","devices","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","tryAgain","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","selectedFingers","setSelectedFingers","getPersonBiometrics","green","fingersCodeset","length","personCapturedFingers","_","uniq","biometricItems","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","index","lastModifiedDate","Toggle","as","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","y","cx","cy","r","alignRight","deleteBiometric","finger","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","for","deviceName","selectedDevice","errorType","errorName","required","_ref","validate","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","InclusionCriteria","vaccination","setVaccination","setValues","category","patient_id","questionAnswers","visit_date","datatype","responses","_ref2","_ref3","entries","question_id","answer","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","vitalSignModal","setVitalSignModal","reInfectionModal","setReinfectionModal","signsSymptomsModal","setSignsSymptomsModal","medicationModal","setMedicationModal","chronicMedicationModal","setChronicMedicationModal","supportiveCareModal","setSupportiveCareModal","vaccinationHistory","setVaccinationHistory","inclusionHistory","setInclusionHistory","demograhicHistory","setDemographicHistory","vitalHistory","setVitalHistory","comobitieHistory","setComobitieHistory","reinfectionHistory","setReinfectionHistory","signsSymptomsHistory","setSignsSymptomsHistory","chronicMedicationHistory","setChronicMedicationHistory","medicationHistory","setMedicationHistory","supportiveCarenHistory","setSupportiveCareHistory","CardContent","Grid","padded","Column","Segment","raised","ribbon","cursor","divided","floated","inclusionCriteriaToggle","Demographic","demographicToggle","ViccinationToggle","VitalSign","VitalSignToggle","Comorbitie","ComorbitieToggle","ReinfectionToggle","ChronicMedicationToggle","MedicationToggle","SignsSymptoms","SignsSymptomsToggle","SupportiveCareToggle","library","add","faCheckSquare","faCoffee","faEdit","faTrash","demo","background","default","inline","Immunization","immunizationDetail","setImmunizationDetail","hepB0","opv0","bcg","opv1","penta1","pcv1","rota1","opv2","penta2","pcv2","rota2","opv3","penta3","pcv3","rota3","ipv","vitaminA1","vitaminA2","measles1","yellowFever","menA","measles2","Hpv9yrs","comments","missedVaccine","basicInfo","setBasicInfo","dateOfChildVisit","childName","childCardNo","followUpAddress","sexId","birthdate","user","ageDisabled","setAgeDisabled","open","setOpen","selectedOption","setSelectedOption","setBirthdate","dropdownOptions","calculateAgeInDays","timeDiff","days","Math","floor","daysOld","push","checking","parseInt","handleDropdownChange","handleInputChangeBasic","Birthdate","event","measle1","measle2","hpv9yrs","comment","Tetanus","clientDetails","setClientDetails","dateOfClientVisit","clientCardNo","clientDob","clientName","clientFollowUpAddress","clientPhoneNumber","tetanusDiphtheria","setTetanusDiphtheria","td1","td2","td3","td4","td5","patientDTO","setPatientDTO","showContactCard","setShowContactCard","onClickContactCard","handleInputChangeClientDetails","FaPlus","FaAngleDown","tp1","tp3","tp4","tp5","handleCancel","art","setArt","activeTab","prepId","PatientCardDetail","AddmissionHome","ImmunizationHome","UserRegistration","active","contact","dateOfBirth","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","ninNumber","relatives","setRelatives","phone","email","relationshipId","middleName","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","userDetail","useLocation","knownMedicalCondition","medicalCondition","occupation","vaccineId","visitDate","visitId","workInHealthSector","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","GetCountry","setStateByCountryId","useCallback","sort","handleDateOfBirthChange","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","hosiptalNumber","hospitalNumber","uniqueId","getRelationship","relationship","handleInputChangeRelatives","replace","slice","handleInputChangePhoneNumber","inputName","NumberValue","checkNumberLimit","onClickRelativeCard","autoClose","hideProgressBar","margingRight","min","defaultChecked","ageNumber","currentDate","setDate","setMonth","dobNew","toISOString","abs","maritalStatusOption","occupationOption","educationOption","getCountryId","landmark","handleEditRelative","relative","splice","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","handleCancelSaveRelationship","adverseEffectOption","Spinner","newConatctsInfo","contactInfo","fullName","surname","patientForm","person","vaccinationEnrollment","POSITION","BOTTOM_CENTER","subErrors","flexGrow","setToday","substr","editRelative","setEditRelative","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","femaleStatus","setfemaleStatus","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","personDto","prepSupporter","uniqueClientId","ancUnique","carePoints","setCarePoints","sourceReferral","setSourceReferral","hivStatus","setHivStatus","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","newSex","setNewSex","pregnancyStatus","setPregnancyStatus","transferIn","setTransferIn","ovcEnrolled","setOvcEnrolled","hideTargetGroup","setHideTargetGroup","getSex","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","identifiers","altphone","country","maritalStatus","employmentStatus","education","getStateId","patientAge","sex","alert","getSexId","checkPhoneNumberBasic","dateOfRegistration1","PhoneInput","containerStyle","inputStyle","placeholder","maxLength","AddIcon","handleAddRelative","code","TOP_RIGHT","maxWidth","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","enrollment","getCharacters","random","hivEnrollment","put","queryClientSettings","defaultOptions","queries","retry","refetchOnMount","refetchOnWindowFocus","refetchOnReconnect","cacheTime","Infinity","refetchInterval","refetchIntervalInBackground","suspense","staleTime","mutations","queryClient","QueryClient","App","Router","QueryClientProvider","client","Switch","Route","PatientDetail","RegisterPatientPage","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","label","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.6b99b785.chunk.js","sourcesContent":["// export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\n// export const url = '/api/v1/'\r\n\r\nexport const url = process.env.NODE_ENV === \"development\"\r\n  ? \"http://localhost:8383/api/v1/\"\r\n  : \"/api/v1/\";\r\nexport const token = process.env.NODE_ENV === \"development\"\r\n  ? \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzA2NjQwMjM1fQ.W0qEMirb0M8pCVimsm0C8SVXm32lnFnKJFBvzv89IixVkU_21yix-r_3bfLYSkq_QjHlQrS-46uFImI6kzrFzg\"\r\n  : new URLSearchParams(window.location.search).get(\"jwt\");\r\n","import React, { useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport axios from \"axios\";\r\n\r\nimport { token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport { useQuery } from 'react-query';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Patients = (props) => {\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const birthDate = new Date(dob);\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  const [showPPI, setShowPPI] = useState(true);\r\n\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  const query = {\r\n    pageSize: 10,  // Set your initial page size\r\n    page: 1,      // Set your initial page number\r\n    search: '',   // Set your initial search parameter\r\n  };\r\n\r\n  const { data, error, isLoading } = useQuery( ['patientData', query], () =>\r\n  axios\r\n    .get(\r\n      `${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    )\r\n    .then((response) => response.data.records.map((row) => ({\r\n      name: row.firstName + \" \" + row.lastName,\r\n      hospital_number: row.participantId,\r\n      gender: row.gender !== null ? row.gender.display : \"\",\r\n      age: calculate_age(row.dob),\r\n      count: (\r\n        <Label color=\"blue\" size=\"mini\">\r\n          {row.vaccinationStatus}\r\n        </Label>\r\n      ),\r\n      actions: (\r\n        <div>\r\n          <Link\r\n            to={{\r\n              pathname: \"/patient-history\",\r\n              state: { patientObj: row },\r\n            }}\r\n          >\r\n            <ButtonGroup\r\n              variant=\"contained\"\r\n              aria-label=\"split button\"\r\n              style={{\r\n                backgroundColor: \"rgb(153, 46, 98)\",\r\n                height: \"30px\",\r\n                width: \"215px\",\r\n              }}\r\n              size=\"large\"\r\n            >\r\n              <Button\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                aria-label=\"select merge strategy\"\r\n                aria-haspopup=\"menu\"\r\n                style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n              >\r\n                <MdDashboard />\r\n              </Button>\r\n              <Button\r\n                style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    fontSize: \"12px\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                  }}\r\n                >\r\n                  Patient Dashboard\r\n                </span>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Link>\r\n        </div>\r\n      ),\r\n    })))\r\n);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient \"\r\n        columns={[\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"name\",\r\n            hidden: showPPI,\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"hospital_number\",\r\n            filtering: false,\r\n          },\r\n          // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n          { title: \"Sex\", field: \"gender\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n\r\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n          { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        data={data}\r\n        isLoading={isLoading}\r\n        // data={(query) =>\r\n        //   new Promise((resolve, reject) =>\r\n        //     axios\r\n        //       .get(\r\n        //         `${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`,\r\n        //         { headers: { Authorization: `Bearer ${token}` } }\r\n        //       )\r\n        //       .then((response) => response)\r\n        //       .then((result) => {\r\n        //         resolve({\r\n        //           data:\r\n        //             result.data.records &&\r\n        //             result.data.records !== null &&\r\n        //             result.data.records.map((row) => ({\r\n        //               name: row.firstName + \" \" + row.lastName,\r\n        //               hospital_number: row.participantId,\r\n        //               gender: row.gender !== null ? row.gender.display : \"\",\r\n        //               age: calculate_age(row.dob),\r\n\r\n        //               count: (\r\n        //                 <Label color=\"blue\" size=\"mini\">\r\n        //                   {row.vaccinationStatus}\r\n        //                 </Label>\r\n        //               ),\r\n\r\n        //               actions: (\r\n        //                 <div>\r\n        //                   <Link\r\n        //                     to={{\r\n        //                       pathname: \"/patient-history\",\r\n        //                       state: { patientObj: row },\r\n        //                     }}\r\n        //                   >\r\n        //                     <ButtonGroup\r\n        //                       variant=\"contained\"\r\n        //                       aria-label=\"split button\"\r\n        //                       style={{\r\n        //                         backgroundColor: \"rgb(153, 46, 98)\",\r\n        //                         height: \"30px\",\r\n        //                         width: \"215px\",\r\n        //                       }}\r\n        //                       size=\"large\"\r\n        //                     >\r\n        //                       <Button\r\n        //                         color=\"primary\"\r\n        //                         size=\"small\"\r\n        //                         aria-label=\"select merge strategy\"\r\n        //                         aria-haspopup=\"menu\"\r\n        //                         style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n        //                       >\r\n        //                         <MdDashboard />\r\n        //                       </Button>\r\n        //                       <Button\r\n        //                         style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n        //                       >\r\n        //                         <span\r\n        //                           style={{\r\n        //                             fontSize: \"12px\",\r\n        //                             color: \"#fff\",\r\n        //                             fontWeight: \"bolder\",\r\n        //                           }}\r\n        //                         >\r\n        //                           Patient Dashboard\r\n        //                         </span>\r\n        //                       </Button>\r\n        //                     </ButtonGroup>\r\n        //                   </Link>\r\n        //                 </div>\r\n        //               ),\r\n        //             })),\r\n        //           page: query.page,\r\n        //           totalCount: result.data.totalRecords,\r\n        //         });\r\n        //       })\r\n        //   )\r\n        // }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport axios from \"axios\";\r\n\r\nimport { token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Patients = (props) => {\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n\r\n    if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n      age_now--;\r\n    }\r\n\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  const [showPPI, setShowPPI] = useState(true);\r\n\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient \"\r\n        columns={[\r\n          // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"name\",\r\n            hidden: showPPI,\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"hospital_number\",\r\n            filtering: false,\r\n          },\r\n          // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n          { title: \"Sex\", field: \"gender\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n\r\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n          { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        //isLoading={loading}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}covid/vaccinated-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then((response) => response)\r\n              .then((result) => {\r\n                resolve({\r\n                  data:\r\n                    result.data.records &&\r\n                    result.data.records !== null &&\r\n                    result.data.records.map((row) => ({\r\n                      name: row.firstName + \" \" + row.lastName,\r\n                      hospital_number: row.participantId,\r\n                      gender: row.gender !== null ? row.gender.display : \"\",\r\n                      age: calculate_age(row.dob),\r\n\r\n                      count: (\r\n                        <Label color=\"blue\" size=\"mini\">\r\n                          {row.vaccinationStatus}\r\n                        </Label>\r\n                      ),\r\n\r\n                      actions: (\r\n                        <div>\r\n                          <Link\r\n                            to={{\r\n                              pathname: \"/patient-history\",\r\n                              state: { patientObj: row },\r\n                            }}\r\n                          >\r\n                            <ButtonGroup\r\n                              variant=\"contained\"\r\n                              aria-label=\"split button\"\r\n                              style={{\r\n                                backgroundColor: \"rgb(153, 46, 98)\",\r\n                                height: \"30px\",\r\n                                width: \"215px\",\r\n                              }}\r\n                              size=\"large\"\r\n                            >\r\n                              <Button\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                aria-label=\"select merge strategy\"\r\n                                aria-haspopup=\"menu\"\r\n                                style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                              >\r\n                                <MdDashboard />\r\n                              </Button>\r\n                              <Button\r\n                                style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                              >\r\n                                <span\r\n                                  style={{\r\n                                    fontSize: \"12px\",\r\n                                    color: \"#fff\",\r\n                                    fontWeight: \"bolder\",\r\n                                  }}\r\n                                >\r\n                                  Patient Dashboard\r\n                                </span>\r\n                              </Button>\r\n                            </ButtonGroup>\r\n                          </Link>\r\n                        </div>\r\n                      ),\r\n                    })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    name=\"showPP!\"\r\n                    id=\"showPP\"\r\n                    value=\"showPP\"\r\n                    checked={showPPI === true ? false : true}\r\n                    onChange={handleCheckBox}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                  <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                    <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                      SHOW PII\r\n                    </b>\r\n                  </label>\r\n                </div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const [showPPI, setShowPPI] = useState(true);\r\n\r\n    const handleCheckBox = (e) => {\r\n      if (e.target.checked) {\r\n        setShowPPI(false);\r\n      } else {\r\n        setShowPPI(true);\r\n      }\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n                hidden: showPPI,\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            //{ title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            components={{\r\n                Toolbar: (props) => (\r\n                  <div>\r\n                    <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        className=\"form-check-input\"\r\n                        name=\"showPP!\"\r\n                        id=\"showPP\"\r\n                        value=\"showPP\"\r\n                        checked={showPPI === true ? false : true}\r\n                        onChange={handleCheckBox}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                      <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                        <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                          SHOW PII\r\n                        </b>\r\n                      </label>\r\n                    </div>\r\n                    <MTableToolbar {...props} />\r\n                  </div>\r\n                ),\r\n              }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n       // const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const [showPPI, setShowPPI] = useState(true);\r\n\r\n    const handleCheckBox = (e) => {\r\n      if (e.target.checked) {\r\n        setShowPPI(false);\r\n      } else {\r\n        setShowPPI(true);\r\n      }\r\n    };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n                hidden: showPPI,\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            //{ title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            components={{\r\n                Toolbar: (props) => (\r\n                  <div>\r\n                    <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        className=\"form-check-input\"\r\n                        name=\"showPP!\"\r\n                        id=\"showPP\"\r\n                        value=\"showPP\"\r\n                        checked={showPPI === true ? false : true}\r\n                        onChange={handleCheckBox}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                      <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                        <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                          SHOW PII\r\n                        </b>\r\n                      </label>\r\n                    </div>\r\n                    <MTableToolbar {...props} />\r\n                  </div>\r\n                ),\r\n              }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport PatientList from \"./Patient/PatientList\";\r\nimport PatientVaccinatedLIst from \"./Patient/PatientVaccinatedLIst\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport ImmunizationPage from \"./Immunization/ImmunizationPage\";\r\nimport TetanusPage from \"./Tetanus/TetanusPage\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n  const [key, setKey] = useState(\"home\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>Immunization</h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Link to={\"register-patient\"}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end mb-10\"\r\n          startIcon={<FaUserPlus size=\"10\" />}\r\n          style={{ backgroundColor: \"#014d88\" }}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n        </Button>\r\n      </Link>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <br />\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">\r\n                    <PatientList />\r\n                  </Tab>\r\n                  <Tab\r\n                    eventKey=\"vaccinated\"\r\n                    title=\"Covid-19 Vaccinated Patients\"\r\n                  >\r\n                    <PatientVaccinatedLIst />\r\n                  </Tab>\r\n                  <Tab eventKey=\"immunization\" title=\"Routine Immunization\">\r\n                    <ImmunizationPage />\r\n                  </Tab>\r\n                  <Tab eventKey=\"tetanus\" title=\"Tetanus Diphtheria\">\r\n                    <TetanusPage />\r\n                  </Tab>\r\n\r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    //<VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  console.log(patientObj)\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n    const getPhoneNumber = (identifier) => {\r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(\r\n        (obj) => obj.type === \"phone\"\r\n      );\r\n      return phoneNumber ? phoneNumber.value : \"\";\r\n    };\r\n    const getAddress = (identifier) => {\r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find((obj) => obj.city);\r\n      const houseAddress =\r\n        address && address.line[0] !== null ? address.line[0] : \"\";\r\n      const landMark =\r\n        address && address.city && address.city !== null ? address.city : \"\";\r\n      return address ? houseAddress + \" \" + landMark : \"\";\r\n    };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.lastName }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{patientObj.participantId}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dob }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>\r\n                          {calculate_age(moment(patientObj.dob).format(\"DD-MM-YYYY\"))}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.gender!==null ? patientObj.gender.display : \"\"}\r\n                        </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>\r\n                        {getPhoneNumber(patientObj.contactPoint)}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)}{\" \"}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    const [activeItem, setActiveItem] =  useState(\"recent-history\")\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    const loadVaccination = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    }\r\n    const loadIcu = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'icu'})\r\n    }\r\n    const loadAddmission = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    }\r\n    const onClickDischarge = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const onClickImmunization = (row) =>{   \r\n        setActiveItem('immunization')     \r\n        props.setActiveContent({...props.activeContent, route:'immunization-patient'})\r\n    }\r\n    const onClickTetanus = (row) =>{   \r\n        setActiveItem('tetanus')     \r\n        props.setActiveContent({...props.activeContent, route:'tetanus-patient'})\r\n    }\r\n    const loadPatientHistory = ()=>{\r\n        //setActiveItem('history')\r\n        props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    }\r\n\r\n\r\n    return (\r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>  \r\n                <Menu.Item onClick={() => onClickImmunization()} > Immunization</Menu.Item>   \r\n                <Menu.Item onClick={() => onClickTetanus()} > Tetanus </Menu.Item> \r\n{/* \r\n                 <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        COVID_ADVERSE_EFFECT();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccination Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare, } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from 'semantic-ui-react'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport Vaccination from './../Vaccination/AddViccination'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n    const [vacinationList, setVaccinationtList] = useState([])\r\n    const patientObj = props && props.patientObj ? props.patientObj : []\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [openDeleteModal, setOpenDeleteModal] = React.useState(false)\r\n    const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n    const [record, setRecord] = useState(null)\r\n    const [saving, setSaving] = useState(false)\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients Vaccinations\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVaccinationtList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const loadVaccinationModal =(row)=> {\r\n        setModal(!modal)\r\n    }\r\n    const LoadEditModal =(row)=>{\r\n        setRecord(row)\r\n        toggle()  \r\n    }\r\n    const LoadDeleteModal =(row)=>{\r\n        toggleDeleteModal()\r\n        setRecord(row)\r\n    }\r\n    console.log(record)\r\n    const LoadDeletePage =()=>{\r\n        setSaving(true)       \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}covid/vaccinations/${record.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            patients()\r\n            toggleDeleteModal()\r\n            setSaving(false) \r\n        })\r\n        .catch((error) => {\r\n            setSaving(false) \r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n            }\r\n            else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n        });  \r\n    \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n       <Card>\r\n         <CardBody>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                onClick={() => loadVaccinationModal()}\r\n                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Vaccination </span>\r\n            </Button>       \r\n            <br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient Vaccination History \"\r\n              columns={[\r\n                { title: \"Vaccine\", field: \"vaccine\", filtering: false },\r\n                {\r\n                  title: \"Vaccine Date\",\r\n                  field: \"vaccineDate\",\r\n                },\r\n                \r\n                { title: \"Dose Number\", field: \"doseNumber\", filtering: false },  \r\n                { title: \"Location\", field: \"location\", filtering: false },      \r\n                { title: \"Batch Number\", field: \"batchNumber\", filtering: false }, \r\n                { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n                { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false }, \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ vacinationList.map((row) => ({\r\n                    vaccine: row.vaccineName,\r\n                    vaccineDate: row.vaccineDate,\r\n                    batchNumber: row.batchNumber,\r\n                    doseNumber: row.doseNumber,\r\n                    location: row.location,\r\n                    vaccinationFacility: row.vaccinationFacility,\r\n                    adverseEffect: row.adverseEffect,\r\n                    actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>\r\n                  \r\n                  }))}\r\n            \r\n                options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            />\r\n    \r\n        </CardBody>\r\n       </Card>\r\n      <Vaccination toggle={toggle} showModal={modal} patientObj={props.patientObj} loadPatients={patients} records={record}/>\r\n      <Modal show={openDeleteModal} toggle={toggleDeleteModal} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete - <b>{record && record.batchNumber}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggleDeleteModal} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientVaccinationHistory;\r\n\r\n\r\n","import React, { Fragment} from \"react\";\r\nimport VaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst RecentHistory = (props) => {\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <div className=\"row\">\r\n        <VaccinationHistory patientObj={props.patientObj}/>\r\n     \r\n      </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n//import  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst Immunization =(props)=>{\r\n \r\n    \r\n            const [immunizationDetail, setImmunizationDetail] =useState(\r\n                { \r\n                    hepB0:\"\",\r\n                    opv0:\"\",\r\n                    bcg:\"\",\r\n                    opv1:\"\",\r\n                    penta1:\"\",\r\n                    pcv1:\"\",\r\n                    rota1:\"\",\r\n                    opv2:\"\",\r\n                    penta2:\"\",\r\n                    pcv2:\"\",\r\n                    rota2:\"\",\r\n                    opv3:\"\",\r\n                    penta3:\"\",\r\n                    pcv3:\"\",\r\n                    rota3:\"\",\r\n                    ipv:\"\",\r\n                    vitaminA1:\"\", \r\n                    vitaminA2: \"\",\r\n                    measles1:\"\",\r\n                    yellowFever:\"\",\r\n                    menA:\"\",\r\n                    measles2:\"\",\r\n                    Hpv9yrs:\"\",\r\n                    comments:\"\",\r\n                    missedVaccine:\"\",\r\n            \r\n            \r\n                }\r\n\r\n            )\r\n            const [basicInfo, setBasicInfo]= useState(\r\n                {\r\n                    dateOfChildVisit:\"\",\r\n                    childName:\"\",\r\n                    childCardNo:\"\",\r\n                    followUpAddress:\"\",\r\n                    sexId:\"\",\r\n                    phoneNumber:\"\",\r\n                    birthdate:\"\",\r\n                    //dob:\"\"\r\n \r\n                }\r\n            )\r\n            //console.log(basicInfo)\r\n            \r\n            const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n            const [errors, setErrors] = useState({})\r\n            const classes = useStyles();\r\n            const [ageDisabled,setAgeDisabled]=useState(true);\r\n            const [open, setOpen] = React.useState(false)\r\n            const toggle = () => setOpen(!open);\r\n            const [selectedOption, setSelectedOption]=useState(\"\")\r\n            const [birthdate, setBirthdate] = useState('');\r\n            const dropdownOptions = [{\r\n                value: \"yes\",\r\n                name: 'Yes',\r\n            }, {name: 'No',\r\n                value: \"no\"}]\r\n                const calculateAgeInDays = () => {\r\n                    const today = new Date();\r\n                    const birthDate = new Date(birthdate);\r\n                    const timeDiff = today - birthDate;\r\n                    const daysOld = Math.floor(timeDiff / (1000 * 60 * 60 * 24));\r\n                    const days = daysOld/7\r\n                   checking(parseInt(days))\r\n                    return parseInt(days);\r\n\r\n                };\r\n                function checking(daysOld) {\r\n                    let vaccine = [];\r\n                \r\n                    if (daysOld === 0 || daysOld <= 2) {\r\n                        vaccine.push(\"hepB0\");\r\n                        \r\n                    }\r\n                    if (daysOld <= 2) {\r\n                        vaccine.push(\"opv0\");\r\n                    }\r\n                    if (daysOld <= 44) {\r\n                        vaccine.push(\"bcg\");\r\n                    }\r\n                    if (daysOld >= 6 && daysOld <= 92) {\r\n                        vaccine.push(\"opv1\",\"penta1\",\"pcv1\",\"rota1\");\r\n                    }\r\n                    if (daysOld >= 10 && daysOld <= 92) {\r\n                        vaccine.push(\"opv2\",\"penta2\",\"pcv2\",\"rota2\");\r\n                    }\r\n                    if (daysOld >= 14 && daysOld <= 92) {\r\n                        vaccine.push(\"opv3\",\"penta3\",\"pcv3\",\"rota3\");\r\n                    }\r\n                    if (daysOld >= 14 && daysOld <= 44) {\r\n                        vaccine.push(\"ipv\");\r\n                    }\r\n                    if (daysOld >= 24 && daysOld <= 44) {\r\n                        vaccine.push(\"vitaminA1\");\r\n                    }\r\n                    if (daysOld >= 48 && daysOld <= 92) {\r\n                        vaccine.push(\"vitaminA2\");\r\n                    }\r\n                    if (daysOld >= 36 && daysOld <= 44) {\r\n                        vaccine.push(\"measles1\");\r\n                    }\r\n                    if (daysOld >= 36 && daysOld <= 92) {\r\n                        vaccine.push(\"yellowFever\");\r\n                    }\r\n                    if (daysOld >= 36 && daysOld <= 44) {\r\n                        vaccine.push(\"menA\");\r\n                    }\r\n                    if (daysOld >= 72 && daysOld <= 92) {\r\n                        vaccine.push(\"measles2\");\r\n                    }\r\n                    if (daysOld >= 432 && daysOld >= 528) {\r\n                        vaccine.push(\"Hpv9yrs\");\r\n                    }\r\n                    \r\n\r\n                    //console.log(vaccine)\r\n                    return vaccine; \r\n                }\r\n                \r\n \r\n            const handleBirthdateChange = (event) => {\r\n                setBirthdate(event.target.value);\r\n              };\r\n              const handleDobChange = (e) =>{\r\n                setBasicInfo({...basicInfo, [e.target.name]: e.target.value })\r\n              }\r\n            const handleDropdownChange= e => {\r\n               // console.log(e.target.value)\r\n                setErrors({...temp, [e.target.name]:\"\"})\r\n                setImmunizationDetail ({...immunizationDetail,  [e.target.name]: e.target.value});\r\n            \r\n            }\r\n            // const handleDropdownChange = (event) => {\r\n            //     setImmunizationDetail ({...immunizationDetail,  [e.target.name]: e.target.value});\r\n            //   };\r\n            // const handleDateOfBirthChange = (e) => {\r\n            //     if (e.target.value === \"Actual\") {\r\n            //         setAgeDisabled(true);\r\n            //     } else if (e.target.value === \"Estimated\") {\r\n            //         setAgeDisabled(false);\r\n            //     }\r\n            // }\r\n            // const handleAgeChange = (e) => {\r\n            //     const ageNumber = e.target.value.replace(/\\D/g, '')\r\n            //     if (!ageDisabled && ageNumber) {  \r\n\r\n            //         // const currentDate = new Date();\r\n            //         // currentDate.setDate(15);\r\n            //         // currentDate.setMonth(5);\r\n            //         // const estDob = moment(currentDate.toISOString());\r\n            //         // const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //         //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n\r\n            //         //.childDob =moment(daysOld).format(\"YYYY-MM-DD\")\r\n            //     }\r\n            //     //setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n            // }\r\n            const handleInputChangeBasic = e => {  \r\n                setErrors({...temp, [e.target.name]:\"\"})      \r\n                setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n                // if(e.target.name==='firstName' && e.target.value!==''){\r\n                //     const name = alphabetOnly(e.target.value)\r\n                //     setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n                // }\r\n                // if(e.target.name==='lastName' && e.target.value!==''){\r\n                //     const name = alphabetOnly(e.target.value)\r\n                //     setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n                // }\r\n                // if(e.target.name==='middleName' && e.target.value!==''){\r\n                //     const name = alphabetOnly(e.target.value)\r\n                //     setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n                // }\r\n                // if(e.target.name==='ninNumber' && e.target.value!==''){\r\n                //     const ninNumberValue = checkNINLimit(e.target.value)\r\n                //     setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n                // }\r\n                // if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n                // async function getHosiptalNumber() {\r\n                //     const hosiptalNumber=e.target.value\r\n                //     const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                //             { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                //         );\r\n                //     if(response.data!==true){\r\n                //         setHospitalNumStatus(false)\r\n                //         errors.hospitalNumber=\"\"\r\n                //         setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                //         setHospitalNumStatus2(true)\r\n                //     }else{\r\n                //         errors.hospitalNumber=\"\"\r\n                //         toast.error(\"Error! Hosiptal Number already exist\");\r\n                //         setHospitalNumStatus(true)\r\n                //         setHospitalNumStatus2(false)\r\n                //     }\r\n                // }\r\n                // getHosiptalNumber();\r\n                // } \r\n                        \r\n            }\r\n            const validate = () => {\r\n        \r\n                //temp.nameOfHealthFacility = basicInfo.nameOfHealthFacility ? \"\" : \"Name of Health Facility is required\"\r\n                //temp.ward = basicInfo.ward ? \"\" : \"Ward  is required.\"\r\n                //temp.lga = basicInfo.lga ? \"\" : \"Local Government Area is required.\"\r\n                //temp.state = basicInfo.state ? \"\" : \"State is required.\"\r\n                //temp.date = basicInfo.date ? \"\" : \"Date of Registration is required.\"\r\n                //temp.facilityType = basicInfo.facilityType ? \"\" : \"Facility Type is required.\"\r\n\r\n                temp.hepB0 = immunizationDetail.hepB0 ? \"\" : \"This filled  is required.\"\r\n                temp.opv0 = immunizationDetail.opv0 ? \"\" : \"This filled  is required.\"    \r\n                temp.bcg = immunizationDetail.bcg ? \"\" : \"This filled  is required.\"  \r\n                temp.opv1 = immunizationDetail.opv1 ? \"\" : \"This filled  is required.\" \r\n                temp.penta1 = immunizationDetail.penta1 ? \"\" : \"This filled  is required.\" \r\n                temp.pcv1 = immunizationDetail.pcv1 ? \"\" : \"This filled  is required.\" \r\n                temp.rota1 = immunizationDetail.rota1 ? \"\" : \"This filled  is required.\" \r\n                temp.opv = immunizationDetail.opv ? \"\" : \"This filled is required.\" \r\n                temp.penta2 = immunizationDetail.penta2 ? \"\" : \"This filled is required.\" \r\n                temp.pcv2 = immunizationDetail.pcv2 ? \"\" : \"This filled is required.\" \r\n                temp.rota2 = immunizationDetail.rota2 ? \"\" : \"This filled is required.\"\r\n                temp.opv3 = immunizationDetail.opv3 ? \"\" : \"This filled is required.\"\r\n                temp.penta3 = immunizationDetail.penta3 ? \"\" : \"This filled is required.\"\r\n                temp.penta3 = immunizationDetail.rota2 ? \"\" : \"This filled is required.\"\r\n                temp.pcv3 = immunizationDetail.pcv3 ? \"\" : \"This filled is required.\" \r\n                temp.rota3 = immunizationDetail.rota3 ? \"\" : \"This filled is required.\" \r\n                temp.vitaminA1 = immunizationDetail.vitaminA1 ? \"\" : \"This filled is required.\" \r\n                temp.vitaminA2 = immunizationDetail.vitaminA2 ? \"\" : \"This filled is required.\" \r\n                temp.measles1 = immunizationDetail.measles1 ? \"\" : \"This filled is required.\" \r\n                temp.menA = immunizationDetail.menA? \"\" : \"This filled is required.\"\r\n                temp.measles2 = immunizationDetail.measles2? \"\" : \"This filled is required.\"\r\n                temp.Hpv9yrs = immunizationDetail.Hpv9yrs? \"\" : \"This filled is required.\"\r\n                temp.comments = immunizationDetail.comments? \"\" : \"This filled is required.\" \r\n                \r\n                //VACCINATION FORM VALIDATION\r\n                \r\n                \r\n                    setErrors({ ...temp })\r\n            return Object.values(temp).every(x => x == \"\")\r\n        } \r\n            let temp = { ...errors }\r\n            // const handleSubmit = async (e)=>{\r\n            //     e.preventDefault(); \r\n            //         if(validate()){\r\n            //             setSaving(true)\r\n            //         }\r\n\r\n\r\n            // }\r\n            return(\r\n                <>\r\n\r\n                    <Card className={classes.root}>\r\n                        <CardContent>\r\n                            <div className='col-xl-12 col-lg-12'>\r\n                                <Form>\r\n                                    {/* <div className=\"card\">\r\n                                        <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                            <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                        </div>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"basic-form\">\r\n                                        \r\n                                            <div className=\"row\">\r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label for=\"firstName\">Name Of Health Facility <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                        <Input\r\n                                                            className=\"form-control\"\r\n                                                            type=\"text\"\r\n                                                            name=\"nameOfHealthFacility\"\r\n                                                            id=\"nameOfHealthFacility\"\r\n                                                            value={basicInfo.nameOfHealthFacility}\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        />\r\n                                                        {errors.nameOfHealthFacility !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Ward</Label>\r\n                                                        <Input\r\n                                                            className=\"form-control\"\r\n                                                            type=\"text\"\r\n                                                            name=\"ward\"\r\n                                                            id=\"ward\"\r\n                                                            value={basicInfo.ward}\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                        <input\r\n                                                            className=\"form-control\"\r\n                                                            type=\"text\"\r\n                                                            name=\"lga\"\r\n                                                            id=\"lga\"\r\n                                                            value={basicInfo.lga}\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        />\r\n                                                    {errors.lga !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={\"row\"}>\r\n\r\n                                                    <div className=\"form-group mb-3 col-md-3\">\r\n                                                        <FormGroup>\r\n                                                            <Label>Date</Label>\r\n                                                            <input\r\n                                                                className=\"form-control\"\r\n                                                                name=\"date\"\r\n                                                                type='date'\r\n                                                                id=\"date\"\r\n                                                                onChange={handleInputChangeBasic}\r\n                                                                value={basicInfo.date}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            >\r\n                                                            </input>\r\n                                                            \r\n                                                        </FormGroup>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group  col-md-4\">\r\n                                                        <FormGroup>\r\n                                                            <Label>Facility Type </Label>\r\n                                                            <Input\r\n                                                            className=\"form-control\"\r\n                                                            name=\"facilityType\"\r\n                                                            type='select'\r\n                                                            id=\"facilityType\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.facilityType}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                             <option value=\"\" >Select</option>\r\n                                                            <option value=\"Facility\" >Private</option>\r\n                                                            <option value=\"Community\" >Public</option>\r\n                                                        </Input>\r\n                                                        {errors.facilityType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.facilityType}</span>\r\n                                                        ) : \"\" }\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div> */}\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                            <h5 className=\"card-title\"  style={{color:'#fff'}}> NHMIS TETANUS DIPHTHERIA (TD) REGISTER FOR PREGNANT AND NON PREGNANT WOMEN</h5>\r\n                                        </div>\r\n\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\"> \r\n                                                <FormGroup>                                 \r\n                                                    <Label>Date Of Child Visit</Label>\r\n                                                        <input\r\n                                                            className=\"form-control\"\r\n                                                            type=\"date\"\r\n                                                            name=\"dateOfChildVisit\"\r\n                                                            id=\"dateOfChildVisit\"\r\n                                                            value={basicInfo.dateOfChildVisit}\r\n                                                             onChange={handleDobChange}          \r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        /> \r\n                                                </FormGroup>              \r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Child's Name </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"childName\"\r\n                                                        value={basicInfo.childName}\r\n                                                        id=\"childName\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />  \r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label >Child's Card No </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"childCardNo\"\r\n                                                        value={basicInfo.childCardNo}\r\n                                                        id=\"childCardNo\"\r\n                                                     onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />   \r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label >Follow Up Address  <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                        <input\r\n                                                            className=\"form-control\"\r\n                                                            type=\"text\"\r\n                                                            name=\"followUpAddress\"\r\n                                                            id=\"followUpAddress\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.followUpAddress} \r\n                                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        />\r\n                                                        {errors.followUpAddress !==\"\" ? (\r\n                                                                <span className={classes.error}>{errors.followUpAddress}</span>\r\n                                                        ) : \"\" }           \r\n                                                    </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                        <select\r\n                                                                className=\"form-control\"\r\n                                                                name=\"sexId\"\r\n                                                                id=\"sexId\"\r\n                                                                 onChange={handleInputChangeBasic}\r\n                                                                value={basicInfo.sexId}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            >\r\n                                                                <option value={\"\"}>Select</option>\r\n                                                                <option value={\"male\"}>Male</option>\r\n                                                                <option value={\"female\"}>Female</option>\r\n                                                            </select>\r\n                                                            {errors.sexId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                    <Label >Phone Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <InputGroup> \r\n                                                        <input\r\n                                                            className=\"form-control\"\r\n                                                            type=\"text\"\r\n                                                            name=\"phoneNumber\"\r\n                                                            id=\"phoneNumber\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.phoneNumber} \r\n                                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        />\r\n                                                    </InputGroup>\r\n                                                    {errors.phoneNumber !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    </FormGroup>\r\n                                            </div>                      \r\n                                            <div className=\"form-group mb-3 col-md-2\">\r\n                                                    {/* <FormGroup>\r\n                                                        <Label>Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                        <div className=\"radio\">\r\n                                                            <label>\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    value=\"Actual\"\r\n                                                                    name=\"dateOfBirth\"\r\n                                                                    defaultChecked\r\n                                                                    onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                /> Actual\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div className=\"radio\">\r\n                                                            <label>\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    value=\"Estimated\"\r\n                                                                    name=\"dateOfBirth\"\r\n                                                                    \r\n                                                                    onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                /> Estimated\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </FormGroup> */}\r\n                                            </div>\r\n                                            <div className='row'>\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date OF Birth </Label>\r\n                                                    <input\r\n                                                         className=\"form-control\"\r\n                                                         type=\"date\"\r\n                                                         name=\"dob\"  \r\n                                                         id=\"dob\"\r\n                                                        //max={basicInfo.dateOfRegistration===\"\" ? moment(new Date()).format(\"YYYY-MM-DD\") : basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.Birthdate}\r\n                                                        onChange={handleBirthdateChange}\r\n                                                  \r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div> \r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <div >\r\n                                                    <Label>Age</Label>\r\n                                                    {/* <input\r\n                                                         //type=\"number\"\r\n                                                        // name=\"age\"                                                       \r\n                                                        // className=\"form-control\"                                                        \r\n                                                        // id=\"age\"\r\n                                                        //min=\"5\"\r\n                                                        //value={basicInfo.birthdate}\r\n                                                        //disabled={ageDisabled}\r\n                                                        //onChange={handleAgeChange}\r\n                                                        \r\n                                                        //placeholder={`${calculateAgeInDays()} days old.`}\r\n                                                        //style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    /> */}\r\n                                                    {birthdate && (\r\n                                                            <p>\r\n                                                         {calculateAgeInDays()} week(s) Old.\r\n                                                            </p>\r\n                                                        )} \r\n                                                        </div>\r\n                                                        \r\n                                                   \r\n                                                </FormGroup>\r\n\r\n                                            </div>\r\n                                            </div>\r\n                                            <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                            <h5 className=\"card-title\"  style={{color:'#fff'}}>Antigens </h5>\r\n                                             </div>\r\n                                            { calculateAgeInDays() >= 0 && calculateAgeInDays() <= 2 &&\r\n                                             (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> Hep B.O</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"hepB0\" \r\n                                                    value={immunizationDetail.hepB0}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n                                            </div> )}\r\n                                            {  calculateAgeInDays() <= 2 &&(\r\n                                                <div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> OPV 0</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"opv0\"\r\n                                                    value={immunizationDetail.opv0}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div> )}\r\n                                            {  calculateAgeInDays() <= 44 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> BCG </Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"bcg\"\r\n                                                    value={immunizationDetail.bcg}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            { calculateAgeInDays() >=6 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> OPV 1</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"opv1\"\r\n                                                    value={immunizationDetail.opv1}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            { calculateAgeInDays() >= 6 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> Penta 1</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"penta1\"\r\n                                                    value={immunizationDetail.penta1}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 6 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> PCV 1</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"pcv1\"\r\n                                                    value={immunizationDetail.pcv1}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 6 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> ROTA 1</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"rota1\"\r\n                                                    value={immunizationDetail.rota1}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 10 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> OPV 2</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"opv2\"\r\n                                                    value={immunizationDetail.opv2}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 10 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> PENTA 2</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"penta2\"\r\n                                                    value={immunizationDetail.penta2}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 10 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> PCV 2</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"pcv2\"\r\n                                                    value={immunizationDetail.pcv2}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 10 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> ROTA 2</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"rota2\"\r\n                                                    value={immunizationDetail.rota2}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 14 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> OPV 3</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"opv3\"\r\n                                                    value={immunizationDetail.opv3}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 14 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> PENTA 3</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"penta3\"\r\n                                                    value={immunizationDetail.penta3}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 14 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> PCV 3</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"pcv3\"\r\n                                                    value={immunizationDetail.pcv3}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 14 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> ROTA 3</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"rota3\"\r\n                                                    value={immunizationDetail.rota3}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 14 && calculateAgeInDays() <= 44 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> IPV</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"ipv\"\r\n                                                    value={immunizationDetail.ipv}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 24 && calculateAgeInDays() <= 44 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> VITAMIN A1(100,000IU)</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"vitaminA1\"\r\n                                                    value={immunizationDetail.vitaminA1}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 48 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> VITAMIN A2(200,000IU)</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"vitaminA2\"\r\n                                                    value={immunizationDetail.vitaminA2}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 36 && calculateAgeInDays() <= 44 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> Measle 1</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"measle1\"\r\n                                                    value={immunizationDetail.measle1}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 36 && calculateAgeInDays() <= 92 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> Men A</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"menA\"\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                            {calculateAgeInDays() >= 36 && calculateAgeInDays() <= 44 &&\r\n                                            (<div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> Measle 2R</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"measle2\"\r\n                                                    value={immunizationDetail.measle2}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                           {calculateAgeInDays() >= 72 && calculateAgeInDays() <= 92 &&\r\n                                           ( <div className=\"form-group mb-4 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> HPV (9years to 14 years)</Label>\r\n                                                    <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"hpv9yrs\"\r\n                                                    value={immunizationDetail.hpv9yrs}\r\n                                                    onChange={handleDropdownChange}\r\n                                                    >\r\n                                                    <option value=\"\">Have You Taken The Vaccination</option>\r\n                                                    {dropdownOptions.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                        \r\n                                                    ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n\r\n                                            </div>)}\r\n                                           \r\n                                           <div className=\"form-group mb-6 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label> Comment </Label>\r\n                                                    <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"comment\"\r\n                                                    //onChange={handleImmunizationDetail}\r\n                                                    value={immunizationDetail.comment}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-6 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label>Have you missed any previous vaccine</Label>\r\n                                                     <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"missedVaccine\"\r\n                                                        id=\"missedVaccine\"\r\n                                                        value={immunizationDetail.missedVaccine}\r\n                                                        //onChange={handleInputChangeAttempt}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                    >\r\n                                                        <option value=\"\"> Select </option>\r\n                                                        <option value=\"yes\"> Yes </option>\r\n                                                        <option value=\"no\"> No</option> \r\n\r\n                                            </Input>\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        { immunizationDetail.missedVaccine === 'yes' && (\r\n                                            <div>\r\n                                             ANTIGENMISSED \r\n                                            </div>\r\n\r\n                                        )}\r\n\r\n                                            \r\n                                                            \r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </Form>\r\n                                \r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </>\r\n            )\r\n            }\r\n            \r\n\r\nexport default Immunization\r\n","import React, { useState } from 'react'\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n//import  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst Tetanus =(props)=>{\r\n \r\n            const [clientDetails, setClientDetails] =useState(\r\n                {\r\n                    dateOfClientVisit:\"\",\r\n                    clientCardNo:\"\",\r\n                    clientDob:\"\",\r\n                    clientName:\"\",\r\n                    clientFollowUpAddress:\"\",\r\n                    clientPhoneNumber:\"\"\r\n                }\r\n            )\r\n            // const [basicInfo, setBasicInfo]= useState(\r\n            //     {\r\n            //         nameOfHealthFacility:\"\",\r\n            //         ward:\"\",\r\n            //         lga:\"\",\r\n            //         state:\"\",\r\n            //         date:\"\",\r\n            //         facilityType:\"\"\r\n\r\n    \r\n            //     }\r\n            // )\r\n            const [tetanusDiphtheria, setTetanusDiphtheria]= useState(\r\n                {\r\n                    basicInfo:\"\",\r\n                    td1:\"\",\r\n                    td2:\"\",\r\n                    td3:\"\",\r\n                    td4:\"\",\r\n                    td5:\"\", \r\n                    comment:\"\"\r\n                }\r\n            )\r\n            const [objValues, setObjValues] = useState([]);\r\n            const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n            const [errors, setErrors] = useState({})\r\n            const [patientDTO, setPatientDTO]= useState({\"personInfo\":\"\", })\r\n            \r\n            const history = useHistory();\r\n            const [saving, setSaving] = useState(false);\r\n            const [open, setOpen] = React.useState(false)\r\n            const toggle = () => setOpen(!open);\r\n            const [showContactCard, setShowContactCard] = useState(true);\r\n            const onClickContactCard =() =>{\r\n                setShowContactCard(!showContactCard)\r\n              }\r\n            const [selectedOption, setSelectedOption] = useState('');\r\n            const dropdownOptions = [{\r\n                id: 1,\r\n                name: 'P',\r\n            }, {name: 'NP',\r\n                id: 2}];\r\n            const handleDropdownChange = (event) => {\r\n              setSelectedOption(event.target.value);\r\n            };  \r\n            const handleCancel =()=>{\r\n                history.push({ pathname: '/' });\r\n            }\r\n\r\n            const classes = useStyles();\r\n            \r\n            // const handleInputChangeBasic = e => {  \r\n            //     setErrors({...temp, [e.target.name]:\"\"})      \r\n            //     setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n            //     // if(e.target.name==='firstName' && e.target.value!==''){\r\n            //     //     const name = alphabetOnly(e.target.value)\r\n            //     //     setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n            //     // }\r\n            //     // if(e.target.name==='lastName' && e.target.value!==''){\r\n            //     //     const name = alphabetOnly(e.target.value)\r\n            //     //     setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n            //     // }\r\n            //     // if(e.target.name==='middleName' && e.target.value!==''){\r\n            //     //     const name = alphabetOnly(e.target.value)\r\n            //     //     setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n            //     // }\r\n            //     // if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            //     //     const ninNumberValue = checkNINLimit(e.target.value)\r\n            //     //     setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n            //     // }\r\n            //     // if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            //     // async function getHosiptalNumber() {\r\n            //     //     const hosiptalNumber=e.target.value\r\n            //     //     const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n            //     //             { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n            //     //         );\r\n            //     //     if(response.data!==true){\r\n            //     //         setHospitalNumStatus(false)\r\n            //     //         errors.hospitalNumber=\"\"\r\n            //     //         setObjValues ({...objValues,  uniqueId: e.target.value});\r\n            //     //         setHospitalNumStatus2(true)\r\n            //     //     }else{\r\n            //     //         errors.hospitalNumber=\"\"\r\n            //     //         toast.error(\"Error! Hosiptal Number already exist\");\r\n            //     //         setHospitalNumStatus(true)\r\n            //     //         setHospitalNumStatus2(false)\r\n            //     //     }\r\n            //     // }\r\n            //     // getHosiptalNumber();\r\n            //     // } \r\n                        \r\n            // } \r\n            const handleInputChangeClientDetails = e =>{\r\n                setErrors({...temp, [e.target.name]:\"\"})\r\n                setClientDetails({...clientDetails, [e.target.name]:e.target.value});\r\n            }\r\n            \r\n            let temp = { ...errors }\r\n            const validate = () => {\r\n        \r\n                // temp.nameOfHealthFacility = basicInfo.nameOfHealthFacility ? \"\" : \"Name of Health Facility is required\"\r\n                // temp.ward = basicInfo.ward ? \"\" : \"Ward  is required.\"\r\n                // temp.lga = basicInfo.lga ? \"\" : \"Local Government Area is required.\"\r\n                // temp.state = basicInfo.state ? \"\" : \"State is required.\"\r\n                // temp.date = basicInfo.date ? \"\" : \"Date of Registration is required.\"\r\n                // temp.facilityType = basicInfo.facilityType ? \"\" : \"Facility Type is required.\"\r\n \r\n                //VACCINATION FORM VALIDATION\r\n                //temp.td1 = tetanusDiphtheria.td1 ? \"\" : \"This field is required\"\r\n                //temp.td2 = tetanusDiphtheria.td2 ? \"\" : \"This field is required\"\r\n                //temp.td3 = tetanusDiphtheria.td3 ? \"\" : \"This field is required\"\r\n                //temp.td4 = tetanusDiphtheria.td4 ? \"\" : \"This field is required\"\r\n                //temp.td5 = tetanusDiphtheria.td5 ? \"\" : \"This field is required\"\r\n                //temp.comment = tetanusDiphtheria.comment ? \"\" : \"This field is required\"\r\n            \r\n                    setErrors({ ...temp })\r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n            // const handleSubmit = async (e)=>{\r\n            //     e.preventDefault(); \r\n            //     tetanusDiphtheria.basicInfo=objValues\r\n            //         if(validate()){\r\n            //             // setSaving(true)\r\n            //             const tetanusDiphtheria ={\r\n            //                 td1:\"\",\r\n            //                 td2:\"\",\r\n            //                 td3:\"\",\r\n            //                 td4:\"\",\r\n            //                 td5:\"\", \r\n            //                 comment:\"\"\r\n\r\n            //             }\r\n            //             const basicInfo = {\r\n            //                 tetanusDiphtheria:[\"\"],\r\n            //                 nameOfHealthFacility:\"\",\r\n            //                 ward:\"\",\r\n            //                 lga:\"\",\r\n            //                 state:\"\",\r\n            //                 date:\"\",\r\n            //                 facilityType:\"\"\r\n            //             }\r\n\r\n            //             setSaving(true);\r\n                        \r\n                        \r\n            //         }\r\n            //         try {patientDTO.person=basicInfo;\r\n            //             console.log(basicInfo)\r\n            //         //patientDTO.vaccinationEnrollment=objValues;\r\n            //         const response = await axios.post(`${baseUrl}covid/enrollments`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            //         toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n            //         setSaving(false)\r\n            //         history.push('/');\r\n            //         }catch (error) {   \r\n            //             setSaving(false)             \r\n            //             if(error.response && error.response.data){\r\n            //                 let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n            //                 if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n            //                     toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n            //                 }else{\r\n            //                     toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n            //                 }\r\n            //             }\r\n            //             else{\r\n            //                 toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n            //             }\r\n            //         }\r\n                    \r\n\r\n\r\n            // }\r\n\r\n\r\n            return(\r\n                <>\r\n                    {/* <Card className={classes.root}> */}\r\n                        <CardContent>\r\n                            <div className='col-xl-12 col-lg-12'>\r\n                                <Form>\r\n                                <div className=\"card\">\r\n                                    {/* <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                        <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                    </div> */}\r\n\r\n                                \r\n                                    <div className=\"basic-form\">\r\n                                    \r\n                                        <div >\r\n                                            {/* <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">Name Of Health Facility <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nameOfHealthFacility\"\r\n                                                        id=\"nameOfHealthFacility\"\r\n                                                        value={basicInfo.nameOfHealthFacility}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.nameOfHealthFacility !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div> */}\r\n\r\n                                            {/* <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Ward</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"ward\"\r\n                                                        id=\"ward\"\r\n                                                        value={basicInfo.ward}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        \r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div> */}\r\n\r\n                                            {/* <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lga\"\r\n                                                        id=\"lga\"\r\n                                                        value={basicInfo.lga}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lga !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div> */}\r\n                                        </div>\r\n                                        {/* <div className={\"row\"}>\r\n\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Date</Label>\r\n                                                        <input\r\n                                                            className=\"form-control\"\r\n                                                            name=\"date\"\r\n                                                            type='date'\r\n                                                            id=\"date\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.date}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        >\r\n                                                        </input>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Facility Type </Label>\r\n                                                        <Input\r\n                                                            className=\"form-control\"\r\n                                                            name=\"facilityType\"\r\n                                                            type='select'\r\n                                                            id=\"facilityType\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.facilityType}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                             <option value=\"\" >Select</option>\r\n                                                            <option value=\"Facility\" >Private</option>\r\n                                                            <option value=\"Community\" >Public</option>\r\n                                                        </Input>\r\n                                                        {errors.facilityType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.facilityType}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                        \r\n                                        </div> */}\r\n                                    \r\n                                </div>\r\n                                </div>\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                            <h5 className=\"card-title\"  style={{color:'#fff'}}> National Health Management Information System Child Immunization Register</h5>\r\n                                        </div>\r\n\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"form-group mb-3 col-md-4\">                                    \r\n                                                \r\n                                                        <Label>Date Of Client Visit</Label>\r\n                                                            <input\r\n                                                                className=\"form-control\"\r\n                                                                type=\"date\"\r\n                                                                name=\"dateOfClientVisit\"\r\n                                                                id=\"dateOfClientVisit\"\r\n                                                                value={clientDetails.dateOfClientVisit}\r\n                                                                onChange={handleInputChangeClientDetails}          \r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            />          \r\n                                                \r\n                                                </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Client Card No </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"clientCardNo\"\r\n                                                        id=\"clientCardNo\"\r\n                                                        value={clientDetails.clientCardNo}\r\n                                                        onChange={handleInputChangeClientDetails}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />                 \r\n                                            </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Client Name </Label>\r\n                                                        <input\r\n                                                            className=\"form-control\"\r\n                                                            type=\"text\"\r\n                                                            name=\"clientName\"\r\n                                                            value={clientDetails.clientName}\r\n                                                            id=\"childCardNo\"\r\n                                                            onChange={handleInputChangeClientDetails}\r\n                                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        />     \r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label >Client Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"clientDob\"\r\n                                                        id=\"clientDob\"\r\n                                                        onChange={handleInputChangeClientDetails}\r\n                                                        value={clientDetails.clientDob} \r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.clientDob !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                                ) : \"\" }           \r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label> Client Follow Up Address<span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                            className=\"form-control\"\r\n                                                            type='text'\r\n                                                            name=\"clientFollowUpAddress\"\r\n                                                            id=\"clientFollowUpAddress\"\r\n                                                            onChange={handleInputChangeClientDetails}\r\n                                                            value={clientDetails.clientFollowUpAddress}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                        </input>\r\n                                                        {errors.clientFollowUpAddress !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.sexId}</span>\r\n                                                            ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                             <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label > Client Phone Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"clientPhoneNumber\"\r\n                                                        id=\"clientPhoneNumber\"\r\n                                                        onChange={handleInputChangeClientDetails}\r\n                                                        value={clientDetails.clientPhoneNumber} \r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                {errors.clientPhoneNumber !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                                ) : \"\" }\r\n                                                </FormGroup>\r\n                                             </div>\r\n                                           \r\n\r\n                                                            \r\n                                            </div>\r\n\r\n                                        </div> \r\n                                    </div>\r\n                                    <div className=\"card\">\r\n                                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Tetanus Diphtheria </h5>\r\n                                                    {showContactCard===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaAngleDown /></span> </>)}\r\n                                                </div>\r\n                                                    {showContactCard && (\r\n                                                    <div className=\"card-body\">\r\n                                                        <div className={\"row\"}>\r\n                                                            <div className=\"form-group  col-md-4\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>TD 1 <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        type=\"dropdown\"\r\n                                                                        name=\"tp1\"\r\n                                                                        id=\"tp1\"\r\n                                                                        value={tetanusDiphtheria.selectedOption}\r\n                                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                        onChange={handleDropdownChange}\r\n                                                                        >\r\n                                                                        <option value=\"\">Select</option>\r\n                                                                        {dropdownOptions.map((value, index) => (\r\n                                                                            <option key={index} value={value.id}>\r\n                                                                                {value.name}\r\n                                                                            </option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n                                                                    {errors.tp1 !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.tp1}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    \r\n                                                                </FormGroup>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-md-4\">\r\n                                                            <FormGroup>\r\n                                                                    <Label>TD 2 <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        type=\"dropdown\"\r\n                                                                        name=\"tp2\"\r\n                                                                        id=\"tp2\"\r\n                                                                        value={tetanusDiphtheria.selectedOption}\r\n                                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                        onChange={handleDropdownChange}\r\n                                                                        >\r\n                                                                        <option value=\"\">Select</option>\r\n                                                                        {dropdownOptions.map((value, index) => (\r\n                                                                            <option key={index} value={value.id}>\r\n                                                                                {value.name}\r\n                                                                            </option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n                                                                    {errors.tp1 !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.tp1}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    \r\n                                                                </FormGroup>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-md-4\">\r\n                                                            <FormGroup>\r\n                                                                    <Label>TD 3 <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        type=\"dropdown\"\r\n                                                                        name=\"tp3\"\r\n                                                                        id=\"tp3\"\r\n                                                                        value={tetanusDiphtheria.selectedOption}\r\n                                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                        onChange={handleDropdownChange}\r\n                                                                        >\r\n                                                                        <option value=\"\">Select</option>\r\n                                                                        {dropdownOptions.map((value, index) => (\r\n                                                                            <option key={index} value={value.id}>\r\n                                                                                {value.name}\r\n                                                                            </option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n                                                                    {errors.tp3 !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.tp1}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    \r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"form-group  col-md-4\">\r\n                                                            <FormGroup>\r\n                                                                    <Label>TD 4 <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        type=\"dropdown\"\r\n                                                                        name=\"tp4\"\r\n                                                                        id=\"tp4\"\r\n                                                                        value={tetanusDiphtheria.selectedOption}\r\n                                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                        onChange={handleDropdownChange}\r\n                                                                        >\r\n                                                                        <option value=\"\">Select</option>\r\n                                                                        {dropdownOptions.map((value, index) => (\r\n                                                                            <option key={index} value={value.id}>\r\n                                                                                {value.name}\r\n                                                                            </option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n                                                                    {errors.tp4 !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.tp4}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    \r\n                                                                </FormGroup>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group  col-md-4\">\r\n                                                            <FormGroup>\r\n                                                                    <Label>TD 5 <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        type=\"dropdown\"\r\n                                                                        name=\"tp5\"\r\n                                                                        id=\"tp5\"\r\n                                                                        value={tetanusDiphtheria.selectedOption}\r\n                                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                        onChange={handleDropdownChange}\r\n                                                                        >\r\n                                                                        <option value=\"\">Select</option>\r\n                                                                        {dropdownOptions.map((value, index) => (\r\n                                                                            <option key={index} value={value.id}>\r\n                                                                                {value.name}\r\n                                                                            </option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n                                                                    {errors.tp5 !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.tp5}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    \r\n                                                                </FormGroup>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group  col-md-4\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>Comment <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                    <input\r\n                                                                        className=\"form-control\"\r\n                                                                        type=\"text\"\r\n                                                                        name=\"comment\"\r\n                                                                        id=\"comment\"\r\n                                                                        value={tetanusDiphtheria.selectedOption}\r\n                                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                        //onChange={handleInputChangeBasic}\r\n                                                                     />\r\n                                                                   \r\n                                                                    {errors.comment !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.comment}</span>\r\n                                                                        ) : \"\" }\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        \r\n                                                    </div>\r\n                                                    )}\r\n                                            </div>\r\n                                    <br />\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                //onClick={handleSubmit}\r\n                                //disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n                    {/* </Card> */}\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                {/* <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body> */}\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n                               </> \r\n                               //</Form>\r\n                            //</div>\r\n                        //</CardContent>\r\n                    //</Card>\r\n                //</>\r\n            )\r\n            }\r\n\r\nexport default Tetanus\r\n","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport Biometrics from './Biometric'\r\nimport AddmissionHome from './../Admission/AddmissionHome';\r\nimport PatientVaccinationHistory from './../Vaccination/VaccinationHistory'\r\nimport ImmunizationHome from '../Immunization/ImmunizationHome';\r\nimport Tetanus from '../Tetanus/TetanusHome';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n\r\n     }, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >COVID-19 /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='addmission' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='vaccination' &&( <PatientVaccinationHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='discharge' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='icu' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)} \r\n          {activeContent.route==='immunization-patient' &&( <ImmunizationHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='tetanus-patient' &&( <Tetanus patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)} \r\n           \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:1,\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    //const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"vaccinationEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [showContactCard, setShowContactCard] = useState(true);\r\n     const [vaccine, setVaccine] = useState([]);\r\n     //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n     const [objValues, setObjValues] = useState(\r\n        {   adverseEffect: \"\",\r\n            batchNumber:\"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: \"\",\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\",\r\n            knownMedicalCondition: \"\",\r\n            medicalCondition: \"\",\r\n            occupation: \"\",\r\n            vaccineId: \"\",\r\n            visitDate: \"\",\r\n            patientId: \"\",\r\n            visitId: \"\",\r\n            workInHealthSector: \"\"\r\n        });\r\n     \r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    let temp = { ...errors }\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        VACCINE();        \r\n        GetCountry();\r\n        setStateByCountryId()\r\n        COVID_ADVERSE_EFFECT()\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            toast.error('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    //COVID_ADVERSE_EFFECT\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    // const loadTopLevelCountry = useCallback(async () => {\r\n    //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n    //     settopLevelUnitCountryOptions(response.data);\r\n    // }, []);\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n    const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n            setStateByCountryId(1); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId() {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/1`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data.sort());\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n        }\r\n                \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value === \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value === \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        const ageNumber = e.target.value.replace(/\\D/g, '')\r\n        if (!ageDisabled && ageNumber) {  \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n            if(ageNumber!=='' && ageNumber>=60){\r\n                toggle()\r\n            }\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})      \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        \r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n           // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\"         \r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            setSaving(true)\r\n            let newConatctsInfo=[]            \r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                //patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.vaccinationEnrollment=objValues;\r\n                const response = await axios.post(`${baseUrl}covid/enrollments`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                setSaving(false)\r\n                history.push('/');\r\n            } catch (error) {   \r\n                setSaving(false)             \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }  \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }          \r\n    }      \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setRelatives({...relatives, [inputName]: NumberValue})    \r\n    }\r\n    // const checkPhoneNumberBasic=(e, inputName)=>{\r\n    //     const limit = 10;\r\n    //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    // } \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n    const handleCheckBoxworkInHealthSector =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['workInHealthSector']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['workInHealthSector']: false}); \r\n        }\r\n    }\r\n    \r\n    const handleInputChangePhoneNumber=(e, inputName)=>{\r\n        const limit = 11;\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setBasicInfo({...basicInfo, [inputName]: NumberValue})\r\n    }\r\n    const checkNumberLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    const handleCheckBoxknownMedicalCondition =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: false});  \r\n        }\r\n    }\r\n    const onClickContactCard =() =>{\r\n      setShowContactCard(!showContactCard)\r\n    }\r\n    const onClickRelativeCard =() =>{\r\n      setShowRelative(!showRelative)\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >COVID-19 /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration===\"\" ? moment(new Date()).format(\"YYYY-MM-DD\") : basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        \r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"5\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                                <p><b style={{color:\"red\"}}>{basicInfo.age!==\"\" && basicInfo.age< 0 ? \"The minimum age is 5\" : \" \"} </b></p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                    {showContactCard===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showContactCard && (\r\n                                  <div className=\"card-body\">\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Phone Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      maxLength={5}\r\n                                                      name=\"phoneNumber\"\r\n                                                      id=\"phoneNumber\"\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'phoneNumber')}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                                  {errors.phoneNumber !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                      ) : \"\" }\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Alt. Phone Number</Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      value={basicInfo.altPhonenumber}\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                      \r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"altPhonenumber\"\r\n                                                    id=\"altPhonenumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'altPhonenumber')}}\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                 />\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Email</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"email\"\r\n                                                      name=\"email\"\r\n                                                      id=\"email\"\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      value={basicInfo.email}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      required\r\n                                                  />\r\n                                                \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"row\">\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Country <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"countryId\"\r\n                                                      id=\"countryId\"\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      value={basicInfo.countryId}\r\n                                                      disabled\r\n                                                      onChange={getStates}\r\n                                                      >\r\n                                                      <option value={\"\"}>Select</option>\r\n                                                      {countries.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.countryId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.countryId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"stateId\"\r\n                                                      id=\"stateId\"\r\n                                                      value={basicInfo.stateId}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={getProvinces}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {states.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.stateId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.stateId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Province/District/LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"district\"\r\n                                                      id=\"district\"\r\n                                                      value={basicInfo.district}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {provinces.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.district !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.district}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Street Address <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"address\"\r\n                                                      id=\"address\"\r\n                                                      value={basicInfo.address}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                  />\r\n                                                {errors.address !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.address}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Landmark</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"landmark\"\r\n                                                      id=\"landmark\"\r\n                                                      value={basicInfo.landmark}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      \r\n                                                  />\r\n                                                  \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                    {showRelative===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showRelative && (\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        {/* <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        /> */}\r\n                                                                        <Input\r\n                                                                            type=\"text\"\r\n                                                                            name=\"phone\"\r\n                                                                            id=\"phone\"\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                            value={relatives.phone}\r\n                                                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {errors.phone !==\"\" ? (\r\n                                                                            <span className={classes.error}>{errors.phone}</span>\r\n                                                                            ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        {/* <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton> */}\r\n                                    {/* </div> */}\r\n                                </div>\r\n                                )}\r\n                            </div>\r\n                            {/* Adding First DOSAGE FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>COVID-19 First Dosage</h5>\r\n                                </div>\r\n\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-4\">                                    \r\n                            <div className=\"form-check custom-checkbox ml-1 \">\r\n                                <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                name=\"workInHealthSector\"\r\n                                id=\"workInHealthSector\"                                        \r\n                                onChange={handleCheckBoxworkInHealthSector}\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"workInHealthSector\"\r\n                                >\r\n                                Do you work in the Health sector ?\r\n                                </label>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                        \r\n                            <div className=\"form-check custom-checkbox ml-1 \">\r\n                                <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                name=\"knownMedicalCondition\"\r\n                                id=\"knownMedicalCondition\"                                        \r\n                                onChange={handleCheckBoxknownMedicalCondition}\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"knownMedicalCondition\"\r\n                                >\r\n                                Any known medical condition ?\r\n                                </label>\r\n                            </div>\r\n                            </div>\r\n                            {objValues.knownMedicalCondition===true &&(                                    \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label for=\"knownMedicalCondition\">Medical conditions </Label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            name=\"medicalCondition\"\r\n                                            value={basicInfo.medicalCondition}\r\n                                            id=\"medicalCondition\"\r\n                                            onChange={handleInputChangeBasic}\r\n                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                \r\n                            </div>\r\n                            )}\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                          <FormGroup>\r\n                                          <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                          <Input \r\n                                              type=\"select\"\r\n                                              name=\"vaccine\"\r\n                                              id=\"vaccine\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccine} \r\n                                          >\r\n                                              <option value=\"\" >Select</option>\r\n                                              {vaccine.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.name}\r\n                                                </option>\r\n                                            ))}\r\n                                          </Input>\r\n\r\n                                         \r\n                                          {errors.vaccine !==\"\" ? (\r\n                                                  <span className={classes.error}>{errors.vaccine}</span>\r\n                                          ) : \"\" }           \r\n                                          </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Date of First Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                                                             \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"select\"\r\n                                              name=\"location\"\r\n                                              id=\"location\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.location} \r\n                                          >\r\n                                              <option value=\"\" >Select</option>\r\n                                              <option value=\"Facility\" >Facility</option>\r\n                                              <option value=\"Community\" >Community</option>\r\n                                          </Input>\r\n                                      </InputGroup> \r\n                                      {errors.location !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.location}</span>\r\n                                      ) : \"\" }                                        \r\n                                      </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Facility Name </Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"text\"\r\n                                              name=\"vaccinationFacility\"\r\n                                              id=\"vaccinationFacility\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccinationFacility} \r\n                                          >\r\n                                          </Input>\r\n                                      </InputGroup> \r\n                                      {errors.vaccinationFacility !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                      ) : \"\" }                                        \r\n                                      </FormGroup>\r\n                              </div>\r\n                              )}\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.batchNumber !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.batchNumber}</span>\r\n                                      ) : \"\" }                                         \r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Yes\" >Yes</option>\r\n                                        <option value=\"No\" >No</option>\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.adverseEffect==='Yes' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Reaction Type (Adverse Effect)</Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffectOption\"\r\n                                        id=\"adverseEffectOption\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffectOption} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}      \r\n                            </div>\r\n\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF First DOSAGE */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport { MemoryRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Home from \"./main/webapp/jsx/components/Home\";\r\nimport PatientDetail from \"./main/webapp/jsx/components/Patient/PatientDetail\";\r\nimport RegisterPatientPage from \"./main/webapp/jsx/components/Patient/RegisterPatient\";\r\nimport EnrollPatientPage from \"./main/webapp/jsx/components/Patient/EnrollPatient\";\r\nimport UpdatePatientEnrollment from \"./main/webapp/jsx/components/Patient/UpdatePatientEnrollment\";\r\nimport Immunization from \"./main/webapp/jsx/components/Immunization/ImmunizationHome\";\r\nimport Tetanus from \"./main/webapp/jsx/components/Tetanus/TetanusHome\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\n\r\nconst queryClientSettings = {\r\n  defaultOptions: {\r\n    queries: {\r\n      retry: 2,\r\n      refetchOnMount: true,\r\n      refetchOnWindowFocus: true,\r\n      refetchOnReconnect: true,\r\n      cacheTime: Infinity,\r\n      refetchInterval: 3.6e6, //1 hour\r\n      refetchIntervalInBackground: true,\r\n      suspense: false,\r\n      staleTime: Infinity,\r\n    },\r\n    mutations: {\r\n      retry: 2,\r\n    },\r\n  },\r\n};\r\n\r\nconst queryClient = new QueryClient(queryClientSettings);\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <QueryClientProvider client={queryClient}>\r\n        <div>\r\n          <ToastContainer />\r\n          {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route path=\"/tetanus-patient\">\r\n              <Tetanus />\r\n            </Route>\r\n            <Route path=\"/immunization-patient\">\r\n              <Immunization />\r\n            </Route>\r\n            <Route path=\"/patient-history\">\r\n              <PatientDetail />\r\n            </Route>\r\n            <Route path=\"/register-patient\">\r\n              <RegisterPatientPage />\r\n            </Route>\r\n            <Route path=\"/enroll-patient\">\r\n              <EnrollPatientPage />\r\n            </Route>\r\n            <Route path=\"/update-patient\">\r\n              <UpdatePatientEnrollment />\r\n            </Route>\r\n\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </QueryClientProvider>\r\n    </Router>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}